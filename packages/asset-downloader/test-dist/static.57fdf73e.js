(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === 'object' && typeof module === 'object')
    module.exports = factory();
  else if (typeof define === 'function' && define.amd) define([], factory);
  else {
    var a = factory();
    for (var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
  }
})(typeof self !== 'undefined' ? self : this, function() {
  return /******/ (function(modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {}; // The require function
    /******/
    /******/ /******/ function __webpack_require__(moduleId) {
      /******/
      /******/ // Check if module is in cache
      /******/ if (installedModules[moduleId]) {
        /******/ return installedModules[moduleId].exports;
        /******/
      } // Create a new module (and put it into the cache)
      /******/ /******/ var module = (installedModules[moduleId] = {
        /******/ i: moduleId,
        /******/ l: false,
        /******/ exports: {},
        /******/
      }); // Execute the module function
      /******/
      /******/ /******/ modules[moduleId].call(
        module.exports,
        module,
        module.exports,
        __webpack_require__
      ); // Flag the module as loaded
      /******/
      /******/ /******/ module.l = true; // Return the exports of the module
      /******/
      /******/ /******/ return module.exports;
      /******/
    } // expose the modules object (__webpack_modules__)
    /******/
    /******/
    /******/ /******/ __webpack_require__.m = modules; // expose the module cache
    /******/
    /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
    /******/
    /******/ /******/ __webpack_require__.d = function(exports, name, getter) {
      /******/ if (!__webpack_require__.o(exports, name)) {
        /******/ Object.defineProperty(exports, name, {
          /******/ configurable: false,
          /******/ enumerable: true,
          /******/ get: getter,
          /******/
        });
        /******/
      }
      /******/
    }; // getDefaultExport function for compatibility with non-harmony modules
    /******/
    /******/ /******/ __webpack_require__.n = function(module) {
      /******/ var getter =
        module && module.__esModule
          ? /******/ function getDefault() {
              return module['default'];
            }
          : /******/ function getModuleExports() {
              return module;
            };
      /******/ __webpack_require__.d(getter, 'a', getter);
      /******/ return getter;
      /******/
    }; // Object.prototype.hasOwnProperty.call
    /******/
    /******/ /******/ __webpack_require__.o = function(object, property) {
      return Object.prototype.hasOwnProperty.call(object, property);
    }; // __webpack_public_path__
    /******/
    /******/ /******/ __webpack_require__.p = '/'; // Load entry module and return exports
    /******/
    /******/ /******/ return __webpack_require__((__webpack_require__.s = 104));
    /******/
  })(
    /************************************************************************/
    /******/ [
      /* 0 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        if (true) {
          module.exports = __webpack_require__(105);
        } else {
          module.exports = require('./cjs/react.development.js');
        }

        /***/
      },
      /* 1 */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (false) {
          var REACT_ELEMENT_TYPE =
            (typeof Symbol === 'function' &&
              Symbol.for &&
              Symbol.for('react.element')) ||
            0xeac7;

          var isValidElement = function(object) {
            return (
              typeof object === 'object' &&
              object !== null &&
              object.$$typeof === REACT_ELEMENT_TYPE
            );
          };

          // By explicitly using `prop-types` you are opting into new development behavior.
          // http://fb.me/prop-types-in-prod
          var throwOnDirectAccess = true;
          module.exports = require('./factoryWithTypeCheckers')(
            isValidElement,
            throwOnDirectAccess
          );
        } else {
          // By explicitly using `prop-types` you are opting into new production behavior.
          // http://fb.me/prop-types-in-prod
          module.exports = __webpack_require__(116)();
        }

        /***/
      },
      /* 2 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var NODE_ENV = 'production';

        var invariant = function(condition, format, a, b, c, d, e, f) {
          if (NODE_ENV !== 'production') {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          }

          if (!condition) {
            var error;
            if (format === undefined) {
              error = new Error(
                'Minified exception occurred; use the non-minified dev environment ' +
                  'for the full error message and additional helpful warnings.'
              );
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                })
              );
              error.name = 'Invariant Violation';
            }

            error.framesToPop = 1; // we don't care about invariant's own frame
            throw error;
          }
        };

        module.exports = invariant;

        /***/
      },
      /* 3 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var bind = __webpack_require__(68);
        var isBuffer = __webpack_require__(69);

        /*global toString:true*/

        // utils is a library of generic helper functions non-specific to axios

        var toString = Object.prototype.toString;

        /**
         * Determine if a value is an Array
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Array, otherwise false
         */
        function isArray(val) {
          return toString.call(val) === '[object Array]';
        }

        /**
         * Determine if a value is an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an ArrayBuffer, otherwise false
         */
        function isArrayBuffer(val) {
          return toString.call(val) === '[object ArrayBuffer]';
        }

        /**
         * Determine if a value is a FormData
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an FormData, otherwise false
         */
        function isFormData(val) {
          return typeof FormData !== 'undefined' && val instanceof FormData;
        }

        /**
         * Determine if a value is a view on an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
         */
        function isArrayBufferView(val) {
          var result;
          if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {
            result = ArrayBuffer.isView(val);
          } else {
            result = val && val.buffer && val.buffer instanceof ArrayBuffer;
          }
          return result;
        }

        /**
         * Determine if a value is a String
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a String, otherwise false
         */
        function isString(val) {
          return typeof val === 'string';
        }

        /**
         * Determine if a value is a Number
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Number, otherwise false
         */
        function isNumber(val) {
          return typeof val === 'number';
        }

        /**
         * Determine if a value is undefined
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if the value is undefined, otherwise false
         */
        function isUndefined(val) {
          return typeof val === 'undefined';
        }

        /**
         * Determine if a value is an Object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Object, otherwise false
         */
        function isObject(val) {
          return (
            val !== null &&
            (typeof val === 'undefined' ? 'undefined' : _typeof(val)) ===
              'object'
          );
        }

        /**
         * Determine if a value is a Date
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Date, otherwise false
         */
        function isDate(val) {
          return toString.call(val) === '[object Date]';
        }

        /**
         * Determine if a value is a File
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a File, otherwise false
         */
        function isFile(val) {
          return toString.call(val) === '[object File]';
        }

        /**
         * Determine if a value is a Blob
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Blob, otherwise false
         */
        function isBlob(val) {
          return toString.call(val) === '[object Blob]';
        }

        /**
         * Determine if a value is a Function
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Function, otherwise false
         */
        function isFunction(val) {
          return toString.call(val) === '[object Function]';
        }

        /**
         * Determine if a value is a Stream
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Stream, otherwise false
         */
        function isStream(val) {
          return isObject(val) && isFunction(val.pipe);
        }

        /**
         * Determine if a value is a URLSearchParams object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a URLSearchParams object, otherwise false
         */
        function isURLSearchParams(val) {
          return (
            typeof URLSearchParams !== 'undefined' &&
            val instanceof URLSearchParams
          );
        }

        /**
         * Trim excess whitespace off the beginning and end of a string
         *
         * @param {String} str The String to trim
         * @returns {String} The String freed of excess whitespace
         */
        function trim(str) {
          return str.replace(/^\s*/, '').replace(/\s*$/, '');
        }

        /**
         * Determine if we're running in a standard browser environment
         *
         * This allows axios to run in a web worker, and react-native.
         * Both environments support XMLHttpRequest, but not fully standard globals.
         *
         * web workers:
         *  typeof window -> undefined
         *  typeof document -> undefined
         *
         * react-native:
         *  navigator.product -> 'ReactNative'
         */
        function isStandardBrowserEnv() {
          if (
            typeof navigator !== 'undefined' &&
            navigator.product === 'ReactNative'
          ) {
            return false;
          }
          return (
            typeof window !== 'undefined' && typeof document !== 'undefined'
          );
        }

        /**
         * Iterate over an Array or an Object invoking a function for each item.
         *
         * If `obj` is an Array callback will be called passing
         * the value, index, and complete array for each item.
         *
         * If 'obj' is an Object callback will be called passing
         * the value, key, and complete object for each property.
         *
         * @param {Object|Array} obj The object to iterate
         * @param {Function} fn The callback to invoke for each item
         */
        function forEach(obj, fn) {
          // Don't bother if no value provided
          if (obj === null || typeof obj === 'undefined') {
            return;
          }

          // Force an array if not already something iterable
          if (
            (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !==
              'object' &&
            !isArray(obj)
          ) {
            /*eslint no-param-reassign:0*/
            obj = [obj];
          }

          if (isArray(obj)) {
            // Iterate over array values
            for (var i = 0, l = obj.length; i < l; i++) {
              fn.call(null, obj[i], i, obj);
            }
          } else {
            // Iterate over object keys
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) {
                fn.call(null, obj[key], key, obj);
              }
            }
          }
        }

        /**
         * Accepts varargs expecting each argument to be an object, then
         * immutably merges the properties of each object and returns result.
         *
         * When multiple objects contain the same key the later object in
         * the arguments list will take precedence.
         *
         * Example:
         *
         * ```js
         * var result = merge({foo: 123}, {foo: 456});
         * console.log(result.foo); // outputs 456
         * ```
         *
         * @param {Object} obj1 Object to merge
         * @returns {Object} Result of all merge properties
         */
        function merge() /* obj1, obj2, obj3, ... */ {
          var result = {};
          function assignValue(val, key) {
            if (
              _typeof(result[key]) === 'object' &&
              (typeof val === 'undefined' ? 'undefined' : _typeof(val)) ===
                'object'
            ) {
              result[key] = merge(result[key], val);
            } else {
              result[key] = val;
            }
          }

          for (var i = 0, l = arguments.length; i < l; i++) {
            forEach(arguments[i], assignValue);
          }
          return result;
        }

        /**
         * Extends object a by mutably adding to it the properties of object b.
         *
         * @param {Object} a The object to be extended
         * @param {Object} b The object to copy properties from
         * @param {Object} thisArg The object to bind function to
         * @return {Object} The resulting value of object a
         */
        function extend(a, b, thisArg) {
          forEach(b, function assignValue(val, key) {
            if (thisArg && typeof val === 'function') {
              a[key] = bind(val, thisArg);
            } else {
              a[key] = val;
            }
          });
          return a;
        }

        module.exports = {
          isArray: isArray,
          isArrayBuffer: isArrayBuffer,
          isBuffer: isBuffer,
          isFormData: isFormData,
          isArrayBufferView: isArrayBufferView,
          isString: isString,
          isNumber: isNumber,
          isObject: isObject,
          isUndefined: isUndefined,
          isDate: isDate,
          isFile: isFile,
          isBlob: isBlob,
          isFunction: isFunction,
          isStream: isStream,
          isURLSearchParams: isURLSearchParams,
          isStandardBrowserEnv: isStandardBrowserEnv,
          forEach: forEach,
          merge: merge,
          extend: extend,
          trim: trim,
        };

        /***/
      },
      /* 4 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = whitespace;

        var fromCode = String.fromCharCode;
        var re = /\s/;

        /* Check if the given character code, or the character
 * code at the first character, is a whitespace character. */
        function whitespace(character) {
          return re.test(
            typeof character === 'number'
              ? fromCode(character)
              : character.charAt(0)
          );
        }

        /***/
      },
      /* 5 */
      /***/ function(module, exports) {
        /*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
        // css base code, injected by the css-loader
        module.exports = function(useSourceMap) {
          var list = [];

          // return the list of modules as css string
          list.toString = function toString() {
            return this.map(function(item) {
              var content = cssWithMappingToString(item, useSourceMap);
              if (item[2]) {
                return '@media ' + item[2] + '{' + content + '}';
              } else {
                return content;
              }
            }).join('');
          };

          // import a list of modules into the list
          list.i = function(modules, mediaQuery) {
            if (typeof modules === 'string') modules = [[null, modules, '']];
            var alreadyImportedModules = {};
            for (var i = 0; i < this.length; i++) {
              var id = this[i][0];
              if (typeof id === 'number') alreadyImportedModules[id] = true;
            }
            for (i = 0; i < modules.length; i++) {
              var item = modules[i];
              // skip already imported module
              // this implementation is not 100% perfect for weird media query combinations
              //  when a module is imported multiple times with different media queries.
              //  I hope this will never occur (Hey this way we have smaller bundles)
              if (
                typeof item[0] !== 'number' ||
                !alreadyImportedModules[item[0]]
              ) {
                if (mediaQuery && !item[2]) {
                  item[2] = mediaQuery;
                } else if (mediaQuery) {
                  item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
                }
                list.push(item);
              }
            }
          };
          return list;
        };

        function cssWithMappingToString(item, useSourceMap) {
          var content = item[1] || '';
          var cssMapping = item[3];
          if (!cssMapping) {
            return content;
          }

          if (useSourceMap && typeof btoa === 'function') {
            var sourceMapping = toComment(cssMapping);
            var sourceURLs = cssMapping.sources.map(function(source) {
              return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
            });

            return [content]
              .concat(sourceURLs)
              .concat([sourceMapping])
              .join('\n');
          }

          return [content].join('\n');
        }

        // Adapted from convert-source-map (MIT)
        function toComment(sourceMap) {
          // eslint-disable-next-line no-undef
          var base64 = btoa(
            unescape(encodeURIComponent(JSON.stringify(sourceMap)))
          );
          var data =
            'sourceMappingURL=data:application/json;charset=utf-8;base64,' +
            base64;

          return '/*# ' + data + ' */';
        }

        /***/
      },
      /* 6 */
      /***/ function(module, exports) {
        module.exports = extend;

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        function extend() {
          var target = {};

          for (var i = 0; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        }

        /***/
      },
      /* 7 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.getSiteData = exports.getRouteProps = exports.cleanPath = exports.scrollTo = exports.onLoading = exports.prefetch = exports.Link = exports.NavLink = exports.Redirect = exports.Router = exports.PrefetchWhenSeen = exports.Prefetch = exports.withLoading = exports.Loading = exports.withSiteData = exports.SiteData = exports.withRouteData = exports.RouteData = exports.Head = exports.withRouter = exports.matchPath = exports.Switch = exports.Route = exports.Prompt = undefined;

        var _reactRouterDom = __webpack_require__(10);

        Object.defineProperty(exports, 'Prompt', {
          enumerable: true,
          get: function get() {
            return _reactRouterDom.Prompt;
          },
        });
        Object.defineProperty(exports, 'Route', {
          enumerable: true,
          get: function get() {
            return _reactRouterDom.Route;
          },
        });
        Object.defineProperty(exports, 'Switch', {
          enumerable: true,
          get: function get() {
            return _reactRouterDom.Switch;
          },
        });
        Object.defineProperty(exports, 'matchPath', {
          enumerable: true,
          get: function get() {
            return _reactRouterDom.matchPath;
          },
        });
        Object.defineProperty(exports, 'withRouter', {
          enumerable: true,
          get: function get() {
            return _reactRouterDom.withRouter;
          },
        });

        var _reactHelmet = __webpack_require__(32);

        Object.defineProperty(exports, 'Head', {
          enumerable: true,
          get: function get() {
            return _reactHelmet.Helmet;
          },
        });

        var _RouteData2 = __webpack_require__(168);

        Object.defineProperty(exports, 'withRouteData', {
          enumerable: true,
          get: function get() {
            return _RouteData2.withRouteData;
          },
        });

        var _SiteData2 = __webpack_require__(200);

        Object.defineProperty(exports, 'withSiteData', {
          enumerable: true,
          get: function get() {
            return _SiteData2.withSiteData;
          },
        });

        var _Loading2 = __webpack_require__(201);

        Object.defineProperty(exports, 'withLoading', {
          enumerable: true,
          get: function get() {
            return _Loading2.withLoading;
          },
        });

        var _Link = __webpack_require__(202);

        Object.defineProperty(exports, 'NavLink', {
          enumerable: true,
          get: function get() {
            return _Link.NavLink;
          },
        });
        Object.defineProperty(exports, 'Link', {
          enumerable: true,
          get: function get() {
            return _Link.Link;
          },
        });

        var _methods = __webpack_require__(14);

        Object.defineProperty(exports, 'prefetch', {
          enumerable: true,
          get: function get() {
            return _methods.prefetch;
          },
        });
        Object.defineProperty(exports, 'onLoading', {
          enumerable: true,
          get: function get() {
            return _methods.onLoading;
          },
        });

        var _shared = __webpack_require__(9);

        Object.defineProperty(exports, 'cleanPath', {
          enumerable: true,
          get: function get() {
            return _shared.cleanPath;
          },
        });

        var _RouteData3 = _interopRequireDefault(_RouteData2);

        var _SiteData3 = _interopRequireDefault(_SiteData2);

        var _Loading3 = _interopRequireDefault(_Loading2);

        var _Prefetch2 = __webpack_require__(203);

        var _Prefetch3 = _interopRequireDefault(_Prefetch2);

        var _PrefetchWhenSeen2 = __webpack_require__(81);

        var _PrefetchWhenSeen3 = _interopRequireDefault(_PrefetchWhenSeen2);

        var _Router2 = __webpack_require__(204);

        var _Router3 = _interopRequireDefault(_Router2);

        var _Redirect2 = __webpack_require__(213);

        var _Redirect3 = _interopRequireDefault(_Redirect2);

        var _scrollTo2 = __webpack_require__(84);

        var _scrollTo3 = _interopRequireDefault(_scrollTo2);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.RouteData = _RouteData3.default;

        // React-Static Components

        exports.SiteData = _SiteData3.default;
        exports.Loading = _Loading3.default;
        exports.Prefetch = _Prefetch3.default;
        exports.PrefetchWhenSeen = _PrefetchWhenSeen3.default;
        exports.Router = _Router3.default;
        exports.Redirect = _Redirect3.default;

        // Public Utils

        exports.scrollTo = _scrollTo3.default;

        // Private Utils

        // Deprecations
        var getRouteProps = (exports.getRouteProps = function getRouteProps() {
          (0, _shared.deprecate)('getRouteProps', 'withRouteData');
          return _methods.withRouteData.apply(undefined, arguments);
        });
        var getSiteData = (exports.getSiteData = function getSiteData() {
          (0, _shared.deprecate)('getSiteData', 'withSiteData');
          return _methods.withSiteData.apply(undefined, arguments);
        });

        /***/
      },
      /* 8 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright 2014-2015, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         */

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var __DEV__ = 'production' !== 'production';

        var warning = function() {};

        if (__DEV__) {
          warning = function(condition, format, args) {
            var len = arguments.length;
            args = new Array(len > 2 ? len - 2 : 0);
            for (var key = 2; key < len; key++) {
              args[key - 2] = arguments[key];
            }
            if (format === undefined) {
              throw new Error(
                '`warning(condition, format, ...args)` requires a warning ' +
                  'message argument'
              );
            }

            if (format.length < 10 || /^[s\W]*$/.test(format)) {
              throw new Error(
                'The warning format should be able to uniquely identify this ' +
                  'warning. Please, use a more descriptive format than: ' +
                  format
              );
            }

            if (!condition) {
              var argIndex = 0;
              var message =
                'Warning: ' +
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                });
              if (typeof console !== 'undefined') {
                console.error(message);
              }
              try {
                // This error was thrown as a convenience so that you can use this stack
                // to find the callsite that caused this warning to fire.
                throw new Error(message);
              } catch (x) {}
            }
          };
        }

        module.exports = warning;

        /***/
      },
      /* 9 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof2 =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _typeof =
          typeof Symbol === 'function' && _typeof2(Symbol.iterator) === 'symbol'
            ? function(obj) {
                return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj === 'undefined'
                    ? 'undefined'
                    : _typeof2(obj);
              };

        var _swimmer = __webpack_require__(199);

        Object.defineProperty(exports, 'poolAll', {
          enumerable: true,
          get: function get() {
            return _swimmer.poolAll;
          },
        });
        Object.defineProperty(exports, 'createPool', {
          enumerable: true,
          get: function get() {
            return _swimmer.createPool;
          },
        });
        exports.pathJoin = pathJoin;
        exports.cleanPath = cleanPath;
        exports.unwrapArray = unwrapArray;
        exports.isObject = isObject;
        exports.deprecate = deprecate;
        exports.trimSlashes = trimSlashes;
        function pathJoin() {
          for (
            var _len = arguments.length, paths = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            paths[_key] = arguments[_key];
          }

          var newPath = paths.map(trimSlashes).join('/');
          if (!newPath || newPath === '/') {
            return '/';
          }
          newPath = trimSlashes(newPath);
          if (newPath.includes('?')) {
            newPath = newPath.substring(0, newPath.indexOf('?'));
          }
          return newPath;
        }

        function cleanPath(path) {
          // Resolve the local path
          if (!path || path === '/') {
            return '/';
          }
          // Remove origin, hashes, and query params
          if (typeof document !== 'undefined') {
            path = path.replace(window.location.origin, '');
            path = path.replace(/#.*/, '');
            path = path.replace(/\?.*/, '');
          }
          if (false) {
            path = path.replace(
              new RegExp('^\\/?' + process.env.REACT_STATIC_BASEPATH + '\\/'),
              ''
            );
          }
          path = path || '/';
          return pathJoin(path);
        }

        function unwrapArray(arg, defaultValue) {
          arg = Array.isArray(arg) ? arg[0] : arg;
          if (!arg && defaultValue) {
            return defaultValue;
          }
          return arg;
        }

        function isObject(a) {
          return (
            !Array.isArray(a) &&
            (typeof a === 'undefined' ? 'undefined' : _typeof(a)) ===
              'object' &&
            a !== null
          );
        }

        function deprecate(from, to) {
          console.warn(
            'React-Static deprecation notice: ' +
              from +
              ' will be deprecated in favor of ' +
              to +
              ' in the next major release.'
          );
        }

        function trimSlashes(str) {
          return str.replace(/^\/{1,}/g, '').replace(/\/{1,}$/g, '');
        }

        /***/
      },
      /* 10 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__ = __webpack_require__(
          140
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'BrowserRouter',
          function() {
            return __WEBPACK_IMPORTED_MODULE_0__BrowserRouter__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__HashRouter__ = __webpack_require__(
          144
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'HashRouter',
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__HashRouter__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Link__ = __webpack_require__(
          61
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Link',
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__Link__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__MemoryRouter__ = __webpack_require__(
          145
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'MemoryRouter',
          function() {
            return __WEBPACK_IMPORTED_MODULE_3__MemoryRouter__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__NavLink__ = __webpack_require__(
          147
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'NavLink',
          function() {
            return __WEBPACK_IMPORTED_MODULE_4__NavLink__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Prompt__ = __webpack_require__(
          149
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Prompt',
          function() {
            return __WEBPACK_IMPORTED_MODULE_5__Prompt__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Redirect__ = __webpack_require__(
          151
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Redirect',
          function() {
            return __WEBPACK_IMPORTED_MODULE_6__Redirect__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Route__ = __webpack_require__(
          62
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Route',
          function() {
            return __WEBPACK_IMPORTED_MODULE_7__Route__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Router__ = __webpack_require__(
          29
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Router',
          function() {
            return __WEBPACK_IMPORTED_MODULE_8__Router__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__StaticRouter__ = __webpack_require__(
          153
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'StaticRouter',
          function() {
            return __WEBPACK_IMPORTED_MODULE_9__StaticRouter__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Switch__ = __webpack_require__(
          155
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Switch',
          function() {
            return __WEBPACK_IMPORTED_MODULE_10__Switch__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__generatePath__ = __webpack_require__(
          157
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'generatePath',
          function() {
            return __WEBPACK_IMPORTED_MODULE_11__generatePath__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__matchPath__ = __webpack_require__(
          158
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'matchPath',
          function() {
            return __WEBPACK_IMPORTED_MODULE_12__matchPath__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__withRouter__ = __webpack_require__(
          159
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'withRouter',
          function() {
            return __WEBPACK_IMPORTED_MODULE_13__withRouter__['a'];
          }
        );

        /***/
      },
      /* 11 */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(169);

        /***/
      },
      /* 12 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createBrowserHistory__ = __webpack_require__(
          141
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return __WEBPACK_IMPORTED_MODULE_0__createBrowserHistory__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__createHashHistory__ = __webpack_require__(
          142
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__createHashHistory__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createMemoryHistory__ = __webpack_require__(
          143
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'd',
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__createMemoryHistory__['a'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__LocationUtils__ = __webpack_require__(
          20
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'c',
          function() {
            return __WEBPACK_IMPORTED_MODULE_3__LocationUtils__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'f',
          function() {
            return __WEBPACK_IMPORTED_MODULE_3__LocationUtils__['b'];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__PathUtils__ = __webpack_require__(
          16
        );
        /* unused harmony reexport parsePath */
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'e',
          function() {
            return __WEBPACK_IMPORTED_MODULE_4__PathUtils__['b'];
          }
        );

        /***/
      },
      /* 13 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule warning
         */

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var __DEV__ = 'production' !== 'production';

        var warning = function() {};

        if (__DEV__) {
          var printWarning = function printWarning(format, args) {
            var len = arguments.length;
            args = new Array(len > 2 ? len - 2 : 0);
            for (var key = 2; key < len; key++) {
              args[key - 2] = arguments[key];
            }
            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function() {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          warning = function(condition, format, args) {
            var len = arguments.length;
            args = new Array(len > 2 ? len - 2 : 0);
            for (var key = 2; key < len; key++) {
              args[key - 2] = arguments[key];
            }
            if (format === undefined) {
              throw new Error(
                '`warning(condition, format, ...args)` requires a warning ' +
                  'message argument'
              );
            }
            if (!condition) {
              printWarning.apply(null, [format].concat(args));
            }
          };
        }

        module.exports = warning;

        /***/
      },
      /* 14 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.onLoading = exports.setLoading = exports.prefetch = exports.needsPrefetch = exports.prefetchTemplate = exports.prefetchData = exports.getRouteInfo = exports.reloadRouteData = exports.propsByHash = exports.routeInfoByPath = undefined;

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _slicedToArray = (function() {
          function sliceIterator(arr, i) {
            var _arr = [];
            var _n = true;
            var _d = false;
            var _e = undefined;
            try {
              for (
                var _i = arr[Symbol.iterator](), _s;
                !(_n = (_s = _i.next()).done);
                _n = true
              ) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
              }
            } catch (err) {
              _d = true;
              _e = err;
            } finally {
              try {
                if (!_n && _i['return']) _i['return']();
              } finally {
                if (_d) throw _e;
              }
            }
            return _arr;
          }
          return function(arr, i) {
            if (Array.isArray(arr)) {
              return arr;
            } else if (Symbol.iterator in Object(arr)) {
              return sliceIterator(arr, i);
            } else {
              throw new TypeError(
                'Invalid attempt to destructure non-iterable instance'
              );
            }
          };
        })();

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var prefetchData = (exports.prefetchData = (function() {
          var _ref9 = _asyncToGenerator(
            /*#__PURE__*/ _regenerator2.default.mark(function _callee4(path) {
              var _this = this;

              var _ref10 =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                priority = _ref10.priority;

              var routeInfo, allProps;
              return _regenerator2.default.wrap(
                function _callee4$(_context4) {
                  while (1) {
                    switch ((_context4.prev = _context4.next)) {
                      case 0:
                        _context4.next = 2;
                        return getRouteInfo(path, { priority: priority });

                      case 2:
                        routeInfo = _context4.sent;

                        if (routeInfo) {
                          _context4.next = 5;
                          break;
                        }

                        return _context4.abrupt('return');

                      case 5:
                        if (!routeInfo.allProps) {
                          _context4.next = 7;
                          break;
                        }

                        return _context4.abrupt('return', routeInfo.allProps);

                      case 7:
                        // Request and build the props one by one
                        allProps = _extends({}, routeInfo.localProps || {});

                        // Request the template and loop over the routeInfo.sharedPropsHashes, requesting each prop

                        _context4.next = 10;
                        return Promise.all(
                          Object.keys(routeInfo.sharedPropsHashes).map(
                            (function() {
                              var _ref11 = _asyncToGenerator(
                                /*#__PURE__*/ _regenerator2.default.mark(
                                  function _callee3(key) {
                                    var hash, _ref12, prop, _ref13, _prop;

                                    return _regenerator2.default.wrap(
                                      function _callee3$(_context3) {
                                        while (1) {
                                          switch (
                                            (_context3.prev = _context3.next)
                                          ) {
                                            case 0:
                                              hash =
                                                routeInfo.sharedPropsHashes[
                                                  key
                                                ];

                                              // Check the propsByHash first

                                              if (propsByHash[hash]) {
                                                _context3.next = 24;
                                                break;
                                              }

                                              _context3.prev = 2;

                                              if (!priority) {
                                                _context3.next = 11;
                                                break;
                                              }

                                              _context3.next = 6;
                                              return _axios2.default.get(
                                                '/' +
                                                  'staticData/' +
                                                  hash +
                                                  '.json'
                                              );

                                            case 6:
                                              _ref12 = _context3.sent;
                                              prop = _ref12.data;

                                              propsByHash[hash] = prop;
                                              _context3.next = 17;
                                              break;

                                            case 11:
                                              // Non priority, share inflight requests and use pool
                                              if (!inflightPropHashes[hash]) {
                                                inflightPropHashes[
                                                  hash
                                                ] = requestPool.add(function() {
                                                  return _axios2.default.get(
                                                    '/' +
                                                      'staticData/' +
                                                      hash +
                                                      '.json'
                                                  );
                                                });
                                              }
                                              _context3.next = 14;
                                              return inflightPropHashes[hash];

                                            case 14:
                                              _ref13 = _context3.sent;
                                              _prop = _ref13.data;

                                              // Place it in the cache
                                              propsByHash[hash] = _prop;

                                            case 17:
                                              _context3.next = 23;
                                              break;

                                            case 19:
                                              _context3.prev = 19;
                                              _context3.t0 = _context3['catch'](
                                                2
                                              );

                                              console.log(
                                                'Error: There was an error retrieving a prop for this route! hashID:',
                                                hash
                                              );
                                              console.error(_context3.t0);

                                            case 23:
                                              if (!priority) {
                                                delete inflightPropHashes[hash];
                                              }

                                            case 24:
                                              // Otherwise, just set it as the key
                                              allProps[key] = propsByHash[hash];

                                            case 25:
                                            case 'end':
                                              return _context3.stop();
                                          }
                                        }
                                      },
                                      _callee3,
                                      _this,
                                      [[2, 19]]
                                    );
                                  }
                                )
                              );

                              return function(_x5) {
                                return _ref11.apply(this, arguments);
                              };
                            })()
                          )
                        );

                      case 10:
                        // Cache the entire props for the route
                        routeInfo.allProps = allProps;

                        // Return the props
                        return _context4.abrupt('return', routeInfo.allProps);

                      case 12:
                      case 'end':
                        return _context4.stop();
                    }
                  }
                },
                _callee4,
                this
              );
            })
          );

          return function prefetchData(_x3) {
            return _ref9.apply(this, arguments);
          };
        })());

        var prefetchTemplate = (exports.prefetchTemplate = (function() {
          var _ref14 = _asyncToGenerator(
            /*#__PURE__*/ _regenerator2.default.mark(function _callee5(path) {
              var _ref15 =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                priority = _ref15.priority;

              var routeInfo, pathTemplate;
              return _regenerator2.default.wrap(
                function _callee5$(_context5) {
                  while (1) {
                    switch ((_context5.prev = _context5.next)) {
                      case 0:
                        // Clean the path
                        path = (0, _shared.cleanPath)(path);
                        // Get route info so we can check if path has any data
                        _context5.next = 3;
                        return getRouteInfo(path);

                      case 3:
                        routeInfo = _context5.sent;

                        if (routeInfo) {
                          registerTemplateIDForPath(path, routeInfo.templateID);
                        }

                        // Preload the template if available
                        pathTemplate = getComponentForPath(path);

                        if (!(pathTemplate && pathTemplate.preload)) {
                          _context5.next = 16;
                          break;
                        }

                        if (!priority) {
                          _context5.next = 12;
                          break;
                        }

                        _context5.next = 10;
                        return pathTemplate.preload();

                      case 10:
                        _context5.next = 14;
                        break;

                      case 12:
                        _context5.next = 14;
                        return requestPool.add(function() {
                          return pathTemplate.preload();
                        });

                      case 14:
                        routeInfo.templateLoaded = true;
                        return _context5.abrupt('return', pathTemplate);

                      case 16:
                      case 'end':
                        return _context5.stop();
                    }
                  }
                },
                _callee5,
                this
              );
            })
          );

          return function prefetchTemplate(_x6) {
            return _ref14.apply(this, arguments);
          };
        })());

        var needsPrefetch = (exports.needsPrefetch = (function() {
          var _ref16 = _asyncToGenerator(
            /*#__PURE__*/ _regenerator2.default.mark(function _callee6(path) {
              var options =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {};
              var routeInfo;
              return _regenerator2.default.wrap(
                function _callee6$(_context6) {
                  while (1) {
                    switch ((_context6.prev = _context6.next)) {
                      case 0:
                        // Clean the path
                        path = (0, _shared.cleanPath)(path);

                        if (path) {
                          _context6.next = 3;
                          break;
                        }

                        return _context6.abrupt('return', false);

                      case 3:
                        _context6.next = 5;
                        return getRouteInfo(path, options);

                      case 5:
                        routeInfo = _context6.sent;

                        if (routeInfo) {
                          _context6.next = 8;
                          break;
                        }

                        return _context6.abrupt('return', true);

                      case 8:
                        if (
                          !(!routeInfo.allProps || !routeInfo.templateLoaded)
                        ) {
                          _context6.next = 10;
                          break;
                        }

                        return _context6.abrupt('return', true);

                      case 10:
                      case 'end':
                        return _context6.stop();
                    }
                  }
                },
                _callee6,
                this
              );
            })
          );

          return function needsPrefetch(_x8) {
            return _ref16.apply(this, arguments);
          };
        })());

        var prefetch = (exports.prefetch = (function() {
          var _ref17 = _asyncToGenerator(
            /*#__PURE__*/ _regenerator2.default.mark(function _callee7(path) {
              var options =
                arguments.length > 1 && arguments[1] !== undefined
                  ? arguments[1]
                  : {};

              var type, data, _ref18, _ref19;

              return _regenerator2.default.wrap(
                function _callee7$(_context7) {
                  while (1) {
                    switch ((_context7.prev = _context7.next)) {
                      case 0:
                        // Clean the path
                        path = (0, _shared.cleanPath)(path);

                        type = options.type;

                        if (options.priority) {
                          requestPool.stop();
                        }

                        data = void 0;

                        if (!(type === 'data')) {
                          _context7.next = 10;
                          break;
                        }

                        _context7.next = 7;
                        return prefetchData(path, options);

                      case 7:
                        data = _context7.sent;
                        _context7.next = 20;
                        break;

                      case 10:
                        if (!(type === 'template')) {
                          _context7.next = 15;
                          break;
                        }

                        _context7.next = 13;
                        return prefetchTemplate(path, options);

                      case 13:
                        _context7.next = 20;
                        break;

                      case 15:
                        _context7.next = 17;
                        return Promise.all([
                          prefetchData(path, options),
                          prefetchTemplate(path, options),
                        ]);

                      case 17:
                        _ref18 = _context7.sent;
                        _ref19 = _slicedToArray(_ref18, 1);
                        data = _ref19[0];

                      case 20:
                        if (options.priority) {
                          requestPool.start();
                        }

                        return _context7.abrupt('return', data);

                      case 22:
                      case 'end':
                        return _context7.stop();
                    }
                  }
                },
                _callee7,
                this
              );
            })
          );

          return function prefetch(_x10) {
            return _ref17.apply(this, arguments);
          };
        })());

        exports.getComponentForPath = getComponentForPath;
        exports.registerTemplateIDForPath = registerTemplateIDForPath;

        var _axios = __webpack_require__(67);

        var _axios2 = _interopRequireDefault(_axios);

        var _shared = __webpack_require__(9);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        } /* eslint-disable import/no-mutable-exports */

        var routeInfoByPath = (exports.routeInfoByPath = {});
        var propsByHash = (exports.propsByHash = {});
        var erroredPaths = {};
        var inflightRouteInfo = {};
        var inflightPropHashes = {};
        var loading = 0;
        var loadingSubscribers = [];
        var disableRouteInfoWarning = 'false' === 'true';

        var requestPool = (0, _shared.createPool)({
          concurrency: Number('3') || 3,
        });

        var reloadRouteData = (exports.reloadRouteData = function reloadRouteData() {
          // Delete all cached data
          [
            routeInfoByPath,
            propsByHash,
            erroredPaths,
            inflightRouteInfo,
            inflightPropHashes,
          ].forEach(function(part) {
            Object.keys(part).forEach(function(key) {
              delete part[key];
            });
          });
          // Force each RouteData component to reload
          global.reloadAll();
        });

        if (false) {
          var io = require('socket.io-client');
          var run = (function() {
            var _ref = _asyncToGenerator(
              /*#__PURE__*/ _regenerator2.default.mark(function _callee() {
                var _ref2, port, socket;

                return _regenerator2.default.wrap(
                  function _callee$(_context) {
                    while (1) {
                      switch ((_context.prev = _context.next)) {
                        case 0:
                          _context.prev = 0;
                          _context.next = 3;
                          return _axios2.default.get(
                            '/__react-static__/getMessagePort'
                          );

                        case 3:
                          _ref2 = _context.sent;
                          port = _ref2.data.port;
                          socket = io('http://localhost:' + port);

                          socket.on('connect', function() {
                            console.log(
                              'React-Static data hot-loader websocket connected. Listening for data changes...'
                            );
                          });
                          socket.on('message', function(_ref3) {
                            var type = _ref3.type;

                            if (type === 'reloadRoutes') {
                              reloadRouteData();
                            }
                          });
                          _context.next = 14;
                          break;

                        case 10:
                          _context.prev = 10;
                          _context.t0 = _context['catch'](0);

                          console.log(
                            'React-Static data hot-loader websocket encountered the following error:'
                          );
                          console.error(_context.t0);

                        case 14:
                        case 'end':
                          return _context.stop();
                      }
                    }
                  },
                  _callee,
                  undefined,
                  [[0, 10]]
                );
              })
            );

            return function run() {
              return _ref.apply(this, arguments);
            };
          })();
          run();
        }

        var getRouteInfo = (exports.getRouteInfo = (function() {
          var _ref4 = _asyncToGenerator(
            /*#__PURE__*/ _regenerator2.default.mark(function _callee2(path) {
              var _ref5 =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                priority = _ref5.priority;

              var originalPath,
                routeInfo,
                _ref6,
                data,
                routeInfoRoot,
                cacheBuster,
                getPath,
                _ref7,
                _data,
                _ref8,
                _data2;

              return _regenerator2.default.wrap(
                function _callee2$(_context2) {
                  while (1) {
                    switch ((_context2.prev = _context2.next)) {
                      case 0:
                        if (!(typeof document === 'undefined')) {
                          _context2.next = 2;
                          break;
                        }

                        return _context2.abrupt('return');

                      case 2:
                        originalPath = path;

                        path = (0, _shared.cleanPath)(path);
                        // Check the cache first

                        if (!routeInfoByPath[path]) {
                          _context2.next = 6;
                          break;
                        }

                        return _context2.abrupt(
                          'return',
                          routeInfoByPath[path]
                        );

                      case 6:
                        if (!erroredPaths[path]) {
                          _context2.next = 8;
                          break;
                        }

                        return _context2.abrupt('return');

                      case 8:
                        routeInfo = void 0;
                        _context2.prev = 9;

                        if (true) {
                          _context2.next = 19;
                          break;
                        }

                        // In dev, request from the webpack dev server
                        if (!inflightRouteInfo[path]) {
                          inflightRouteInfo[path] = _axios2.default.get(
                            '/__react-static__/routeInfo/' +
                              (path === '/' ? '' : path)
                          );
                        }
                        _context2.next = 14;
                        return inflightRouteInfo[path];

                      case 14:
                        _ref6 = _context2.sent;
                        data = _ref6.data;

                        routeInfo = data;
                        _context2.next = 36;
                        break;

                      case 19:
                        routeInfoRoot =
                          (false ? process.env.REACT_STATIC_SITE_ROOT : '/') ||
                          '/';
                        cacheBuster = process.env.REACT_STATIC_CACHE_BUST
                          ? '?' + process.env.REACT_STATIC_CACHE_BUST
                          : '';
                        getPath =
                          '' +
                          routeInfoRoot +
                          (0, _shared.pathJoin)(path, 'routeInfo.json') +
                          cacheBuster;

                        if (!priority) {
                          _context2.next = 30;
                          break;
                        }

                        _context2.next = 25;
                        return _axios2.default.get(getPath);

                      case 25:
                        _ref7 = _context2.sent;
                        _data = _ref7.data;

                        routeInfo = _data;
                        _context2.next = 36;
                        break;

                      case 30:
                        if (!inflightRouteInfo[path]) {
                          inflightRouteInfo[path] = requestPool.add(function() {
                            return _axios2.default.get(getPath);
                          });
                        }
                        _context2.next = 33;
                        return inflightRouteInfo[path];

                      case 33:
                        _ref8 = _context2.sent;
                        _data2 = _ref8.data;

                        routeInfo = _data2;

                      case 36:
                        _context2.next = 44;
                        break;

                      case 38:
                        _context2.prev = 38;
                        _context2.t0 = _context2['catch'](9);

                        erroredPaths[path] = true;

                        if (false) {
                          _context2.next = 43;
                          break;
                        }

                        return _context2.abrupt('return');

                      case 43:
                        console.warn(
                          'Could not load routeInfo for path: ' +
                            originalPath +
                            '. If this is a static route, make sure any link to this page is valid! If this is not a static route, you can desregard this warning.'
                        );

                      case 44:
                        if (!priority) {
                          delete inflightRouteInfo[path];
                        }
                        routeInfoByPath[path] = routeInfo;
                        return _context2.abrupt(
                          'return',
                          routeInfoByPath[path]
                        );

                      case 47:
                      case 'end':
                        return _context2.stop();
                    }
                  }
                },
                _callee2,
                undefined,
                [[9, 38]]
              );
            })
          );

          return function getRouteInfo(_x) {
            return _ref4.apply(this, arguments);
          };
        })());

        var setLoading = (exports.setLoading = function setLoading(d) {
          if (loading !== d) {
            loading = d;
            loadingSubscribers.forEach(function(s) {
              return s();
            });
          }
        });

        var onLoading = (exports.onLoading = function onLoading(cb) {
          var ccb = function ccb() {
            return cb(loading);
          };
          loadingSubscribers.push(ccb);
          return function() {
            loadingSubscribers = loadingSubscribers.filter(function(d) {
              return d !== ccb;
            });
          };
        });

        function getComponentForPath(path) {
          path = (0, _shared.cleanPath)(path);
          return (
            global.reactStaticGetComponentForPath &&
            global.reactStaticGetComponentForPath(path)
          );
        }

        function registerTemplateIDForPath(path, templateID) {
          path = (0, _shared.cleanPath)(path);
          return (
            global.reactStaticGetComponentForPath &&
            global.reactStaticRegisterTemplateIDForPath(path, templateID)
          );
        }

        /***/
      },
      /* 15 */
      /***/ function(module, exports) {
        exports = module.exports = trim;

        function trim(str) {
          return str.replace(/^\s*|\s*$/g, '');
        }

        exports.left = function(str) {
          return str.replace(/^\s*/, '');
        };

        exports.right = function(str) {
          return str.replace(/\s*$/, '');
        };

        /***/
      },
      /* 16 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return addLeadingSlash;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'f',
          function() {
            return stripLeadingSlash;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'c',
          function() {
            return hasBasename;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'e',
          function() {
            return stripBasename;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'g',
          function() {
            return stripTrailingSlash;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'd',
          function() {
            return parsePath;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return createPath;
          }
        );
        var addLeadingSlash = function addLeadingSlash(path) {
          return path.charAt(0) === '/' ? path : '/' + path;
        };

        var stripLeadingSlash = function stripLeadingSlash(path) {
          return path.charAt(0) === '/' ? path.substr(1) : path;
        };

        var hasBasename = function hasBasename(path, prefix) {
          return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
        };

        var stripBasename = function stripBasename(path, prefix) {
          return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
        };

        var stripTrailingSlash = function stripTrailingSlash(path) {
          return path.charAt(path.length - 1) === '/'
            ? path.slice(0, -1)
            : path;
        };

        var parsePath = function parsePath(path) {
          var pathname = path || '/';
          var search = '';
          var hash = '';

          var hashIndex = pathname.indexOf('#');
          if (hashIndex !== -1) {
            hash = pathname.substr(hashIndex);
            pathname = pathname.substr(0, hashIndex);
          }

          var searchIndex = pathname.indexOf('?');
          if (searchIndex !== -1) {
            search = pathname.substr(searchIndex);
            pathname = pathname.substr(0, searchIndex);
          }

          return {
            pathname: pathname,
            search: search === '?' ? '' : search,
            hash: hash === '#' ? '' : hash,
          };
        };

        var createPath = function createPath(location) {
          var pathname = location.pathname,
            search = location.search,
            hash = location.hash;

          var path = pathname || '/';

          if (search && search !== '?')
            path += search.charAt(0) === '?' ? search : '?' + search;

          if (hash && hash !== '#')
            path += hash.charAt(0) === '#' ? hash : '#' + hash;

          return path;
        };

        /***/
      },
      /* 17 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /*
object-assign
(c) Sindre Sorhus
@license MIT
*/

        /* eslint-disable no-unused-vars */

        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var propIsEnumerable = Object.prototype.propertyIsEnumerable;

        function toObject(val) {
          if (val === null || val === undefined) {
            throw new TypeError(
              'Object.assign cannot be called with null or undefined'
            );
          }

          return Object(val);
        }

        function shouldUseNative() {
          try {
            if (!Object.assign) {
              return false;
            }

            // Detect buggy property enumeration order in older V8 versions.

            // https://bugs.chromium.org/p/v8/issues/detail?id=4118
            var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
            test1[5] = 'de';
            if (Object.getOwnPropertyNames(test1)[0] === '5') {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test2 = {};
            for (var i = 0; i < 10; i++) {
              test2['_' + String.fromCharCode(i)] = i;
            }
            var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
              return test2[n];
            });
            if (order2.join('') !== '0123456789') {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test3 = {};
            'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
              test3[letter] = letter;
            });
            if (
              Object.keys(Object.assign({}, test3)).join('') !==
              'abcdefghijklmnopqrst'
            ) {
              return false;
            }

            return true;
          } catch (err) {
            // We don't expect any of the above to throw, but better to be safe.
            return false;
          }
        }

        module.exports = shouldUseNative()
          ? Object.assign
          : function(target, source) {
              var from;
              var to = toObject(target);
              var symbols;

              for (var s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);

                for (var key in from) {
                  if (hasOwnProperty.call(from, key)) {
                    to[key] = from[key];
                  }
                }

                if (getOwnPropertySymbols) {
                  symbols = getOwnPropertySymbols(from);
                  for (var i = 0; i < symbols.length; i++) {
                    if (propIsEnumerable.call(from, symbols[i])) {
                      to[symbols[i]] = from[symbols[i]];
                    }
                  }
                }
              }

              return to;
            };

        /***/
      },
      /* 18 */
      /***/ function(module, exports) {
        module.exports = function(module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function() {};
            module.paths = [];
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, 'loaded', {
              enumerable: true,
              get: function() {
                return module.l;
              },
            });
            Object.defineProperty(module, 'id', {
              enumerable: true,
              get: function() {
                return module.i;
              },
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },
      /* 19 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(
          51
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(
          133
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(
          134
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(
          135
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(
          54
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(
          53
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'createStore',
          function() {
            return __WEBPACK_IMPORTED_MODULE_0__createStore__['b'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'combineReducers',
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__combineReducers__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'bindActionCreators',
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'applyMiddleware',
          function() {
            return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'compose',
          function() {
            return __WEBPACK_IMPORTED_MODULE_4__compose__['a'];
          }
        );

        /*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
        function isCrushed() {}

        if (false) {
          warning(
            "You are currently using minified code outside of NODE_ENV === 'production'. " +
              'This means that you are running a slower development build of Redux. ' +
              'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' +
              'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' +
              'to ensure you have the correct code for your production build.'
          );
        }

        /***/
      },
      /* 20 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return createLocation;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return locationsAreEqual;
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_resolve_pathname__ = __webpack_require__(
          58
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_value_equal__ = __webpack_require__(
          59
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__PathUtils__ = __webpack_require__(
          16
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var createLocation = function createLocation(
          path,
          state,
          key,
          currentLocation
        ) {
          var location = void 0;
          if (typeof path === 'string') {
            // Two-arg form: push(path, state)
            location = Object(
              __WEBPACK_IMPORTED_MODULE_2__PathUtils__['d' /* parsePath */]
            )(path);
            location.state = state;
          } else {
            // One-arg form: push(location)
            location = _extends({}, path);

            if (location.pathname === undefined) location.pathname = '';

            if (location.search) {
              if (location.search.charAt(0) !== '?')
                location.search = '?' + location.search;
            } else {
              location.search = '';
            }

            if (location.hash) {
              if (location.hash.charAt(0) !== '#')
                location.hash = '#' + location.hash;
            } else {
              location.hash = '';
            }

            if (state !== undefined && location.state === undefined)
              location.state = state;
          }

          try {
            location.pathname = decodeURI(location.pathname);
          } catch (e) {
            if (e instanceof URIError) {
              throw new URIError(
                'Pathname "' +
                  location.pathname +
                  '" could not be decoded. ' +
                  'This is likely caused by an invalid percent-encoding.'
              );
            } else {
              throw e;
            }
          }

          if (key) location.key = key;

          if (currentLocation) {
            // Resolve incomplete/relative pathname relative to current location.
            if (!location.pathname) {
              location.pathname = currentLocation.pathname;
            } else if (location.pathname.charAt(0) !== '/') {
              location.pathname = Object(
                __WEBPACK_IMPORTED_MODULE_0_resolve_pathname__['default']
              )(location.pathname, currentLocation.pathname);
            }
          } else {
            // When there is no prior location and pathname is empty, set it to /
            if (!location.pathname) {
              location.pathname = '/';
            }
          }

          return location;
        };

        var locationsAreEqual = function locationsAreEqual(a, b) {
          return (
            a.pathname === b.pathname &&
            a.search === b.search &&
            a.hash === b.hash &&
            a.key === b.key &&
            Object(__WEBPACK_IMPORTED_MODULE_1_value_equal__['default'])(
              a.state,
              b.state
            )
          );
        };

        /***/
      },
      /* 21 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        var addLeadingSlash = (exports.addLeadingSlash = function addLeadingSlash(
          path
        ) {
          return path.charAt(0) === '/' ? path : '/' + path;
        });

        var stripLeadingSlash = (exports.stripLeadingSlash = function stripLeadingSlash(
          path
        ) {
          return path.charAt(0) === '/' ? path.substr(1) : path;
        });

        var hasBasename = (exports.hasBasename = function hasBasename(
          path,
          prefix
        ) {
          return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
        });

        var stripBasename = (exports.stripBasename = function stripBasename(
          path,
          prefix
        ) {
          return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
        });

        var stripTrailingSlash = (exports.stripTrailingSlash = function stripTrailingSlash(
          path
        ) {
          return path.charAt(path.length - 1) === '/'
            ? path.slice(0, -1)
            : path;
        });

        var parsePath = (exports.parsePath = function parsePath(path) {
          var pathname = path || '/';
          var search = '';
          var hash = '';

          var hashIndex = pathname.indexOf('#');
          if (hashIndex !== -1) {
            hash = pathname.substr(hashIndex);
            pathname = pathname.substr(0, hashIndex);
          }

          var searchIndex = pathname.indexOf('?');
          if (searchIndex !== -1) {
            search = pathname.substr(searchIndex);
            pathname = pathname.substr(0, searchIndex);
          }

          return {
            pathname: pathname,
            search: search === '?' ? '' : search,
            hash: hash === '#' ? '' : hash,
          };
        });

        var createPath = (exports.createPath = function createPath(location) {
          var pathname = location.pathname,
            search = location.search,
            hash = location.hash;

          var path = pathname || '/';

          if (search && search !== '?')
            path += search.charAt(0) === '?' ? search : '?' + search;

          if (hash && hash !== '#')
            path += hash.charAt(0) === '#' ? hash : '#' + hash;

          return path;
        });

        /***/
      },
      /* 22 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = decimal;

        /* Check if the given character code, or the character
 * code at the first character, is decimal. */
        function decimal(character) {
          var code =
            typeof character === 'string' ? character.charCodeAt(0) : character;

          return code >= 48 && code <= 57; /* 0-9 */
        }

        /***/
      },
      /* 23 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = visit;

        var is = __webpack_require__(257);

        var CONTINUE = true;
        var SKIP = 'skip';
        var EXIT = false;

        visit.CONTINUE = CONTINUE;
        visit.SKIP = SKIP;
        visit.EXIT = EXIT;

        function visit(tree, test, visitor, reverse) {
          if (typeof test === 'function' && typeof visitor !== 'function') {
            reverse = visitor;
            visitor = test;
            test = null;
          }

          one(tree);

          /* Visit a single node. */
          function one(node, index, parent) {
            var result;

            index = index || (parent ? 0 : null);

            if (
              !test ||
              node.type === test ||
              is(test, node, index, parent || null)
            ) {
              result = visitor(node, index, parent || null);
            }

            if (result === EXIT) {
              return result;
            }

            if (node.children && result !== SKIP) {
              return all(node.children, node) === EXIT ? EXIT : result;
            }

            return result;
          }

          /* Visit children in `parent`. */
          function all(children, parent) {
            var step = reverse ? -1 : 1;
            var index = (reverse ? children.length : -1) + step;
            var child;
            var result;

            while (index > -1 && index < children.length) {
              child = children[index];
              result = child && one(child, index, parent);

              if (result === EXIT) {
                return result;
              }

              index = typeof result === 'number' ? result : index + step;
            }

            return CONTINUE;
          }
        }

        /***/
      },
      /* 24 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(
          115
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(
          50
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(
          119
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'Provider',
          function() {
            return __WEBPACK_IMPORTED_MODULE_0__components_Provider__['b'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'createProvider',
          function() {
            return __WEBPACK_IMPORTED_MODULE_0__components_Provider__['a'];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'connectAdvanced',
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__[
              'a'
            ];
          }
        );
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'connect',
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__connect_connect__['a'];
          }
        );

        /***/
      },
      /* 25 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__['a'] = warning;
        /**
         * Prints a warning in the console if it exists.
         *
         * @param {String} message The warning message.
         * @returns {void}
         */
        function warning(message) {
          /* eslint-disable no-console */
          if (
            typeof console !== 'undefined' &&
            typeof console.error === 'function'
          ) {
            console.error(message);
          }
          /* eslint-enable no-console */
          try {
            // This error was thrown as a convenience so that if you enable
            // "break on all exceptions" in your console,
            // it would pause the execution at this line.
            throw new Error(message);
            /* eslint-disable no-empty */
          } catch (e) {}
          /* eslint-enable no-empty */
        }

        /***/
      },
      /* 26 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright 2015, Yahoo! Inc.
         * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
         */

        var REACT_STATICS = {
          childContextTypes: true,
          contextTypes: true,
          defaultProps: true,
          displayName: true,
          getDefaultProps: true,
          getDerivedStateFromProps: true,
          mixins: true,
          propTypes: true,
          type: true,
        };

        var KNOWN_STATICS = {
          name: true,
          length: true,
          prototype: true,
          caller: true,
          callee: true,
          arguments: true,
          arity: true,
        };

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

        function hoistNonReactStatics(
          targetComponent,
          sourceComponent,
          blacklist
        ) {
          if (typeof sourceComponent !== 'string') {
            // don't hoist over string (html) components

            if (objectPrototype) {
              var inheritedComponent = getPrototypeOf(sourceComponent);
              if (
                inheritedComponent &&
                inheritedComponent !== objectPrototype
              ) {
                hoistNonReactStatics(
                  targetComponent,
                  inheritedComponent,
                  blacklist
                );
              }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
              keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            for (var i = 0; i < keys.length; ++i) {
              var key = keys[i];
              if (
                !REACT_STATICS[key] &&
                !KNOWN_STATICS[key] &&
                (!blacklist || !blacklist[key])
              ) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try {
                  // Avoid failures from read-only properties
                  defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
              }
            }

            return targetComponent;
          }

          return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
      },
      /* 27 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(
          122
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(
          127
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(
          129
        );

        /** `Object#toString` result references. */
        var objectTag = '[object Object]';

        /** Used for built-in method references. */
        var funcProto = Function.prototype,
          objectProto = Object.prototype;

        /** Used to resolve the decompiled source of functions. */
        var funcToString = funcProto.toString;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /** Used to infer the `Object` constructor. */
        var objectCtorString = funcToString.call(Object);

        /**
         * Checks if `value` is a plain object, that is, an object created by the
         * `Object` constructor or one with a `[[Prototype]]` of `null`.
         *
         * @static
         * @memberOf _
         * @since 0.8.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
         * @example
         *
         * function Foo() {
         *   this.a = 1;
         * }
         *
         * _.isPlainObject(new Foo);
         * // => false
         *
         * _.isPlainObject([1, 2, 3]);
         * // => false
         *
         * _.isPlainObject({ 'x': 0, 'y': 0 });
         * // => true
         *
         * _.isPlainObject(Object.create(null));
         * // => true
         */
        function isPlainObject(value) {
          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__['a' /* default */]
            )(value) ||
            Object(
              __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__['a' /* default */]
            )(value) != objectTag
          ) {
            return false;
          }
          var proto = Object(
            __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__['a' /* default */]
          )(value);
          if (proto === null) {
            return true;
          }
          var Ctor =
            hasOwnProperty.call(proto, 'constructor') && proto.constructor;
          return (
            typeof Ctor == 'function' &&
            Ctor instanceof Ctor &&
            funcToString.call(Ctor) == objectCtorString
          );
        }

        /* harmony default export */ __webpack_exports__['a'] = isPlainObject;

        /***/
      },
      /* 28 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          8
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );

        var createTransitionManager = function createTransitionManager() {
          var prompt = null;

          var setPrompt = function setPrompt(nextPrompt) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              prompt == null,
              'A history supports only one prompt at a time'
            );

            prompt = nextPrompt;

            return function() {
              if (prompt === nextPrompt) prompt = null;
            };
          };

          var confirmTransitionTo = function confirmTransitionTo(
            location,
            action,
            getUserConfirmation,
            callback
          ) {
            // TODO: If another transition starts while we're still confirming
            // the previous one, we may end up in a weird state. Figure out the
            // best way to handle this.
            if (prompt != null) {
              var result =
                typeof prompt === 'function'
                  ? prompt(location, action)
                  : prompt;

              if (typeof result === 'string') {
                if (typeof getUserConfirmation === 'function') {
                  getUserConfirmation(result, callback);
                } else {
                  __WEBPACK_IMPORTED_MODULE_0_warning___default()(
                    false,
                    'A history needs a getUserConfirmation function in order to use a prompt message'
                  );

                  callback(true);
                }
              } else {
                // Return false from a transition hook to cancel the transition.
                callback(result !== false);
              }
            } else {
              callback(true);
            }
          };

          var listeners = [];

          var appendListener = function appendListener(fn) {
            var isActive = true;

            var listener = function listener() {
              if (isActive) fn.apply(undefined, arguments);
            };

            listeners.push(listener);

            return function() {
              isActive = false;
              listeners = listeners.filter(function(item) {
                return item !== listener;
              });
            };
          };

          var notifyListeners = function notifyListeners() {
            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            listeners.forEach(function(listener) {
              return listener.apply(undefined, args);
            });
          };

          return {
            setPrompt: setPrompt,
            confirmTransitionTo: confirmTransitionTo,
            appendListener: appendListener,
            notifyListeners: notifyListeners,
          };
        };

        /* harmony default export */ __webpack_exports__[
          'a'
        ] = createTransitionManager;

        /***/
      },
      /* 29 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__ = __webpack_require__(
          30
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_Router__[
            'a' /* default */
          ];

        /***/
      },
      /* 30 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_prop_types__
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for putting history on context.
         */

        var Router = (function(_React$Component) {
          _inherits(Router, _React$Component);

          function Router() {
            var _temp, _this, _ret;

            _classCallCheck(this, Router);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.state = {
                match: _this.computeMatch(
                  _this.props.history.location.pathname
                ),
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          Router.prototype.getChildContext = function getChildContext() {
            return {
              router: _extends({}, this.context.router, {
                history: this.props.history,
                route: {
                  location: this.props.history.location,
                  match: this.state.match,
                },
              }),
            };
          };

          Router.prototype.computeMatch = function computeMatch(pathname) {
            return {
              path: '/',
              url: '/',
              params: {},
              isExact: pathname === '/',
            };
          };

          Router.prototype.componentWillMount = function componentWillMount() {
            var _this2 = this;

            var _props = this.props,
              children = _props.children,
              history = _props.history;

            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              children == null ||
                __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(
                  children
                ) === 1,
              'A <Router> may have only one child element'
            );

            // Do this here so we can setState when a <Redirect> changes the
            // location in componentWillMount. This happens e.g. when doing
            // server rendering using a <StaticRouter>.
            this.unlisten = history.listen(function() {
              _this2.setState({
                match: _this2.computeMatch(history.location.pathname),
              });
            });
          };

          Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps
          ) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              this.props.history === nextProps.history,
              'You cannot change <Router history>'
            );
          };

          Router.prototype.componentWillUnmount = function componentWillUnmount() {
            this.unlisten();
          };

          Router.prototype.render = function render() {
            var children = this.props.children;

            return children
              ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(
                  children
                )
              : null;
          };

          return Router;
        })(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

        Router.propTypes = {
          history:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
              .isRequired,
          children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node,
        };
        Router.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object,
        };
        Router.childContextTypes = {
          router:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
              .isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = Router;

        /***/
      },
      /* 31 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__ = __webpack_require__(
          64
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__
        );

        var patternCache = {};
        var cacheLimit = 10000;
        var cacheCount = 0;

        var compilePath = function compilePath(pattern, options) {
          var cacheKey = '' + options.end + options.strict + options.sensitive;
          var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

          if (cache[pattern]) return cache[pattern];

          var keys = [];
          var re = __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default()(
            pattern,
            keys,
            options
          );
          var compiledPattern = { re: re, keys: keys };

          if (cacheCount < cacheLimit) {
            cache[pattern] = compiledPattern;
            cacheCount++;
          }

          return compiledPattern;
        };

        /**
         * Public API for matching a URL pathname to a path pattern.
         */
        var matchPath = function matchPath(pathname) {
          var options =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};
          var parent = arguments[2];

          if (typeof options === 'string') options = { path: options };

          var _options = options,
            path = _options.path,
            _options$exact = _options.exact,
            exact = _options$exact === undefined ? false : _options$exact,
            _options$strict = _options.strict,
            strict = _options$strict === undefined ? false : _options$strict,
            _options$sensitive = _options.sensitive,
            sensitive =
              _options$sensitive === undefined ? false : _options$sensitive;

          if (path == null) return parent;

          var _compilePath = compilePath(path, {
              end: exact,
              strict: strict,
              sensitive: sensitive,
            }),
            re = _compilePath.re,
            keys = _compilePath.keys;

          var match = re.exec(pathname);

          if (!match) return null;

          var url = match[0],
            values = match.slice(1);

          var isExact = pathname === url;

          if (exact && !isExact) return null;

          return {
            path: path, // the path pattern used to match
            url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL
            isExact: isExact, // whether or not we matched exactly
            params: keys.reduce(function(memo, key, index) {
              memo[key.name] = values[index];
              return memo;
            }, {}),
          };
        };

        /* harmony default export */ __webpack_exports__['a'] = matchPath;

        /***/
      },
      /* 32 */
      /***/ function(module, exports, __webpack_require__) {
        exports.__esModule = true;
        exports.Helmet = undefined;

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactSideEffect = __webpack_require__(161);

        var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);

        var _deepEqual = __webpack_require__(164);

        var _deepEqual2 = _interopRequireDefault(_deepEqual);

        var _HelmetUtils = __webpack_require__(167);

        var _HelmetConstants = __webpack_require__(66);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var Helmet = function Helmet(Component) {
          var _class, _temp;

          return (
            (_temp = _class = (function(_React$Component) {
              _inherits(HelmetWrapper, _React$Component);

              function HelmetWrapper() {
                _classCallCheck(this, HelmetWrapper);

                return _possibleConstructorReturn(
                  this,
                  _React$Component.apply(this, arguments)
                );
              }

              HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(
                nextProps
              ) {
                return !(0, _deepEqual2.default)(this.props, nextProps);
              };

              HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(
                child,
                nestedChildren
              ) {
                if (!nestedChildren) {
                  return null;
                }

                switch (child.type) {
                  case _HelmetConstants.TAG_NAMES.SCRIPT:
                  case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    return {
                      innerHTML: nestedChildren,
                    };

                  case _HelmetConstants.TAG_NAMES.STYLE:
                    return {
                      cssText: nestedChildren,
                    };
                }

                throw new Error(
                  '<' +
                    child.type +
                    ' /> elements are self-closing and can not contain children. Refer to our API for more information.'
                );
              };

              HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(
                _ref
              ) {
                var _extends2;

                var child = _ref.child,
                  arrayTypeChildren = _ref.arrayTypeChildren,
                  newChildProps = _ref.newChildProps,
                  nestedChildren = _ref.nestedChildren;

                return _extends(
                  {},
                  arrayTypeChildren,
                  ((_extends2 = {}),
                  (_extends2[child.type] = [].concat(
                    arrayTypeChildren[child.type] || [],
                    [
                      _extends(
                        {},
                        newChildProps,
                        this.mapNestedChildrenToProps(child, nestedChildren)
                      ),
                    ]
                  )),
                  _extends2)
                );
              };

              HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(
                _ref2
              ) {
                var _extends3, _extends4;

                var child = _ref2.child,
                  newProps = _ref2.newProps,
                  newChildProps = _ref2.newChildProps,
                  nestedChildren = _ref2.nestedChildren;

                switch (child.type) {
                  case _HelmetConstants.TAG_NAMES.TITLE:
                    return _extends(
                      {},
                      newProps,
                      ((_extends3 = {}),
                      (_extends3[child.type] = nestedChildren),
                      (_extends3.titleAttributes = _extends({}, newChildProps)),
                      _extends3)
                    );

                  case _HelmetConstants.TAG_NAMES.BODY:
                    return _extends({}, newProps, {
                      bodyAttributes: _extends({}, newChildProps),
                    });

                  case _HelmetConstants.TAG_NAMES.HTML:
                    return _extends({}, newProps, {
                      htmlAttributes: _extends({}, newChildProps),
                    });
                }

                return _extends(
                  {},
                  newProps,
                  ((_extends4 = {}),
                  (_extends4[child.type] = _extends({}, newChildProps)),
                  _extends4)
                );
              };

              HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(
                arrayTypeChildren,
                newProps
              ) {
                var newFlattenedProps = _extends({}, newProps);

                Object.keys(arrayTypeChildren).forEach(function(
                  arrayChildName
                ) {
                  var _extends5;

                  newFlattenedProps = _extends(
                    {},
                    newFlattenedProps,
                    ((_extends5 = {}),
                    (_extends5[arrayChildName] =
                      arrayTypeChildren[arrayChildName]),
                    _extends5)
                  );
                });

                return newFlattenedProps;
              };

              HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(
                child,
                nestedChildren
              ) {
                if (false) {
                  if (
                    !_HelmetConstants.VALID_TAG_NAMES.some(function(name) {
                      return child.type === name;
                    })
                  ) {
                    if (typeof child.type === 'function') {
                      return (0, _HelmetUtils.warn)(
                        'You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.'
                      );
                    }

                    return (0, _HelmetUtils.warn)(
                      'Only elements types ' +
                        _HelmetConstants.VALID_TAG_NAMES.join(', ') +
                        ' are allowed. Helmet does not support rendering <' +
                        child.type +
                        '> elements. Refer to our API for more information.'
                    );
                  }

                  if (
                    nestedChildren &&
                    typeof nestedChildren !== 'string' &&
                    (!Array.isArray(nestedChildren) ||
                      nestedChildren.some(function(nestedChild) {
                        return typeof nestedChild !== 'string';
                      }))
                  ) {
                    throw new Error(
                      'Helmet expects a string as a child of <' +
                        child.type +
                        '>. Did you forget to wrap your children in braces? ( <' +
                        child.type +
                        '>{``}</' +
                        child.type +
                        '> ) Refer to our API for more information.'
                    );
                  }
                }

                return true;
              };

              HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(
                children,
                newProps
              ) {
                var _this2 = this;

                var arrayTypeChildren = {};

                _react2.default.Children.forEach(children, function(child) {
                  if (!child || !child.props) {
                    return;
                  }

                  var _child$props = child.props,
                    nestedChildren = _child$props.children,
                    childProps = _objectWithoutProperties(_child$props, [
                      'children',
                    ]);

                  var newChildProps = (0,
                  _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);

                  _this2.warnOnInvalidChildren(child, nestedChildren);

                  switch (child.type) {
                    case _HelmetConstants.TAG_NAMES.LINK:
                    case _HelmetConstants.TAG_NAMES.META:
                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:
                    case _HelmetConstants.TAG_NAMES.SCRIPT:
                    case _HelmetConstants.TAG_NAMES.STYLE:
                      arrayTypeChildren = _this2.flattenArrayTypeChildren({
                        child: child,
                        arrayTypeChildren: arrayTypeChildren,
                        newChildProps: newChildProps,
                        nestedChildren: nestedChildren,
                      });
                      break;

                    default:
                      newProps = _this2.mapObjectTypeChildren({
                        child: child,
                        newProps: newProps,
                        newChildProps: newChildProps,
                        nestedChildren: nestedChildren,
                      });
                      break;
                  }
                });

                newProps = this.mapArrayTypeChildrenToProps(
                  arrayTypeChildren,
                  newProps
                );
                return newProps;
              };

              HelmetWrapper.prototype.render = function render() {
                var _props = this.props,
                  children = _props.children,
                  props = _objectWithoutProperties(_props, ['children']);

                var newProps = _extends({}, props);

                if (children) {
                  newProps = this.mapChildrenToProps(children, newProps);
                }

                return _react2.default.createElement(Component, newProps);
              };

              _createClass(HelmetWrapper, null, [
                {
                  key: 'canUseDOM',

                  // Component.peek comes from react-side-effect:
                  // For testing, you may use a static peek() method available on the returned component.
                  // It lets you get the current state without resetting the mounted instance stack.
                  // Don’t use it for anything other than testing.

                  /**
                   * @param {Object} base: {"target": "_blank", "href": "http://mysite.com/"}
                   * @param {Object} bodyAttributes: {"className": "root"}
                   * @param {String} defaultTitle: "Default Title"
                   * @param {Boolean} defer: true
                   * @param {Boolean} encodeSpecialCharacters: true
                   * @param {Object} htmlAttributes: {"lang": "en", "amp": undefined}
                   * @param {Array} link: [{"rel": "canonical", "href": "http://mysite.com/example"}]
                   * @param {Array} meta: [{"name": "description", "content": "Test description"}]
                   * @param {Array} noscript: [{"innerHTML": "<img src='http://mysite.com/js/test.js'"}]
                   * @param {Function} onChangeClientState: "(newState) => console.log(newState)"
                   * @param {Array} script: [{"type": "text/javascript", "src": "http://mysite.com/js/test.js"}]
                   * @param {Array} style: [{"type": "text/css", "cssText": "div { display: block; color: blue; }"}]
                   * @param {String} title: "Title"
                   * @param {Object} titleAttributes: {"itemprop": "name"}
                   * @param {String} titleTemplate: "MySite.com - %s"
                   */
                  set: function set(canUseDOM) {
                    Component.canUseDOM = canUseDOM;
                  },
                },
              ]);

              return HelmetWrapper;
            })(_react2.default.Component)),
            (_class.propTypes = {
              base: _propTypes2.default.object,
              bodyAttributes: _propTypes2.default.object,
              children: _propTypes2.default.oneOfType([
                _propTypes2.default.arrayOf(_propTypes2.default.node),
                _propTypes2.default.node,
              ]),
              defaultTitle: _propTypes2.default.string,
              defer: _propTypes2.default.bool,
              encodeSpecialCharacters: _propTypes2.default.bool,
              htmlAttributes: _propTypes2.default.object,
              link: _propTypes2.default.arrayOf(_propTypes2.default.object),
              meta: _propTypes2.default.arrayOf(_propTypes2.default.object),
              noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),
              onChangeClientState: _propTypes2.default.func,
              script: _propTypes2.default.arrayOf(_propTypes2.default.object),
              style: _propTypes2.default.arrayOf(_propTypes2.default.object),
              title: _propTypes2.default.string,
              titleAttributes: _propTypes2.default.object,
              titleTemplate: _propTypes2.default.string,
            }),
            (_class.defaultProps = {
              defer: true,
              encodeSpecialCharacters: true,
            }),
            (_class.peek = Component.peek),
            (_class.rewind = function() {
              var mappedState = Component.rewind();
              if (!mappedState) {
                // provide fallback if mappedState is undefined
                mappedState = (0, _HelmetUtils.mapStateOnServer)({
                  baseTag: [],
                  bodyAttributes: {},
                  encodeSpecialCharacters: true,
                  htmlAttributes: {},
                  linkTags: [],
                  metaTags: [],
                  noscriptTags: [],
                  scriptTags: [],
                  styleTags: [],
                  title: '',
                  titleAttributes: {},
                });
              }

              return mappedState;
            }),
            _temp
          );
        };

        var NullComponent = function NullComponent() {
          return null;
        };

        var HelmetSideEffects = (0, _reactSideEffect2.default)(
          _HelmetUtils.reducePropsToState,
          _HelmetUtils.handleClientStateChange,
          _HelmetUtils.mapStateOnServer
        )(NullComponent);

        var HelmetExport = Helmet(HelmetSideEffects);
        HelmetExport.renderStatic = HelmetExport.rewind;

        exports.Helmet = HelmetExport;
        exports.default = HelmetExport;

        /***/
      },
      /* 33 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);
        var normalizeHeaderName = __webpack_require__(173);

        var DEFAULT_CONTENT_TYPE = {
          'Content-Type': 'application/x-www-form-urlencoded',
        };

        function setContentTypeIfUnset(headers, value) {
          if (
            !utils.isUndefined(headers) &&
            utils.isUndefined(headers['Content-Type'])
          ) {
            headers['Content-Type'] = value;
          }
        }

        function getDefaultAdapter() {
          var adapter;
          if (typeof XMLHttpRequest !== 'undefined') {
            // For browsers use XHR adapter
            adapter = __webpack_require__(174);
          } else if (typeof process !== 'undefined') {
            // For node use HTTP adapter
            adapter = __webpack_require__(179);
          }
          return adapter;
        }

        var defaults = {
          adapter: getDefaultAdapter(),

          transformRequest: [
            function transformRequest(data, headers) {
              normalizeHeaderName(headers, 'Content-Type');
              if (
                utils.isFormData(data) ||
                utils.isArrayBuffer(data) ||
                utils.isBuffer(data) ||
                utils.isStream(data) ||
                utils.isFile(data) ||
                utils.isBlob(data)
              ) {
                return data;
              }
              if (utils.isArrayBufferView(data)) {
                return data.buffer;
              }
              if (utils.isURLSearchParams(data)) {
                setContentTypeIfUnset(
                  headers,
                  'application/x-www-form-urlencoded;charset=utf-8'
                );
                return data.toString();
              }
              if (utils.isObject(data)) {
                setContentTypeIfUnset(
                  headers,
                  'application/json;charset=utf-8'
                );
                return JSON.stringify(data);
              }
              return data;
            },
          ],

          transformResponse: [
            function transformResponse(data) {
              /*eslint no-param-reassign:0*/
              if (typeof data === 'string') {
                try {
                  data = JSON.parse(data);
                } catch (e) {
                  /* Ignore */
                }
              }
              return data;
            },
          ],

          timeout: 0,

          xsrfCookieName: 'XSRF-TOKEN',
          xsrfHeaderName: 'X-XSRF-TOKEN',

          maxContentLength: -1,

          validateStatus: function validateStatus(status) {
            return status >= 200 && status < 300;
          },
        };

        defaults.headers = {
          common: {
            Accept: 'application/json, text/plain, */*',
          },
        };

        utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(
          method
        ) {
          defaults.headers[method] = {};
        });

        utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(
          method
        ) {
          defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        });

        module.exports = defaults;

        /***/
      },
      /* 34 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var enhanceError = __webpack_require__(71);

        /**
         * Create an Error with the specified message, config, error code, request and response.
         *
         * @param {string} message The error message.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The created error.
         */
        module.exports = function createError(
          message,
          config,
          code,
          request,
          response
        ) {
          var error = new Error(message);
          return enhanceError(error, config, code, request, response);
        };

        /***/
      },
      /* 35 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var DevSpinner = function DevSpinner() {
          return null;
        }; // eslint-disable-line

        if (false) {
          DevSpinner = function DevSpinner() {
            return _react2.default.createElement(
              'div',
              {
                className: 'react-static-loading',
                style: {
                  display: 'block',
                  width: '100%',
                  textAlign: 'center',
                  padding: '10px',
                },
              },
              _react2.default.createElement(
                'style',
                null,
                '\n        @keyframes react-static-loader {\n          0% {\n            transform: rotate(0deg)\n          }\n          100% {\n            transform: rotate(360deg)\n          }\n        }\n      '
              ),
              _react2.default.createElement(
                'svg',
                {
                  style: {
                    width: '50px',
                    height: '50px',
                  },
                },
                _react2.default.createElement('circle', {
                  style: {
                    transformOrigin: '50% 50% 0px',
                    animation: 'react-static-loader 1s infinite',
                    r: 20,
                    stroke: 'rgba(0,0,0,0.4)',
                    strokeWidth: 4,
                    cx: 25,
                    cy: 25,
                    strokeDasharray: 10.4,
                    strokeLinecap: 'round',
                    fill: 'transparent',
                  },
                })
              )
            );
          };
        }

        exports.default = DevSpinner;

        /***/
      },
      /* 36 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        exports.locationsAreEqual = exports.createLocation = undefined;

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _resolvePathname = __webpack_require__(58);

        var _resolvePathname2 = _interopRequireDefault(_resolvePathname);

        var _valueEqual = __webpack_require__(59);

        var _valueEqual2 = _interopRequireDefault(_valueEqual);

        var _PathUtils = __webpack_require__(21);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var createLocation = (exports.createLocation = function createLocation(
          path,
          state,
          key,
          currentLocation
        ) {
          var location = void 0;
          if (typeof path === 'string') {
            // Two-arg form: push(path, state)
            location = (0, _PathUtils.parsePath)(path);
            location.state = state;
          } else {
            // One-arg form: push(location)
            location = _extends({}, path);

            if (location.pathname === undefined) location.pathname = '';

            if (location.search) {
              if (location.search.charAt(0) !== '?')
                location.search = '?' + location.search;
            } else {
              location.search = '';
            }

            if (location.hash) {
              if (location.hash.charAt(0) !== '#')
                location.hash = '#' + location.hash;
            } else {
              location.hash = '';
            }

            if (state !== undefined && location.state === undefined)
              location.state = state;
          }

          try {
            location.pathname = decodeURI(location.pathname);
          } catch (e) {
            if (e instanceof URIError) {
              throw new URIError(
                'Pathname "' +
                  location.pathname +
                  '" could not be decoded. ' +
                  'This is likely caused by an invalid percent-encoding.'
              );
            } else {
              throw e;
            }
          }

          if (key) location.key = key;

          if (currentLocation) {
            // Resolve incomplete/relative pathname relative to current location.
            if (!location.pathname) {
              location.pathname = currentLocation.pathname;
            } else if (location.pathname.charAt(0) !== '/') {
              location.pathname = (0, _resolvePathname2.default)(
                location.pathname,
                currentLocation.pathname
              );
            }
          } else {
            // When there is no prior location and pathname is empty, set it to /
            if (!location.pathname) {
              location.pathname = '/';
            }
          }

          return location;
        });

        var locationsAreEqual = (exports.locationsAreEqual = function locationsAreEqual(
          a,
          b
        ) {
          return (
            a.pathname === b.pathname &&
            a.search === b.search &&
            a.hash === b.hash &&
            a.key === b.key &&
            (0, _valueEqual2.default)(a.state, b.state)
          );
        });

        /***/
      },
      /* 37 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _warning = __webpack_require__(8);

        var _warning2 = _interopRequireDefault(_warning);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var createTransitionManager = function createTransitionManager() {
          var prompt = null;

          var setPrompt = function setPrompt(nextPrompt) {
            (0, _warning2.default)(
              prompt == null,
              'A history supports only one prompt at a time'
            );

            prompt = nextPrompt;

            return function() {
              if (prompt === nextPrompt) prompt = null;
            };
          };

          var confirmTransitionTo = function confirmTransitionTo(
            location,
            action,
            getUserConfirmation,
            callback
          ) {
            // TODO: If another transition starts while we're still confirming
            // the previous one, we may end up in a weird state. Figure out the
            // best way to handle this.
            if (prompt != null) {
              var result =
                typeof prompt === 'function'
                  ? prompt(location, action)
                  : prompt;

              if (typeof result === 'string') {
                if (typeof getUserConfirmation === 'function') {
                  getUserConfirmation(result, callback);
                } else {
                  (0, _warning2.default)(
                    false,
                    'A history needs a getUserConfirmation function in order to use a prompt message'
                  );

                  callback(true);
                }
              } else {
                // Return false from a transition hook to cancel the transition.
                callback(result !== false);
              }
            } else {
              callback(true);
            }
          };

          var listeners = [];

          var appendListener = function appendListener(fn) {
            var isActive = true;

            var listener = function listener() {
              if (isActive) fn.apply(undefined, arguments);
            };

            listeners.push(listener);

            return function() {
              isActive = false;
              listeners = listeners.filter(function(item) {
                return item !== listener;
              });
            };
          };

          var notifyListeners = function notifyListeners() {
            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            listeners.forEach(function(listener) {
              return listener.apply(undefined, args);
            });
          };

          return {
            setPrompt: setPrompt,
            confirmTransitionTo: confirmTransitionTo,
            appendListener: appendListener,
            notifyListeners: notifyListeners,
          };
        };

        exports.default = createTransitionManager;

        /***/
      },
      /* 38 */
      /***/ function(module, exports) {
        module.exports = require('path');

        /***/
      },
      /* 39 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var characterEntities = __webpack_require__(246);
        var legacy = __webpack_require__(247);
        var invalid = __webpack_require__(248);
        var decimal = __webpack_require__(22);
        var hexadecimal = __webpack_require__(249);
        var alphanumerical = __webpack_require__(250);

        module.exports = parseEntities;

        var own = {}.hasOwnProperty;
        var fromCharCode = String.fromCharCode;
        var noop = Function.prototype;

        /* Default settings. */
        var defaults = {
          warning: null,
          reference: null,
          text: null,
          warningContext: null,
          referenceContext: null,
          textContext: null,
          position: {},
          additional: null,
          attribute: false,
          nonTerminated: true,

          /* Reference types. */
        };
        var NAMED = 'named';
        var HEXADECIMAL = 'hexadecimal';
        var DECIMAL = 'decimal';

        /* Map of bases. */
        var BASE = {};

        BASE[HEXADECIMAL] = 16;
        BASE[DECIMAL] = 10;

        /* Map of types to tests. Each type of character reference
 * accepts different characters. This test is used to
 * detect whether a reference has ended (as the semicolon
 * is not strictly needed). */
        var TESTS = {};

        TESTS[NAMED] = alphanumerical;
        TESTS[DECIMAL] = decimal;
        TESTS[HEXADECIMAL] = hexadecimal;

        /* Warning messages. */
        var NAMED_NOT_TERMINATED = 1;
        var NUMERIC_NOT_TERMINATED = 2;
        var NAMED_EMPTY = 3;
        var NUMERIC_EMPTY = 4;
        var NAMED_UNKNOWN = 5;
        var NUMERIC_DISALLOWED = 6;
        var NUMERIC_PROHIBITED = 7;

        var MESSAGES = {};

        MESSAGES[NAMED_NOT_TERMINATED] =
          'Named character references must be terminated by a semicolon';
        MESSAGES[NUMERIC_NOT_TERMINATED] =
          'Numeric character references must be terminated by a semicolon';
        MESSAGES[NAMED_EMPTY] = 'Named character references cannot be empty';
        MESSAGES[NUMERIC_EMPTY] =
          'Numeric character references cannot be empty';
        MESSAGES[NAMED_UNKNOWN] = 'Named character references must be known';
        MESSAGES[NUMERIC_DISALLOWED] =
          'Numeric character references cannot be disallowed';
        MESSAGES[NUMERIC_PROHIBITED] =
          'Numeric character references cannot be outside the permissible Unicode range';

        /* Wrap to ensure clean parameters are given to `parse`. */
        function parseEntities(value, options) {
          var settings = {};
          var option;
          var key;

          if (!options) {
            options = {};
          }

          for (key in defaults) {
            option = options[key];
            settings[key] =
              option === null || option === undefined ? defaults[key] : option;
          }

          if (settings.position.indent || settings.position.start) {
            settings.indent = settings.position.indent || [];
            settings.position = settings.position.start;
          }

          return parse(value, settings);
        }

        /* Parse entities. */
        function parse(value, settings) {
          var additional = settings.additional;
          var nonTerminated = settings.nonTerminated;
          var handleText = settings.text;
          var handleReference = settings.reference;
          var handleWarning = settings.warning;
          var textContext = settings.textContext;
          var referenceContext = settings.referenceContext;
          var warningContext = settings.warningContext;
          var pos = settings.position;
          var indent = settings.indent || [];
          var length = value.length;
          var index = 0;
          var lines = -1;
          var column = pos.column || 1;
          var line = pos.line || 1;
          var queue = '';
          var result = [];
          var entityCharacters;
          var terminated;
          var characters;
          var character;
          var reference;
          var following;
          var warning;
          var reason;
          var output;
          var entity;
          var begin;
          var start;
          var type;
          var test;
          var prev;
          var next;
          var diff;
          var end;

          /* Cache the current point. */
          prev = now();

          /* Wrap `handleWarning`. */
          warning = handleWarning ? parseError : noop;

          /* Ensure the algorithm walks over the first character
   * and the end (inclusive). */
          index--;
          length++;

          while (++index < length) {
            /* If the previous character was a newline. */
            if (character === '\n') {
              column = indent[lines] || 1;
            }

            character = at(index);

            /* Handle anything other than an ampersand,
     * including newlines and EOF. */
            if (character !== '&') {
              if (character === '\n') {
                line++;
                lines++;
                column = 0;
              }

              if (character) {
                queue += character;
                column++;
              } else {
                flush();
              }
            } else {
              following = at(index + 1);

              /* The behaviour depends on the identity of the next
       * character. */
              if (
                following === '\t' /* Tab */ ||
                following === '\n' /* Newline */ ||
                following === '\f' /* Form feed */ ||
                following === ' ' /* Space */ ||
                following === '<' /* Less-than */ ||
                following === '&' /* Ampersand */ ||
                following === '' ||
                (additional && following === additional)
              ) {
                /* Not a character reference. No characters
         * are consumed, and nothing is returned.
         * This is not an error, either. */
                queue += character;
                column++;

                continue;
              }

              start = index + 1;
              begin = start;
              end = start;

              /* Numerical entity. */
              if (following !== '#') {
                type = NAMED;
              } else {
                end = ++begin;

                /* The behaviour further depends on the
         * character after the U+0023 NUMBER SIGN. */
                following = at(end);

                if (following === 'x' || following === 'X') {
                  /* ASCII hex digits. */
                  type = HEXADECIMAL;
                  end = ++begin;
                } else {
                  /* ASCII digits. */
                  type = DECIMAL;
                }
              }

              entityCharacters = '';
              entity = '';
              characters = '';
              test = TESTS[type];
              end--;

              while (++end < length) {
                following = at(end);

                if (!test(following)) {
                  break;
                }

                characters += following;

                /* Check if we can match a legacy named
         * reference.  If so, we cache that as the
         * last viable named reference.  This
         * ensures we do not need to walk backwards
         * later. */
                if (type === NAMED && own.call(legacy, characters)) {
                  entityCharacters = characters;
                  entity = legacy[characters];
                }
              }

              terminated = at(end) === ';';

              if (terminated) {
                end++;

                if (type === NAMED && own.call(characterEntities, characters)) {
                  entityCharacters = characters;
                  entity = characterEntities[characters];
                }
              }

              diff = 1 + end - start;

              if (!terminated && !nonTerminated) {
                /* Empty. */
              } else if (!characters) {
                /* An empty (possible) entity is valid, unless
         * its numeric (thus an ampersand followed by
         * an octothorp). */
                if (type !== NAMED) {
                  warning(NUMERIC_EMPTY, diff);
                }
              } else if (type === NAMED) {
                /* An ampersand followed by anything
         * unknown, and not terminated, is invalid. */
                if (terminated && !entity) {
                  warning(NAMED_UNKNOWN, 1);
                } else {
                  /* If theres something after an entity
           * name which is not known, cap the
           * reference. */
                  if (entityCharacters !== characters) {
                    end = begin + entityCharacters.length;
                    diff = 1 + end - begin;
                    terminated = false;
                  }

                  /* If the reference is not terminated,
           * warn. */
                  if (!terminated) {
                    reason = entityCharacters
                      ? NAMED_NOT_TERMINATED
                      : NAMED_EMPTY;

                    if (!settings.attribute) {
                      warning(reason, diff);
                    } else {
                      following = at(end);

                      if (following === '=') {
                        warning(reason, diff);
                        entity = null;
                      } else if (alphanumerical(following)) {
                        entity = null;
                      } else {
                        warning(reason, diff);
                      }
                    }
                  }
                }

                reference = entity;
              } else {
                if (!terminated) {
                  /* All non-terminated numeric entities are
           * not rendered, and trigger a warning. */
                  warning(NUMERIC_NOT_TERMINATED, diff);
                }

                /* When terminated and number, parse as
         * either hexadecimal or decimal. */
                reference = parseInt(characters, BASE[type]);

                /* Trigger a warning when the parsed number
         * is prohibited, and replace with
         * replacement character. */
                if (prohibited(reference)) {
                  warning(NUMERIC_PROHIBITED, diff);
                  reference = '\uFFFD';
                } else if (reference in invalid) {
                  /* Trigger a warning when the parsed number
           * is disallowed, and replace by an
           * alternative. */
                  warning(NUMERIC_DISALLOWED, diff);
                  reference = invalid[reference];
                } else {
                  /* Parse the number. */
                  output = '';

                  /* Trigger a warning when the parsed
           * number should not be used. */
                  if (disallowed(reference)) {
                    warning(NUMERIC_DISALLOWED, diff);
                  }

                  /* Stringify the number. */
                  if (reference > 0xffff) {
                    reference -= 0x10000;
                    output += fromCharCode(
                      (reference >>> (10 & 0x3ff)) | 0xd800
                    );
                    reference = 0xdc00 | (reference & 0x3ff);
                  }

                  reference = output + fromCharCode(reference);
                }
              }

              /* If we could not find a reference, queue the
       * checked characters (as normal characters),
       * and move the pointer to their end. This is
       * possible because we can be certain neither
       * newlines nor ampersands are included. */
              if (!reference) {
                characters = value.slice(start - 1, end);
                queue += characters;
                column += characters.length;
                index = end - 1;
              } else {
                /* Found it! First eat the queued
         * characters as normal text, then eat
         * an entity. */
                flush();

                prev = now();
                index = end - 1;
                column += end - start + 1;
                result.push(reference);
                next = now();
                next.offset++;

                if (handleReference) {
                  handleReference.call(
                    referenceContext,
                    reference,
                    { start: prev, end: next },
                    value.slice(start - 1, end)
                  );
                }

                prev = next;
              }
            }
          }

          /* Return the reduced nodes, and any possible warnings. */
          return result.join('');

          /* Get current position. */
          function now() {
            return {
              line: line,
              column: column,
              offset: index + (pos.offset || 0),
            };
          }

          /* “Throw” a parse-error: a warning. */
          function parseError(code, offset) {
            var position = now();

            position.column += offset;
            position.offset += offset;

            handleWarning.call(warningContext, MESSAGES[code], position, code);
          }

          /* Get character at position. */
          function at(position) {
            return value.charAt(position);
          }

          /* Flush `queue` (normal text). Macro invoked before
   * each entity and at the end of `value`.
   * Does nothing when `queue` is empty. */
          function flush() {
            if (queue) {
              result.push(queue);

              if (handleText) {
                handleText.call(textContext, queue, {
                  start: prev,
                  end: now(),
                });
              }

              queue = '';
            }
          }
        }

        /* Check if `character` is outside the permissible unicode range. */
        function prohibited(code) {
          return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff;
        }

        /* Check if `character` is disallowed. */
        function disallowed(code) {
          return (
            (code >= 0x0001 && code <= 0x0008) ||
            code === 0x000b ||
            (code >= 0x000d && code <= 0x001f) ||
            (code >= 0x007f && code <= 0x009f) ||
            (code >= 0xfdd0 && code <= 0xfdef) ||
            (code & 0xffff) === 0xffff ||
            (code & 0xffff) === 0xfffe
          );
        }

        /***/
      },
      /* 40 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */

        /**
         * Results cache
         */

        var res = '';
        var cache;

        /**
         * Expose `repeat`
         */

        module.exports = repeat;

        /**
         * Repeat the given `string` the specified `number`
         * of times.
         *
         * **Example:**
         *
         * ```js
         * var repeat = require('repeat-string');
         * repeat('A', 5);
         * //=> AAAAA
         * ```
         *
         * @param {String} `string` The string to repeat
         * @param {Number} `number` The number of times to repeat the string
         * @return {String} Repeated string
         * @api public
         */

        function repeat(str, num) {
          if (typeof str !== 'string') {
            throw new TypeError('expected a string');
          }

          // cover common, quick use cases
          if (num === 1) return str;
          if (num === 2) return str + str;

          var max = str.length * num;
          if (cache !== str || typeof cache === 'undefined') {
            cache = str;
            res = '';
          } else if (res.length >= max) {
            return res.substr(0, max);
          }

          while (max > res.length && num > 1) {
            if (num & 1) {
              res += str;
            }

            num >>= 1;
            str += str;
          }

          res += str;
          res = res.substr(0, max);
          return res;
        }

        /***/
      },
      /* 41 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = trimTrailingLines;

        var line = '\n';

        /* Remove final newline characters from `value`. */
        function trimTrailingLines(value) {
          var val = String(value);
          var index = val.length;

          while (val.charAt(--index) === line) {
            /* Empty */
          }

          return val.slice(0, index + 1);
        }

        /***/
      },
      /* 42 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = interrupt;

        function interrupt(interruptors, tokenizers, ctx, params) {
          var bools = ['pedantic', 'commonmark'];
          var count = bools.length;
          var length = interruptors.length;
          var index = -1;
          var interruptor;
          var config;
          var fn;
          var offset;
          var bool;
          var ignore;

          while (++index < length) {
            interruptor = interruptors[index];
            config = interruptor[1] || {};
            fn = interruptor[0];
            offset = -1;
            ignore = false;

            while (++offset < count) {
              bool = bools[offset];

              if (
                config[bool] !== undefined &&
                config[bool] !== ctx.options[bool]
              ) {
                ignore = true;
                break;
              }
            }

            if (ignore) {
              continue;
            }

            if (tokenizers[fn].apply(ctx, params)) {
              return true;
            }
          }

          return false;
        }

        /***/
      },
      /* 43 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var collapseWhiteSpace = __webpack_require__(269);

        module.exports = normalize;

        /* Normalize an identifier.  Collapses multiple white space
 * characters into a single space, and removes casing. */
        function normalize(value) {
          return collapseWhiteSpace(value).toLowerCase();
        }

        /***/
      },
      /* 44 */
      /***/ function(module, exports) {
        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return value != null && (type == 'object' || type == 'function');
        }

        module.exports = isObject;

        /***/
      },
      /* 45 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        /**
         * Use invariant() to assert state which your program assumes to be true.
         *
         * Provide sprintf-style format (only %s is supported) and arguments
         * to provide information about what broke and what you were
         * expecting.
         *
         * The invariant message will be stripped in production, but the invariant
         * will remain to ensure logic does not differ in production.
         */

        var validateFormat = function validateFormat(format) {};

        if (false) {
          validateFormat = function validateFormat(format) {
            if (format === undefined) {
              throw new Error('invariant requires an error message argument');
            }
          };
        }

        function invariant(condition, format, a, b, c, d, e, f) {
          validateFormat(format);

          if (!condition) {
            var error;
            if (format === undefined) {
              error = new Error(
                'Minified exception occurred; use the non-minified dev environment ' +
                  'for the full error message and additional helpful warnings.'
              );
            } else {
              var args = [a, b, c, d, e, f];
              var argIndex = 0;
              error = new Error(
                format.replace(/%s/g, function() {
                  return args[argIndex++];
                })
              );
              error.name = 'Invariant Violation';
            }

            error.framesToPop = 1; // we don't care about invariant's own frame
            throw error;
          }
        }

        module.exports = invariant;

        /***/
      },
      /* 46 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var emptyObject = {};

        if (false) {
          Object.freeze(emptyObject);
        }

        module.exports = emptyObject;

        /***/
      },
      /* 47 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         */

        function makeEmptyFunction(arg) {
          return function() {
            return arg;
          };
        }

        /**
         * This function accepts and discards inputs; it has no side effects. This is
         * primarily useful idiomatically for overridable function endpoints which
         * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
         */
        var emptyFunction = function emptyFunction() {};

        emptyFunction.thatReturns = makeEmptyFunction;
        emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
        emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
        emptyFunction.thatReturnsNull = makeEmptyFunction(null);
        emptyFunction.thatReturnsThis = function() {
          return this;
        };
        emptyFunction.thatReturnsArgument = function(arg) {
          return arg;
        };

        module.exports = emptyFunction;

        /***/
      },
      /* 48 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        function checkDCE() {
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
          if (
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
          ) {
            return;
          }
          if (false) {
            // This branch is unreachable because this function is only called
            // in production, but the condition is true only in development.
            // Therefore if the branch is still here, dead code elimination wasn't
            // properly applied.
            // Don't change the message. React DevTools relies on it. Also make sure
            // this message doesn't occur elsewhere in this function, or it will cause
            // a false positive.
            throw new Error('^_^');
          }
          try {
            // Verify that the code above has been dead code eliminated (DCE'd).
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
          } catch (err) {
            // DevTools shouldn't crash React, no matter what.
            // We should still report in case we break this code.
            console.error(err);
          }
        }

        if (true) {
          // DCE check should happen before ReactDOM bundle executes so that
          // DevTools can report bad minification during injection.
          checkDCE();
          module.exports = __webpack_require__(106);
        } else {
          module.exports = require('./cjs/react-dom.development.js');
        }

        /***/
      },
      /* 49 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return subscriptionShape;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return storeShape;
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_prop_types__
        );

        var subscriptionShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape(
          {
            trySubscribe:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
            tryUnsubscribe:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
            notifyNestedSubs:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
            isSubscribed:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
          }
        );

        var storeShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape(
          {
            subscribe:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
            dispatch:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
            getState:
              __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func
                .isRequired,
          }
        );

        /***/
      },
      /* 50 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = connectAdvanced;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__ = __webpack_require__(
          26
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__ = __webpack_require__(
          118
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__ = __webpack_require__(
          49
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        var hotReloadingVersion = 0;
        var dummyState = {};
        function noop() {}
        function makeSelectorStateful(sourceSelector, store) {
          // wrap the selector in an object that tracks its results between runs.
          var selector = {
            run: function runComponentSelector(props) {
              try {
                var nextProps = sourceSelector(store.getState(), props);
                if (nextProps !== selector.props || selector.error) {
                  selector.shouldComponentUpdate = true;
                  selector.props = nextProps;
                  selector.error = null;
                }
              } catch (error) {
                selector.shouldComponentUpdate = true;
                selector.error = error;
              }
            },
          };

          return selector;
        }

        function connectAdvanced(
          /*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
          selectorFactory
        ) {
          var _contextTypes, _childContextTypes;

          var _ref =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            _ref$getDisplayName = _ref.getDisplayName,
            getDisplayName =
              _ref$getDisplayName === undefined
                ? function(name) {
                    return 'ConnectAdvanced(' + name + ')';
                  }
                : _ref$getDisplayName,
            _ref$methodName = _ref.methodName,
            methodName =
              _ref$methodName === undefined
                ? 'connectAdvanced'
                : _ref$methodName,
            _ref$renderCountProp = _ref.renderCountProp,
            renderCountProp =
              _ref$renderCountProp === undefined
                ? undefined
                : _ref$renderCountProp,
            _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
            shouldHandleStateChanges =
              _ref$shouldHandleStat === undefined
                ? true
                : _ref$shouldHandleStat,
            _ref$storeKey = _ref.storeKey,
            storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
            _ref$withRef = _ref.withRef,
            withRef = _ref$withRef === undefined ? false : _ref$withRef,
            connectOptions = _objectWithoutProperties(_ref, [
              'getDisplayName',
              'methodName',
              'renderCountProp',
              'shouldHandleStateChanges',
              'storeKey',
              'withRef',
            ]);

          var subscriptionKey = storeKey + 'Subscription';
          var version = hotReloadingVersion++;

          var contextTypes = ((_contextTypes = {}),
          (_contextTypes[storeKey] =
            __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[
              'a' /* storeShape */
            ]),
          (_contextTypes[subscriptionKey] =
            __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[
              'b' /* subscriptionShape */
            ]),
          _contextTypes);
          var childContextTypes = ((_childContextTypes = {}),
          (_childContextTypes[subscriptionKey] =
            __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__[
              'b' /* subscriptionShape */
            ]),
          _childContextTypes);

          return function wrapWithConnect(WrappedComponent) {
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              typeof WrappedComponent == 'function',
              'You must pass a component to the function returned by ' +
                (methodName +
                  '. Instead received ' +
                  JSON.stringify(WrappedComponent))
            );

            var wrappedComponentName =
              WrappedComponent.displayName ||
              WrappedComponent.name ||
              'Component';

            var displayName = getDisplayName(wrappedComponentName);

            var selectorFactoryOptions = _extends({}, connectOptions, {
              getDisplayName: getDisplayName,
              methodName: methodName,
              renderCountProp: renderCountProp,
              shouldHandleStateChanges: shouldHandleStateChanges,
              storeKey: storeKey,
              withRef: withRef,
              displayName: displayName,
              wrappedComponentName: wrappedComponentName,
              WrappedComponent: WrappedComponent,
            });

            var Connect = (function(_Component) {
              _inherits(Connect, _Component);

              function Connect(props, context) {
                _classCallCheck(this, Connect);

                var _this = _possibleConstructorReturn(
                  this,
                  _Component.call(this, props, context)
                );

                _this.version = version;
                _this.state = {};
                _this.renderCount = 0;
                _this.store = props[storeKey] || context[storeKey];
                _this.propsMode = Boolean(props[storeKey]);
                _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

                __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
                  _this.store,
                  'Could not find "' +
                    storeKey +
                    '" in either the context or props of ' +
                    ('"' +
                      displayName +
                      '". Either wrap the root component in a <Provider>, ') +
                    ('or explicitly pass "' +
                      storeKey +
                      '" as a prop to "' +
                      displayName +
                      '".')
                );

                _this.initSelector();
                _this.initSubscription();
                return _this;
              }

              Connect.prototype.getChildContext = function getChildContext() {
                var _ref2;

                // If this component received store from props, its subscription should be transparent
                // to any descendants receiving store+subscription from context; it passes along
                // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
                // Connect to control ordering of notifications to flow top-down.
                var subscription = this.propsMode ? null : this.subscription;
                return (
                  (_ref2 = {}),
                  (_ref2[subscriptionKey] =
                    subscription || this.context[subscriptionKey]),
                  _ref2
                );
              };

              Connect.prototype.componentDidMount = function componentDidMount() {
                if (!shouldHandleStateChanges) return;

                // componentWillMount fires during server side rendering, but componentDidMount and
                // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
                // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
                // To handle the case where a child component may have triggered a state change by
                // dispatching an action in its componentWillMount, we have to re-run the select and maybe
                // re-render.
                this.subscription.trySubscribe();
                this.selector.run(this.props);
                if (this.selector.shouldComponentUpdate) this.forceUpdate();
              };

              Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(
                nextProps
              ) {
                this.selector.run(nextProps);
              };

              Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
                return this.selector.shouldComponentUpdate;
              };

              Connect.prototype.componentWillUnmount = function componentWillUnmount() {
                if (this.subscription) this.subscription.tryUnsubscribe();
                this.subscription = null;
                this.notifyNestedSubs = noop;
                this.store = null;
                this.selector.run = noop;
                this.selector.shouldComponentUpdate = false;
              };

              Connect.prototype.getWrappedInstance = function getWrappedInstance() {
                __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
                  withRef,
                  'To access the wrapped instance, you need to specify ' +
                    ('{ withRef: true } in the options argument of the ' +
                      methodName +
                      '() call.')
                );
                return this.wrappedInstance;
              };

              Connect.prototype.setWrappedInstance = function setWrappedInstance(
                ref
              ) {
                this.wrappedInstance = ref;
              };

              Connect.prototype.initSelector = function initSelector() {
                var sourceSelector = selectorFactory(
                  this.store.dispatch,
                  selectorFactoryOptions
                );
                this.selector = makeSelectorStateful(
                  sourceSelector,
                  this.store
                );
                this.selector.run(this.props);
              };

              Connect.prototype.initSubscription = function initSubscription() {
                if (!shouldHandleStateChanges) return;

                // parentSub's source should match where store came from: props vs. context. A component
                // connected to the store via props shouldn't use subscription from context, or vice versa.
                var parentSub = (this.propsMode ? this.props : this.context)[
                  subscriptionKey
                ];
                this.subscription = new __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__[
                  'a' /* default */
                ](this.store, parentSub, this.onStateChange.bind(this));

                // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
                // the middle of the notification loop, where `this.subscription` will then be null. An
                // extra null check every change can be avoided by copying the method onto `this` and then
                // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
                // listeners logic is changed to not call listeners that have been unsubscribed in the
                // middle of the notification loop.
                this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(
                  this.subscription
                );
              };

              Connect.prototype.onStateChange = function onStateChange() {
                this.selector.run(this.props);

                if (!this.selector.shouldComponentUpdate) {
                  this.notifyNestedSubs();
                } else {
                  this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
                  this.setState(dummyState);
                }
              };

              Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
                // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
                // needs to notify nested subs. Once called, it unimplements itself until further state
                // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
                // a boolean check every time avoids an extra method call most of the time, resulting
                // in some perf boost.
                this.componentDidUpdate = undefined;
                this.notifyNestedSubs();
              };

              Connect.prototype.isSubscribed = function isSubscribed() {
                return (
                  Boolean(this.subscription) && this.subscription.isSubscribed()
                );
              };

              Connect.prototype.addExtraProps = function addExtraProps(props) {
                if (
                  !withRef &&
                  !renderCountProp &&
                  !(this.propsMode && this.subscription)
                )
                  return props;
                // make a shallow copy so that fields added don't leak to the original selector.
                // this is especially important for 'ref' since that's a reference back to the component
                // instance. a singleton memoized selector would then be holding a reference to the
                // instance, preventing the instance from being garbage collected, and that would be bad
                var withExtras = _extends({}, props);
                if (withRef) withExtras.ref = this.setWrappedInstance;
                if (renderCountProp)
                  withExtras[renderCountProp] = this.renderCount++;
                if (this.propsMode && this.subscription)
                  withExtras[subscriptionKey] = this.subscription;
                return withExtras;
              };

              Connect.prototype.render = function render() {
                var selector = this.selector;
                selector.shouldComponentUpdate = false;

                if (selector.error) {
                  throw selector.error;
                } else {
                  return Object(
                    __WEBPACK_IMPORTED_MODULE_2_react__['createElement']
                  )(WrappedComponent, this.addExtraProps(selector.props));
                }
              };

              return Connect;
            })(__WEBPACK_IMPORTED_MODULE_2_react__['Component']);

            Connect.WrappedComponent = WrappedComponent;
            Connect.displayName = displayName;
            Connect.childContextTypes = childContextTypes;
            Connect.contextTypes = contextTypes;
            Connect.propTypes = contextTypes;

            if (false) {
              Connect.prototype.componentWillUpdate = function componentWillUpdate() {
                var _this2 = this;

                // We are hot reloading!
                if (this.version !== version) {
                  this.version = version;
                  this.initSelector();

                  // If any connected descendants don't hot reload (and resubscribe in the process), their
                  // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
                  // listeners, this does mean that the old versions of connected descendants will still be
                  // notified of state changes; however, their onStateChange function is a no-op so this
                  // isn't a huge deal.
                  var oldListeners = [];

                  if (this.subscription) {
                    oldListeners = this.subscription.listeners.get();
                    this.subscription.tryUnsubscribe();
                  }
                  this.initSubscription();
                  if (shouldHandleStateChanges) {
                    this.subscription.trySubscribe();
                    oldListeners.forEach(function(listener) {
                      return _this2.subscription.listeners.subscribe(listener);
                    });
                  }
                }
              };
            }

            return __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default()(
              Connect,
              WrappedComponent
            );
          };
        }

        /***/
      },
      /* 51 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return ActionTypes;
          }
        );
        /* harmony export (immutable) */ __webpack_exports__['b'] = createStore;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(
          27
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(
          130
        );

        /**
         * These are private action types reserved by Redux.
         * For any unknown actions, you must return the current state.
         * If the current state is undefined, you must return the initial state.
         * Do not reference these action types directly in your code.
         */
        var ActionTypes = {
          INIT: '@@redux/INIT',

          /**
           * Creates a Redux store that holds the state tree.
           * The only way to change the data in the store is to call `dispatch()` on it.
           *
           * There should only be a single store in your app. To specify how different
           * parts of the state tree respond to actions, you may combine several reducers
           * into a single reducer function by using `combineReducers`.
           *
           * @param {Function} reducer A function that returns the next state tree, given
           * the current state tree and the action to handle.
           *
           * @param {any} [preloadedState] The initial state. You may optionally specify it
           * to hydrate the state from the server in universal apps, or to restore a
           * previously serialized user session.
           * If you use `combineReducers` to produce the root reducer function, this must be
           * an object with the same shape as `combineReducers` keys.
           *
           * @param {Function} [enhancer] The store enhancer. You may optionally specify it
           * to enhance the store with third-party capabilities such as middleware,
           * time travel, persistence, etc. The only store enhancer that ships with Redux
           * is `applyMiddleware()`.
           *
           * @returns {Store} A Redux store that lets you read the state, dispatch actions
           * and subscribe to changes.
           */
        };
        function createStore(reducer, preloadedState, enhancer) {
          var _ref2;

          if (
            typeof preloadedState === 'function' &&
            typeof enhancer === 'undefined'
          ) {
            enhancer = preloadedState;
            preloadedState = undefined;
          }

          if (typeof enhancer !== 'undefined') {
            if (typeof enhancer !== 'function') {
              throw new Error('Expected the enhancer to be a function.');
            }

            return enhancer(createStore)(reducer, preloadedState);
          }

          if (typeof reducer !== 'function') {
            throw new Error('Expected the reducer to be a function.');
          }

          var currentReducer = reducer;
          var currentState = preloadedState;
          var currentListeners = [];
          var nextListeners = currentListeners;
          var isDispatching = false;

          function ensureCanMutateNextListeners() {
            if (nextListeners === currentListeners) {
              nextListeners = currentListeners.slice();
            }
          }

          /**
           * Reads the state tree managed by the store.
           *
           * @returns {any} The current state tree of your application.
           */
          function getState() {
            return currentState;
          }

          /**
           * Adds a change listener. It will be called any time an action is dispatched,
           * and some part of the state tree may potentially have changed. You may then
           * call `getState()` to read the current state tree inside the callback.
           *
           * You may call `dispatch()` from a change listener, with the following
           * caveats:
           *
           * 1. The subscriptions are snapshotted just before every `dispatch()` call.
           * If you subscribe or unsubscribe while the listeners are being invoked, this
           * will not have any effect on the `dispatch()` that is currently in progress.
           * However, the next `dispatch()` call, whether nested or not, will use a more
           * recent snapshot of the subscription list.
           *
           * 2. The listener should not expect to see all state changes, as the state
           * might have been updated multiple times during a nested `dispatch()` before
           * the listener is called. It is, however, guaranteed that all subscribers
           * registered before the `dispatch()` started will be called with the latest
           * state by the time it exits.
           *
           * @param {Function} listener A callback to be invoked on every dispatch.
           * @returns {Function} A function to remove this change listener.
           */
          function subscribe(listener) {
            if (typeof listener !== 'function') {
              throw new Error('Expected listener to be a function.');
            }

            var isSubscribed = true;

            ensureCanMutateNextListeners();
            nextListeners.push(listener);

            return function unsubscribe() {
              if (!isSubscribed) {
                return;
              }

              isSubscribed = false;

              ensureCanMutateNextListeners();
              var index = nextListeners.indexOf(listener);
              nextListeners.splice(index, 1);
            };
          }

          /**
           * Dispatches an action. It is the only way to trigger a state change.
           *
           * The `reducer` function, used to create the store, will be called with the
           * current state tree and the given `action`. Its return value will
           * be considered the **next** state of the tree, and the change listeners
           * will be notified.
           *
           * The base implementation only supports plain object actions. If you want to
           * dispatch a Promise, an Observable, a thunk, or something else, you need to
           * wrap your store creating function into the corresponding middleware. For
           * example, see the documentation for the `redux-thunk` package. Even the
           * middleware will eventually dispatch plain object actions using this method.
           *
           * @param {Object} action A plain object representing “what changed”. It is
           * a good idea to keep actions serializable so you can record and replay user
           * sessions, or use the time travelling `redux-devtools`. An action must have
           * a `type` property which may not be `undefined`. It is a good idea to use
           * string constants for action types.
           *
           * @returns {Object} For convenience, the same action object you dispatched.
           *
           * Note that, if you use a custom middleware, it may wrap `dispatch()` to
           * return something else (for example, a Promise you can await).
           */
          function dispatch(action) {
            if (
              !Object(
                __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__[
                  'a' /* default */
                ]
              )(action)
            ) {
              throw new Error(
                'Actions must be plain objects. ' +
                  'Use custom middleware for async actions.'
              );
            }

            if (typeof action.type === 'undefined') {
              throw new Error(
                'Actions may not have an undefined "type" property. ' +
                  'Have you misspelled a constant?'
              );
            }

            if (isDispatching) {
              throw new Error('Reducers may not dispatch actions.');
            }

            try {
              isDispatching = true;
              currentState = currentReducer(currentState, action);
            } finally {
              isDispatching = false;
            }

            var listeners = (currentListeners = nextListeners);
            for (var i = 0; i < listeners.length; i++) {
              var listener = listeners[i];
              listener();
            }

            return action;
          }

          /**
           * Replaces the reducer currently used by the store to calculate the state.
           *
           * You might need this if your app implements code splitting and you want to
           * load some of the reducers dynamically. You might also need this if you
           * implement a hot reloading mechanism for Redux.
           *
           * @param {Function} nextReducer The reducer for the store to use instead.
           * @returns {void}
           */
          function replaceReducer(nextReducer) {
            if (typeof nextReducer !== 'function') {
              throw new Error('Expected the nextReducer to be a function.');
            }

            currentReducer = nextReducer;
            dispatch({ type: ActionTypes.INIT });
          }

          /**
           * Interoperability point for observable/reactive libraries.
           * @returns {observable} A minimal observable of state changes.
           * For more information, see the observable proposal:
           * https://github.com/tc39/proposal-observable
           */
          function observable() {
            var _ref;

            var outerSubscribe = subscribe;
            return (
              (_ref = {
                /**
                 * The minimal observable subscription method.
                 * @param {Object} observer Any object that can be used as an observer.
                 * The observer object should have a `next` method.
                 * @returns {subscription} An object with an `unsubscribe` method that can
                 * be used to unsubscribe the observable from the store, and prevent further
                 * emission of values from the observable.
                 */
                subscribe: function subscribe(observer) {
                  if (typeof observer !== 'object') {
                    throw new TypeError(
                      'Expected the observer to be an object.'
                    );
                  }

                  function observeState() {
                    if (observer.next) {
                      observer.next(getState());
                    }
                  }

                  observeState();
                  var unsubscribe = outerSubscribe(observeState);
                  return { unsubscribe: unsubscribe };
                },
              }),
              (_ref[
                __WEBPACK_IMPORTED_MODULE_1_symbol_observable__[
                  'a' /* default */
                ]
              ] = function() {
                return this;
              }),
              _ref
            );
          }

          // When a store is created, an "INIT" action is dispatched so that every
          // reducer returns their initial state. This effectively populates
          // the initial state tree.
          dispatch({ type: ActionTypes.INIT });

          return (
            (_ref2 = {
              dispatch: dispatch,
              subscribe: subscribe,
              getState: getState,
              replaceReducer: replaceReducer,
            }),
            (_ref2[
              __WEBPACK_IMPORTED_MODULE_1_symbol_observable__['a' /* default */]
            ] = observable),
            _ref2
          );
        }

        /***/
      },
      /* 52 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(
          123
        );

        /** Built-in value references. */
        var Symbol =
          __WEBPACK_IMPORTED_MODULE_0__root_js__['a' /* default */].Symbol;

        /* harmony default export */ __webpack_exports__['a'] = Symbol;

        /***/
      },
      /* 53 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export default */
        /**
         * Prints a warning in the console if it exists.
         *
         * @param {String} message The warning message.
         * @returns {void}
         */
        function warning(message) {
          /* eslint-disable no-console */
          if (
            typeof console !== 'undefined' &&
            typeof console.error === 'function'
          ) {
            console.error(message);
          }
          /* eslint-enable no-console */
          try {
            // This error was thrown as a convenience so that if you enable
            // "break on all exceptions" in your console,
            // it would pause the execution at this line.
            throw new Error(message);
            /* eslint-disable no-empty */
          } catch (e) {}
          /* eslint-enable no-empty */
        }

        /***/
      },
      /* 54 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__['a'] = compose;
        /**
         * Composes single-argument functions from right to left. The rightmost
         * function can take multiple arguments as it provides the signature for
         * the resulting composite function.
         *
         * @param {...Function} funcs The functions to compose.
         * @returns {Function} A function obtained by composing the argument functions
         * from right to left. For example, compose(f, g, h) is identical to doing
         * (...args) => f(g(h(...args))).
         */

        function compose() {
          for (
            var _len = arguments.length, funcs = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            funcs[_key] = arguments[_key];
          }

          if (funcs.length === 0) {
            return function(arg) {
              return arg;
            };
          }

          if (funcs.length === 1) {
            return funcs[0];
          }

          return funcs.reduce(function(a, b) {
            return function() {
              return a(b.apply(undefined, arguments));
            };
          });
        }

        /***/
      },
      /* 55 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = wrapMapToPropsConstant;
        /* unused harmony export getDependsOnOwnProps */
        /* harmony export (immutable) */ __webpack_exports__[
          'b'
        ] = wrapMapToPropsFunc;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(
          56
        );

        function wrapMapToPropsConstant(getConstant) {
          return function initConstantSelector(dispatch, options) {
            var constant = getConstant(dispatch, options);

            function constantSelector() {
              return constant;
            }
            constantSelector.dependsOnOwnProps = false;
            return constantSelector;
          };
        }

        // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
        // to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
        // whether mapToProps needs to be invoked when props have changed.
        //
        // A length of one signals that mapToProps does not depend on props from the parent component.
        // A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
        // therefore not reporting its length accurately..
        function getDependsOnOwnProps(mapToProps) {
          return mapToProps.dependsOnOwnProps !== null &&
            mapToProps.dependsOnOwnProps !== undefined
            ? Boolean(mapToProps.dependsOnOwnProps)
            : mapToProps.length !== 1;
        }

        // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
        // this function wraps mapToProps in a proxy function which does several things:
        //
        //  * Detects whether the mapToProps function being called depends on props, which
        //    is used by selectorFactory to decide if it should reinvoke on props changes.
        //
        //  * On first call, handles mapToProps if returns another function, and treats that
        //    new function as the true mapToProps for subsequent calls.
        //
        //  * On first call, verifies the first result is a plain object, in order to warn
        //    the developer that their mapToProps function is not returning a valid result.
        //
        function wrapMapToPropsFunc(mapToProps, methodName) {
          return function initProxySelector(dispatch, _ref) {
            var displayName = _ref.displayName;

            var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
              return proxy.dependsOnOwnProps
                ? proxy.mapToProps(stateOrDispatch, ownProps)
                : proxy.mapToProps(stateOrDispatch);
            };

            // allow detectFactoryAndVerify to get ownProps
            proxy.dependsOnOwnProps = true;

            proxy.mapToProps = function detectFactoryAndVerify(
              stateOrDispatch,
              ownProps
            ) {
              proxy.mapToProps = mapToProps;
              proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
              var props = proxy(stateOrDispatch, ownProps);

              if (typeof props === 'function') {
                proxy.mapToProps = props;
                proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
                props = proxy(stateOrDispatch, ownProps);
              }

              if (false) verifyPlainObject(props, displayName, methodName);

              return props;
            };

            return proxy;
          };
        }

        /***/
      },
      /* 56 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(
          27
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(
          25
        );

        function verifyPlainObject(value, displayName, methodName) {
          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__[
                'a' /* default */
              ]
            )(value)
          ) {
            Object(__WEBPACK_IMPORTED_MODULE_1__warning__['a' /* default */])(
              methodName +
                '() in ' +
                displayName +
                ' must return a plain object. Instead received ' +
                value +
                '.'
            );
          }
        }

        /***/
      },
      /* 57 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule warning
         */

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var __DEV__ = 'production' !== 'production';

        var warning = function() {};

        if (__DEV__) {
          var printWarning = function printWarning(format, args) {
            var len = arguments.length;
            args = new Array(len > 2 ? len - 2 : 0);
            for (var key = 2; key < len; key++) {
              args[key - 2] = arguments[key];
            }
            var argIndex = 0;
            var message =
              'Warning: ' +
              format.replace(/%s/g, function() {
                return args[argIndex++];
              });
            if (typeof console !== 'undefined') {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          warning = function(condition, format, args) {
            var len = arguments.length;
            args = new Array(len > 2 ? len - 2 : 0);
            for (var key = 2; key < len; key++) {
              args[key - 2] = arguments[key];
            }
            if (format === undefined) {
              throw new Error(
                '`warning(condition, format, ...args)` requires a warning ' +
                  'message argument'
              );
            }
            if (!condition) {
              printWarning.apply(null, [format].concat(args));
            }
          };
        }

        module.exports = warning;

        /***/
      },
      /* 58 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        function isAbsolute(pathname) {
          return pathname.charAt(0) === '/';
        }

        // About 1.5x faster than the two-arg version of Array#splice()
        function spliceOne(list, index) {
          for (
            var i = index, k = i + 1, n = list.length;
            k < n;
            i += 1, k += 1
          ) {
            list[i] = list[k];
          }

          list.pop();
        }

        // This implementation is based heavily on node's url.parse
        function resolvePathname(to) {
          var from =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : '';

          var toParts = (to && to.split('/')) || [];
          var fromParts = (from && from.split('/')) || [];

          var isToAbs = to && isAbsolute(to);
          var isFromAbs = from && isAbsolute(from);
          var mustEndAbs = isToAbs || isFromAbs;

          if (to && isAbsolute(to)) {
            // to is absolute
            fromParts = toParts;
          } else if (toParts.length) {
            // to is relative, drop the filename
            fromParts.pop();
            fromParts = fromParts.concat(toParts);
          }

          if (!fromParts.length) return '/';

          var hasTrailingSlash = void 0;
          if (fromParts.length) {
            var last = fromParts[fromParts.length - 1];
            hasTrailingSlash = last === '.' || last === '..' || last === '';
          } else {
            hasTrailingSlash = false;
          }

          var up = 0;
          for (var i = fromParts.length; i >= 0; i--) {
            var part = fromParts[i];

            if (part === '.') {
              spliceOne(fromParts, i);
            } else if (part === '..') {
              spliceOne(fromParts, i);
              up++;
            } else if (up) {
              spliceOne(fromParts, i);
              up--;
            }
          }

          if (!mustEndAbs)
            for (; up--; up) {
              fromParts.unshift('..');
            }
          if (
            mustEndAbs &&
            fromParts[0] !== '' &&
            (!fromParts[0] || !isAbsolute(fromParts[0]))
          )
            fromParts.unshift('');

          var result = fromParts.join('/');

          if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

          return result;
        }

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = resolvePathname;

        /***/
      },
      /* 59 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        function valueEqual(a, b) {
          if (a === b) return true;

          if (a == null || b == null) return false;

          if (Array.isArray(a)) {
            return (
              Array.isArray(b) &&
              a.length === b.length &&
              a.every(function(item, index) {
                return valueEqual(item, b[index]);
              })
            );
          }

          var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
          var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

          if (aType !== bType) return false;

          if (aType === 'object') {
            var aValue = a.valueOf();
            var bValue = b.valueOf();

            if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

            var aKeys = Object.keys(a);
            var bKeys = Object.keys(b);

            if (aKeys.length !== bKeys.length) return false;

            return aKeys.every(function(key) {
              return valueEqual(a[key], b[key]);
            });
          }

          return false;
        }

        /* harmony default export */ __webpack_exports__[
          'default'
        ] = valueEqual;

        /***/
      },
      /* 60 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return canUseDOM;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return addEventListener;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'e',
          function() {
            return removeEventListener;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'c',
          function() {
            return getConfirmation;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'g',
          function() {
            return supportsHistory;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'h',
          function() {
            return supportsPopStateOnHashChange;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'f',
          function() {
            return supportsGoWithoutReloadUsingHash;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'd',
          function() {
            return isExtraneousPopstateEvent;
          }
        );
        var canUseDOM = !!(
          typeof window !== 'undefined' &&
          window.document &&
          window.document.createElement
        );

        var addEventListener = function addEventListener(
          node,
          event,
          listener
        ) {
          return node.addEventListener
            ? node.addEventListener(event, listener, false)
            : node.attachEvent('on' + event, listener);
        };

        var removeEventListener = function removeEventListener(
          node,
          event,
          listener
        ) {
          return node.removeEventListener
            ? node.removeEventListener(event, listener, false)
            : node.detachEvent('on' + event, listener);
        };

        var getConfirmation = function getConfirmation(message, callback) {
          return callback(window.confirm(message));
        }; // eslint-disable-line no-alert

        /**
         * Returns true if the HTML5 history API is supported. Taken from Modernizr.
         *
         * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
         * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
         * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
         */
        var supportsHistory = function supportsHistory() {
          var ua = window.navigator.userAgent;

          if (
            (ua.indexOf('Android 2.') !== -1 ||
              ua.indexOf('Android 4.0') !== -1) &&
            ua.indexOf('Mobile Safari') !== -1 &&
            ua.indexOf('Chrome') === -1 &&
            ua.indexOf('Windows Phone') === -1
          )
            return false;

          return window.history && 'pushState' in window.history;
        };

        /**
         * Returns true if browser fires popstate on hash change.
         * IE10 and IE11 do not.
         */
        var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
          return window.navigator.userAgent.indexOf('Trident') === -1;
        };

        /**
         * Returns false if using go(n) with hash history causes a full page reload.
         */
        var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
          return window.navigator.userAgent.indexOf('Firefox') === -1;
        };

        /**
         * Returns true if a given popstate event is an extraneous WebKit event.
         * Accounts for the fact that Chrome on iOS fires real popstate events
         * containing undefined state when pressing the back button.
         */
        var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(
          event
        ) {
          return (
            event.state === undefined &&
            navigator.userAgent.indexOf('CriOS') === -1
          );
        };

        /***/
      },
      /* 61 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(
          12
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var isModifiedEvent = function isModifiedEvent(event) {
          return !!(
            event.metaKey ||
            event.altKey ||
            event.ctrlKey ||
            event.shiftKey
          );
        };

        /**
         * The public API for rendering a history-aware <a>.
         */

        var Link = (function(_React$Component) {
          _inherits(Link, _React$Component);

          function Link() {
            var _temp, _this, _ret;

            _classCallCheck(this, Link);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.handleClick = function(event) {
                if (_this.props.onClick) _this.props.onClick(event);

                if (
                  !event.defaultPrevented && // onClick prevented default
                  event.button === 0 && // ignore everything but left clicks
                  !_this.props.target && // let browser handle "target=_blank" etc.
                  !isModifiedEvent(event) // ignore clicks with modifier keys
                ) {
                  event.preventDefault();

                  var history = _this.context.router.history;
                  var _this$props = _this.props,
                    replace = _this$props.replace,
                    to = _this$props.to;

                  if (replace) {
                    history.replace(to);
                  } else {
                    history.push(to);
                  }
                }
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          Link.prototype.render = function render() {
            var _props = this.props,
              replace = _props.replace,
              to = _props.to,
              innerRef = _props.innerRef,
              props = _objectWithoutProperties(_props, [
                'replace',
                'to',
                'innerRef',
              ]); // eslint-disable-line no-unused-vars

            __WEBPACK_IMPORTED_MODULE_2_invariant___default()(
              this.context.router,
              'You should not use <Link> outside a <Router>'
            );

            __WEBPACK_IMPORTED_MODULE_2_invariant___default()(
              to !== undefined,
              'You must specify the "to" property'
            );

            var history = this.context.router.history;

            var location =
              typeof to === 'string'
                ? Object(
                    __WEBPACK_IMPORTED_MODULE_3_history__[
                      'c' /* createLocation */
                    ]
                  )(to, null, null, history.location)
                : to;

            var href = history.createHref(location);
            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
              'a',
              _extends({}, props, {
                onClick: this.handleClick,
                href: href,
                ref: innerRef,
              })
            );
          };

          return Link;
        })(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        Link.propTypes = {
          onClick: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
          target: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
          replace: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
          to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          ]).isRequired,
          innerRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType(
            [
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
            ]
          ),
        };
        Link.defaultProps = {
          replace: false,
        };
        Link.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
            history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
              push:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
              replace:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
              createHref:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
            }).isRequired,
          }).isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = Link;

        /***/
      },
      /* 62 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__ = __webpack_require__(
          63
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_Route__[
            'a' /* default */
          ];

        /***/
      },
      /* 63 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(
          31
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var isEmptyChildren = function isEmptyChildren(children) {
          return (
            __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.count(
              children
            ) === 0
          );
        };

        /**
         * The public API for matching a single path and rendering.
         */

        var Route = (function(_React$Component) {
          _inherits(Route, _React$Component);

          function Route() {
            var _temp, _this, _ret;

            _classCallCheck(this, Route);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.state = {
                match: _this.computeMatch(_this.props, _this.context.router),
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          Route.prototype.getChildContext = function getChildContext() {
            return {
              router: _extends({}, this.context.router, {
                route: {
                  location:
                    this.props.location || this.context.router.route.location,
                  match: this.state.match,
                },
              }),
            };
          };

          Route.prototype.computeMatch = function computeMatch(_ref, router) {
            var computedMatch = _ref.computedMatch,
              location = _ref.location,
              path = _ref.path,
              strict = _ref.strict,
              exact = _ref.exact,
              sensitive = _ref.sensitive;

            if (computedMatch) return computedMatch; // <Switch> already computed the match for us

            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              router,
              'You should not use <Route> or withRouter() outside a <Router>'
            );

            var route = router.route;

            var pathname = (location || route.location).pathname;

            return Object(
              __WEBPACK_IMPORTED_MODULE_4__matchPath__['a' /* default */]
            )(
              pathname,
              {
                path: path,
                strict: strict,
                exact: exact,
                sensitive: sensitive,
              },
              route.match
            );
          };

          Route.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(this.props.component && this.props.render),
              'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored'
            );

            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                this.props.component &&
                this.props.children &&
                !isEmptyChildren(this.props.children)
              ),
              'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored'
            );

            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                this.props.render &&
                this.props.children &&
                !isEmptyChildren(this.props.children)
              ),
              'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored'
            );
          };

          Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps,
            nextContext
          ) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(nextProps.location && !this.props.location),
              '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'
            );

            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(!nextProps.location && this.props.location),
              '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'
            );

            this.setState({
              match: this.computeMatch(nextProps, nextContext.router),
            });
          };

          Route.prototype.render = function render() {
            var match = this.state.match;
            var _props = this.props,
              children = _props.children,
              component = _props.component,
              render = _props.render;
            var _context$router = this.context.router,
              history = _context$router.history,
              route = _context$router.route,
              staticContext = _context$router.staticContext;

            var location = this.props.location || route.location;
            var props = {
              match: match,
              location: location,
              history: history,
              staticContext: staticContext,
            };

            if (component)
              return match
                ? __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(
                    component,
                    props
                  )
                : null;

            if (render) return match ? render(props) : null;

            if (typeof children === 'function') return children(props);

            if (children && !isEmptyChildren(children))
              return __WEBPACK_IMPORTED_MODULE_2_react___default.a.Children.only(
                children
              );

            return null;
          };

          return Route;
        })(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

        Route.propTypes = {
          computedMatch:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object, // private, from <Switch>
          path: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,
          exact: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
          strict: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
          sensitive: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.bool,
          component: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,
          render: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,
          children: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType(
            [
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.func,
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.node,
            ]
          ),
          location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object,
        };
        Route.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.shape({
            history:
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
                .isRequired,
            route:
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
                .isRequired,
            staticContext:
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object,
          }),
        };
        Route.childContextTypes = {
          router:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
              .isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = Route;

        /***/
      },
      /* 64 */
      /***/ function(module, exports, __webpack_require__) {
        var isarray = __webpack_require__(148);

        /**
         * Expose `pathToRegexp`.
         */
        module.exports = pathToRegexp;
        module.exports.parse = parse;
        module.exports.compile = compile;
        module.exports.tokensToFunction = tokensToFunction;
        module.exports.tokensToRegExp = tokensToRegExp;

        /**
         * The main path matching regexp utility.
         *
         * @type {RegExp}
         */
        var PATH_REGEXP = new RegExp(
          [
            // Match escaped characters that would otherwise appear in future matches.
            // This allows the user to escape special characters that won't transform.
            '(\\\\.)',
            // Match Express-style parameters and un-named parameters with a prefix
            // and optional suffixes. Matches appear as:
            //
            // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
            // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
            // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
            '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))',
          ].join('|'),
          'g'
        );

        /**
         * Parse a string for the raw tokens.
         *
         * @param  {string}  str
         * @param  {Object=} options
         * @return {!Array}
         */
        function parse(str, options) {
          var tokens = [];
          var key = 0;
          var index = 0;
          var path = '';
          var defaultDelimiter = (options && options.delimiter) || '/';
          var res;

          while ((res = PATH_REGEXP.exec(str)) != null) {
            var m = res[0];
            var escaped = res[1];
            var offset = res.index;
            path += str.slice(index, offset);
            index = offset + m.length;

            // Ignore already escaped sequences.
            if (escaped) {
              path += escaped[1];
              continue;
            }

            var next = str[index];
            var prefix = res[2];
            var name = res[3];
            var capture = res[4];
            var group = res[5];
            var modifier = res[6];
            var asterisk = res[7];

            // Push the current path onto the tokens.
            if (path) {
              tokens.push(path);
              path = '';
            }

            var partial = prefix != null && next != null && next !== prefix;
            var repeat = modifier === '+' || modifier === '*';
            var optional = modifier === '?' || modifier === '*';
            var delimiter = res[2] || defaultDelimiter;
            var pattern = capture || group;

            tokens.push({
              name: name || key++,
              prefix: prefix || '',
              delimiter: delimiter,
              optional: optional,
              repeat: repeat,
              partial: partial,
              asterisk: !!asterisk,
              pattern: pattern
                ? escapeGroup(pattern)
                : asterisk
                  ? '.*'
                  : '[^' + escapeString(delimiter) + ']+?',
            });
          }

          // Match any characters still remaining.
          if (index < str.length) {
            path += str.substr(index);
          }

          // If the path exists, push it onto the end.
          if (path) {
            tokens.push(path);
          }

          return tokens;
        }

        /**
         * Compile a string to a template function for the path.
         *
         * @param  {string}             str
         * @param  {Object=}            options
         * @return {!function(Object=, Object=)}
         */
        function compile(str, options) {
          return tokensToFunction(parse(str, options));
        }

        /**
         * Prettier encoding of URI path segments.
         *
         * @param  {string}
         * @return {string}
         */
        function encodeURIComponentPretty(str) {
          return encodeURI(str).replace(/[\/?#]/g, function(c) {
            return (
              '%' +
              c
                .charCodeAt(0)
                .toString(16)
                .toUpperCase()
            );
          });
        }

        /**
         * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
         *
         * @param  {string}
         * @return {string}
         */
        function encodeAsterisk(str) {
          return encodeURI(str).replace(/[?#]/g, function(c) {
            return (
              '%' +
              c
                .charCodeAt(0)
                .toString(16)
                .toUpperCase()
            );
          });
        }

        /**
         * Expose a method for transforming tokens into the path function.
         */
        function tokensToFunction(tokens) {
          // Compile all the tokens into regexps.
          var matches = new Array(tokens.length);

          // Compile all the patterns before compilation.
          for (var i = 0; i < tokens.length; i++) {
            if (typeof tokens[i] === 'object') {
              matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');
            }
          }

          return function(obj, opts) {
            var path = '';
            var data = obj || {};
            var options = opts || {};
            var encode = options.pretty
              ? encodeURIComponentPretty
              : encodeURIComponent;

            for (var i = 0; i < tokens.length; i++) {
              var token = tokens[i];

              if (typeof token === 'string') {
                path += token;

                continue;
              }

              var value = data[token.name];
              var segment;

              if (value == null) {
                if (token.optional) {
                  // Prepend partial segment prefixes.
                  if (token.partial) {
                    path += token.prefix;
                  }

                  continue;
                } else {
                  throw new TypeError(
                    'Expected "' + token.name + '" to be defined'
                  );
                }
              }

              if (isarray(value)) {
                if (!token.repeat) {
                  throw new TypeError(
                    'Expected "' +
                      token.name +
                      '" to not repeat, but received `' +
                      JSON.stringify(value) +
                      '`'
                  );
                }

                if (value.length === 0) {
                  if (token.optional) {
                    continue;
                  } else {
                    throw new TypeError(
                      'Expected "' + token.name + '" to not be empty'
                    );
                  }
                }

                for (var j = 0; j < value.length; j++) {
                  segment = encode(value[j]);

                  if (!matches[i].test(segment)) {
                    throw new TypeError(
                      'Expected all "' +
                        token.name +
                        '" to match "' +
                        token.pattern +
                        '", but received `' +
                        JSON.stringify(segment) +
                        '`'
                    );
                  }

                  path += (j === 0 ? token.prefix : token.delimiter) + segment;
                }

                continue;
              }

              segment = token.asterisk ? encodeAsterisk(value) : encode(value);

              if (!matches[i].test(segment)) {
                throw new TypeError(
                  'Expected "' +
                    token.name +
                    '" to match "' +
                    token.pattern +
                    '", but received "' +
                    segment +
                    '"'
                );
              }

              path += token.prefix + segment;
            }

            return path;
          };
        }

        /**
         * Escape a regular expression string.
         *
         * @param  {string} str
         * @return {string}
         */
        function escapeString(str) {
          return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1');
        }

        /**
         * Escape the capturing group by escaping special characters and meaning.
         *
         * @param  {string} group
         * @return {string}
         */
        function escapeGroup(group) {
          return group.replace(/([=!:$\/()])/g, '\\$1');
        }

        /**
         * Attach the keys as a property of the regexp.
         *
         * @param  {!RegExp} re
         * @param  {Array}   keys
         * @return {!RegExp}
         */
        function attachKeys(re, keys) {
          re.keys = keys;
          return re;
        }

        /**
         * Get the flags for a regexp from the options.
         *
         * @param  {Object} options
         * @return {string}
         */
        function flags(options) {
          return options.sensitive ? '' : 'i';
        }

        /**
         * Pull out keys from a regexp.
         *
         * @param  {!RegExp} path
         * @param  {!Array}  keys
         * @return {!RegExp}
         */
        function regexpToRegexp(path, keys) {
          // Use a negative lookahead to match only capturing groups.
          var groups = path.source.match(/\((?!\?)/g);

          if (groups) {
            for (var i = 0; i < groups.length; i++) {
              keys.push({
                name: i,
                prefix: null,
                delimiter: null,
                optional: false,
                repeat: false,
                partial: false,
                asterisk: false,
                pattern: null,
              });
            }
          }

          return attachKeys(path, keys);
        }

        /**
         * Transform an array into a regexp.
         *
         * @param  {!Array}  path
         * @param  {Array}   keys
         * @param  {!Object} options
         * @return {!RegExp}
         */
        function arrayToRegexp(path, keys, options) {
          var parts = [];

          for (var i = 0; i < path.length; i++) {
            parts.push(pathToRegexp(path[i], keys, options).source);
          }

          var regexp = new RegExp(
            '(?:' + parts.join('|') + ')',
            flags(options)
          );

          return attachKeys(regexp, keys);
        }

        /**
         * Create a path regexp from string input.
         *
         * @param  {string}  path
         * @param  {!Array}  keys
         * @param  {!Object} options
         * @return {!RegExp}
         */
        function stringToRegexp(path, keys, options) {
          return tokensToRegExp(parse(path, options), keys, options);
        }

        /**
         * Expose a function for taking tokens and returning a RegExp.
         *
         * @param  {!Array}          tokens
         * @param  {(Array|Object)=} keys
         * @param  {Object=}         options
         * @return {!RegExp}
         */
        function tokensToRegExp(tokens, keys, options) {
          if (!isarray(keys)) {
            options = /** @type {!Object} */ keys || options;
            keys = [];
          }

          options = options || {};

          var strict = options.strict;
          var end = options.end !== false;
          var route = '';

          // Iterate over the tokens and create our regexp string.
          for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];

            if (typeof token === 'string') {
              route += escapeString(token);
            } else {
              var prefix = escapeString(token.prefix);
              var capture = '(?:' + token.pattern + ')';

              keys.push(token);

              if (token.repeat) {
                capture += '(?:' + prefix + capture + ')*';
              }

              if (token.optional) {
                if (!token.partial) {
                  capture = '(?:' + prefix + '(' + capture + '))?';
                } else {
                  capture = prefix + '(' + capture + ')?';
                }
              } else {
                capture = prefix + '(' + capture + ')';
              }

              route += capture;
            }
          }

          var delimiter = escapeString(options.delimiter || '/');
          var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;

          // In non-strict mode we allow a slash at the end of match. If the path to
          // match already ends with a slash, we remove it for consistency. The slash
          // is valid at the end of a path match, not in the middle. This is important
          // in non-ending mode, where "/test/" shouldn't match "/test//route".
          if (!strict) {
            route =
              (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) +
              '(?:' +
              delimiter +
              '(?=$))?';
          }

          if (end) {
            route += '$';
          } else {
            // In non-ending mode, we need the capturing groups to match as much as
            // possible by using a positive lookahead to the end or next path segment.
            route +=
              strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';
          }

          return attachKeys(new RegExp('^' + route, flags(options)), keys);
        }

        /**
         * Normalize the given path string, returning a regular expression.
         *
         * An empty array can be passed in for the keys, which will hold the
         * placeholder key descriptions. For example, using `/user/:id`, `keys` will
         * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
         *
         * @param  {(string|RegExp|Array)} path
         * @param  {(Array|Object)=}       keys
         * @param  {Object=}               options
         * @return {!RegExp}
         */
        function pathToRegexp(path, keys, options) {
          if (!isarray(keys)) {
            options = /** @type {!Object} */ keys || options;
            keys = [];
          }

          options = options || {};

          if (path instanceof RegExp) {
            return regexpToRegexp(path, /** @type {!Array} */ keys);
          }

          if (isarray(path)) {
            return arrayToRegexp(
              /** @type {!Array} */ path,
              /** @type {!Array} */ keys,
              options
            );
          }

          return stringToRegexp(
            /** @type {string} */ path,
            /** @type {!Array} */ keys,
            options
          );
        }

        /***/
      },
      /* 65 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__ = __webpack_require__(
          64
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_path_to_regexp__
        );

        var patternCache = {};
        var cacheLimit = 10000;
        var cacheCount = 0;

        var compileGenerator = function compileGenerator(pattern) {
          var cacheKey = pattern;
          var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

          if (cache[pattern]) return cache[pattern];

          var compiledGenerator = __WEBPACK_IMPORTED_MODULE_0_path_to_regexp___default.a.compile(
            pattern
          );

          if (cacheCount < cacheLimit) {
            cache[pattern] = compiledGenerator;
            cacheCount++;
          }

          return compiledGenerator;
        };

        /**
         * Public API for generating a URL pathname from a pattern and parameters.
         */
        var generatePath = function generatePath() {
          var pattern =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : '/';
          var params =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};

          if (pattern === '/') {
            return pattern;
          }
          var generator = compileGenerator(pattern);
          return generator(params, { pretty: true });
        };

        /* harmony default export */ __webpack_exports__['a'] = generatePath;

        /***/
      },
      /* 66 */
      /***/ function(module, exports) {
        exports.__esModule = true;
        var ATTRIBUTE_NAMES = (exports.ATTRIBUTE_NAMES = {
          BODY: 'bodyAttributes',
          HTML: 'htmlAttributes',
          TITLE: 'titleAttributes',
        });

        var TAG_NAMES = (exports.TAG_NAMES = {
          BASE: 'base',
          BODY: 'body',
          HEAD: 'head',
          HTML: 'html',
          LINK: 'link',
          META: 'meta',
          NOSCRIPT: 'noscript',
          SCRIPT: 'script',
          STYLE: 'style',
          TITLE: 'title',
        });

        var VALID_TAG_NAMES = (exports.VALID_TAG_NAMES = Object.keys(
          TAG_NAMES
        ).map(function(name) {
          return TAG_NAMES[name];
        }));

        var TAG_PROPERTIES = (exports.TAG_PROPERTIES = {
          CHARSET: 'charset',
          CSS_TEXT: 'cssText',
          HREF: 'href',
          HTTPEQUIV: 'http-equiv',
          INNER_HTML: 'innerHTML',
          ITEM_PROP: 'itemprop',
          NAME: 'name',
          PROPERTY: 'property',
          REL: 'rel',
          SRC: 'src',
        });

        var REACT_TAG_MAP = (exports.REACT_TAG_MAP = {
          accesskey: 'accessKey',
          charset: 'charSet',
          class: 'className',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          'http-equiv': 'httpEquiv',
          itemprop: 'itemProp',
          tabindex: 'tabIndex',
        });

        var HELMET_PROPS = (exports.HELMET_PROPS = {
          DEFAULT_TITLE: 'defaultTitle',
          DEFER: 'defer',
          ENCODE_SPECIAL_CHARACTERS: 'encodeSpecialCharacters',
          ON_CHANGE_CLIENT_STATE: 'onChangeClientState',
          TITLE_TEMPLATE: 'titleTemplate',
        });

        var HTML_TAG_MAP = (exports.HTML_TAG_MAP = Object.keys(
          REACT_TAG_MAP
        ).reduce(function(obj, key) {
          obj[REACT_TAG_MAP[key]] = key;
          return obj;
        }, {}));

        var SELF_CLOSING_TAGS = (exports.SELF_CLOSING_TAGS = [
          TAG_NAMES.NOSCRIPT,
          TAG_NAMES.SCRIPT,
          TAG_NAMES.STYLE,
        ]);

        var HELMET_ATTRIBUTE = (exports.HELMET_ATTRIBUTE = 'data-react-helmet');

        /***/
      },
      /* 67 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = __webpack_require__(171);

        /***/
      },
      /* 68 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = function bind(fn, thisArg) {
          return function wrap() {
            var args = new Array(arguments.length);
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i];
            }
            return fn.apply(thisArg, args);
          };
        };

        /***/
      },
      /* 69 */
      /***/ function(module, exports) {
        /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

        // The _isBuffer check is for Safari 5-7 support, because it's missing
        // Object.prototype.constructor. Remove this eventually
        module.exports = function(obj) {
          return (
            obj != null &&
            (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
          );
        };

        function isBuffer(obj) {
          return (
            !!obj.constructor &&
            typeof obj.constructor.isBuffer === 'function' &&
            obj.constructor.isBuffer(obj)
          );
        }

        // For Node v0.10 support. Remove this eventually.
        function isSlowBuffer(obj) {
          return (
            typeof obj.readFloatLE === 'function' &&
            typeof obj.slice === 'function' &&
            isBuffer(obj.slice(0, 0))
          );
        }

        /***/
      },
      /* 70 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var createError = __webpack_require__(34);

        /**
         * Resolve or reject a Promise based on response status.
         *
         * @param {Function} resolve A function that resolves the promise.
         * @param {Function} reject A function that rejects the promise.
         * @param {object} response The response.
         */
        module.exports = function settle(resolve, reject, response) {
          var validateStatus = response.config.validateStatus;
          // Note: status is not exposed by XDomainRequest
          if (
            !response.status ||
            !validateStatus ||
            validateStatus(response.status)
          ) {
            resolve(response);
          } else {
            reject(
              createError(
                'Request failed with status code ' + response.status,
                response.config,
                null,
                response.request,
                response
              )
            );
          }
        };

        /***/
      },
      /* 71 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Update an Error with the specified config, error code, and response.
         *
         * @param {Error} error The error to update.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The error.
         */

        module.exports = function enhanceError(
          error,
          config,
          code,
          request,
          response
        ) {
          error.config = config;
          if (code) {
            error.code = code;
          }
          error.request = request;
          error.response = response;
          return error;
        };

        /***/
      },
      /* 72 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        function encode(val) {
          return encodeURIComponent(val)
            .replace(/%40/gi, '@')
            .replace(/%3A/gi, ':')
            .replace(/%24/g, '$')
            .replace(/%2C/gi, ',')
            .replace(/%20/g, '+')
            .replace(/%5B/gi, '[')
            .replace(/%5D/gi, ']');
        }

        /**
         * Build a URL by appending params to the end
         *
         * @param {string} url The base of the url (e.g., http://www.google.com)
         * @param {object} [params] The params to be appended
         * @returns {string} The formatted url
         */
        module.exports = function buildURL(url, params, paramsSerializer) {
          /*eslint no-param-reassign:0*/
          if (!params) {
            return url;
          }

          var serializedParams;
          if (paramsSerializer) {
            serializedParams = paramsSerializer(params);
          } else if (utils.isURLSearchParams(params)) {
            serializedParams = params.toString();
          } else {
            var parts = [];

            utils.forEach(params, function serialize(val, key) {
              if (val === null || typeof val === 'undefined') {
                return;
              }

              if (utils.isArray(val)) {
                key = key + '[]';
              }

              if (!utils.isArray(val)) {
                val = [val];
              }

              utils.forEach(val, function parseValue(v) {
                if (utils.isDate(v)) {
                  v = v.toISOString();
                } else if (utils.isObject(v)) {
                  v = JSON.stringify(v);
                }
                parts.push(encode(key) + '=' + encode(v));
              });
            });

            serializedParams = parts.join('&');
          }

          if (serializedParams) {
            url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
          }

          return url;
        };

        /***/
      },
      /* 73 */
      /***/ function(module, exports) {
        module.exports = require('http');

        /***/
      },
      /* 74 */
      /***/ function(module, exports) {
        module.exports = require('https');

        /***/
      },
      /* 75 */
      /***/ function(module, exports, __webpack_require__) {
        var url = __webpack_require__(76);
        var http = __webpack_require__(73);
        var https = __webpack_require__(74);
        var assert = __webpack_require__(180);
        var Writable = __webpack_require__(181).Writable;
        var debug = __webpack_require__(182)('follow-redirects');

        // RFC7231§4.2.1: Of the request methods defined by this specification,
        // the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.
        var SAFE_METHODS = {
          GET: true,
          HEAD: true,
          OPTIONS: true,
          TRACE: true,
        };

        // Create handlers that pass events from native requests
        var eventHandlers = Object.create(null);
        ['abort', 'aborted', 'error', 'socket', 'timeout'].forEach(function(
          event
        ) {
          eventHandlers[event] = function(arg) {
            this._redirectable.emit(event, arg);
          };
        });

        // An HTTP(S) request that can be redirected
        function RedirectableRequest(options, responseCallback) {
          // Initialize the request
          Writable.call(this);
          options.headers = options.headers || {};
          this._options = options;
          this._redirectCount = 0;
          this._redirects = [];
          this._requestBodyLength = 0;
          this._requestBodyBuffers = [];

          // Attach a callback if passed
          if (responseCallback) {
            this.on('response', responseCallback);
          }

          // React to responses of native requests
          var self = this;
          this._onNativeResponse = function(response) {
            self._processResponse(response);
          };

          // Complete the URL object when necessary
          if (!options.pathname && options.path) {
            var searchPos = options.path.indexOf('?');
            if (searchPos < 0) {
              options.pathname = options.path;
            } else {
              options.pathname = options.path.substring(0, searchPos);
              options.search = options.path.substring(searchPos);
            }
          }

          // Perform the first request
          this._performRequest();
        }
        RedirectableRequest.prototype = Object.create(Writable.prototype);

        // Writes buffered data to the current native request
        RedirectableRequest.prototype.write = function(
          data,
          encoding,
          callback
        ) {
          if (
            !(
              typeof data === 'string' ||
              (typeof data === 'object' && 'length' in data)
            )
          ) {
            throw new Error('data should be a string, Buffer or Uint8Array');
          }
          if (
            this._requestBodyLength + data.length <=
            this._options.maxBodyLength
          ) {
            this._requestBodyLength += data.length;
            this._requestBodyBuffers.push({ data: data, encoding: encoding });
            this._currentRequest.write(data, encoding, callback);
          } else {
            this.emit(
              'error',
              new Error('Request body larger than maxBodyLength limit')
            );
            this.abort();
          }
        };

        // Ends the current native request
        RedirectableRequest.prototype.end = function(data, encoding, callback) {
          var currentRequest = this._currentRequest;
          if (!data) {
            currentRequest.end(null, null, callback);
          } else {
            this.write(data, encoding, function() {
              currentRequest.end(null, null, callback);
            });
          }
        };

        // Sets a header value on the current native request
        RedirectableRequest.prototype.setHeader = function(name, value) {
          this._options.headers[name] = value;
          this._currentRequest.setHeader(name, value);
        };

        // Clears a header value on the current native request
        RedirectableRequest.prototype.removeHeader = function(name) {
          delete this._options.headers[name];
          this._currentRequest.removeHeader(name);
        };

        // Proxy all other public ClientRequest methods
        [
          'abort',
          'flushHeaders',
          'getHeader',
          'setNoDelay',
          'setSocketKeepAlive',
          'setTimeout',
        ].forEach(function(method) {
          RedirectableRequest.prototype[method] = function(a, b) {
            return this._currentRequest[method](a, b);
          };
        });

        // Proxy all public ClientRequest properties
        ['aborted', 'connection', 'socket'].forEach(function(property) {
          Object.defineProperty(RedirectableRequest.prototype, property, {
            get: function() {
              return this._currentRequest[property];
            },
          });
        });

        // Executes the next native request (initial or redirect)
        RedirectableRequest.prototype._performRequest = function() {
          // Load the native protocol
          var protocol = this._options.protocol;
          var nativeProtocol = this._options.nativeProtocols[protocol];

          // If specified, use the agent corresponding to the protocol
          // (HTTP and HTTPS use different types of agents)
          if (this._options.agents) {
            var scheme = protocol.substr(0, protocol.length - 1);
            this._options.agent = this._options.agents[scheme];
          }

          // Create the native request
          var request = (this._currentRequest = nativeProtocol.request(
            this._options,
            this._onNativeResponse
          ));
          this._currentUrl = url.format(this._options);

          // Set up event handlers
          request._redirectable = this;
          for (var event in eventHandlers) {
            /* istanbul ignore else */
            if (event) {
              request.on(event, eventHandlers[event]);
            }
          }

          // End a redirected request
          // (The first request must be ended explicitly with RedirectableRequest#end)
          if (this._isRedirect) {
            // Write the request entity and end.
            var requestBodyBuffers = this._requestBodyBuffers;
            (function writeNext() {
              if (requestBodyBuffers.length !== 0) {
                var buffer = requestBodyBuffers.pop();
                request.write(buffer.data, buffer.encoding, writeNext);
              } else {
                request.end();
              }
            })();
          }
        };

        // Processes a response from the current native request
        RedirectableRequest.prototype._processResponse = function(response) {
          // Store the redirected response
          if (this._options.trackRedirects) {
            this._redirects.push({
              url: this._currentUrl,
              headers: response.headers,
              statusCode: response.statusCode,
            });
          }

          // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
          // that further action needs to be taken by the user agent in order to
          // fulfill the request. If a Location header field is provided,
          // the user agent MAY automatically redirect its request to the URI
          // referenced by the Location field value,
          // even if the specific status code is not understood.
          var location = response.headers.location;
          if (
            location &&
            this._options.followRedirects !== false &&
            response.statusCode >= 300 &&
            response.statusCode < 400
          ) {
            // RFC7231§6.4: A client SHOULD detect and intervene
            // in cyclical redirections (i.e., "infinite" redirection loops).
            if (++this._redirectCount > this._options.maxRedirects) {
              this.emit('error', new Error('Max redirects exceeded.'));
              return;
            }

            // RFC7231§6.4: Automatic redirection needs to done with
            // care for methods not known to be safe […],
            // since the user might not wish to redirect an unsafe request.
            // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates
            // that the target resource resides temporarily under a different URI
            // and the user agent MUST NOT change the request method
            // if it performs an automatic redirection to that URI.
            var header;
            var headers = this._options.headers;
            if (
              response.statusCode !== 307 &&
              !(this._options.method in SAFE_METHODS)
            ) {
              this._options.method = 'GET';
              // Drop a possible entity and headers related to it
              this._requestBodyBuffers = [];
              for (header in headers) {
                if (/^content-/i.test(header)) {
                  delete headers[header];
                }
              }
            }

            // Drop the Host header, as the redirect might lead to a different host
            if (!this._isRedirect) {
              for (header in headers) {
                if (/^host$/i.test(header)) {
                  delete headers[header];
                }
              }
            }

            // Perform the redirected request
            var redirectUrl = url.resolve(this._currentUrl, location);
            debug('redirecting to', redirectUrl);
            Object.assign(this._options, url.parse(redirectUrl));
            this._isRedirect = true;
            this._performRequest();

            // Discard the remainder of the response to avoid waiting for data
            response.destroy();
          } else {
            // The response is not a redirect; return it as-is
            response.responseUrl = this._currentUrl;
            response.redirects = this._redirects;
            this.emit('response', response);

            // Clean up
            this._requestBodyBuffers = [];
          }
        };

        // Wraps the key/value object of protocols with redirect functionality
        function wrap(protocols) {
          // Default settings
          var exports = {
            maxRedirects: 21,
            maxBodyLength: 10 * 1024 * 1024,
          };

          // Wrap each protocol
          var nativeProtocols = {};
          Object.keys(protocols).forEach(function(scheme) {
            var protocol = scheme + ':';
            var nativeProtocol = (nativeProtocols[protocol] =
              protocols[scheme]);
            var wrappedProtocol = (exports[scheme] = Object.create(
              nativeProtocol
            ));

            // Executes a request, following redirects
            wrappedProtocol.request = function(options, callback) {
              if (typeof options === 'string') {
                options = url.parse(options);
                options.maxRedirects = exports.maxRedirects;
              } else {
                options = Object.assign(
                  {
                    protocol: protocol,
                    maxRedirects: exports.maxRedirects,
                    maxBodyLength: exports.maxBodyLength,
                  },
                  options
                );
              }
              options.nativeProtocols = nativeProtocols;
              assert.equal(options.protocol, protocol, 'protocol mismatch');
              debug('options', options);
              return new RedirectableRequest(options, callback);
            };

            // Executes a GET request, following redirects
            wrappedProtocol.get = function(options, callback) {
              var request = wrappedProtocol.request(options, callback);
              request.end();
              return request;
            };
          });
          return exports;
        }

        // Exports
        module.exports = wrap({ http: http, https: https });
        module.exports.wrap = wrap;

        /***/
      },
      /* 76 */
      /***/ function(module, exports) {
        module.exports = require('url');

        /***/
      },
      /* 77 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * This is the common logic for both the Node.js and web browser
         * implementations of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = createDebug.debug = createDebug[
          'default'
        ] = createDebug;
        exports.coerce = coerce;
        exports.disable = disable;
        exports.enable = enable;
        exports.enabled = enabled;
        exports.humanize = __webpack_require__(184);

        /**
         * Active `debug` instances.
         */
        exports.instances = [];

        /**
         * The currently active debug mode names, and names to skip.
         */

        exports.names = [];
        exports.skips = [];

        /**
         * Map of special "%n" handling functions, for the debug "format" argument.
         *
         * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
         */

        exports.formatters = {};

        /**
         * Select a color.
         * @param {String} namespace
         * @return {Number}
         * @api private
         */

        function selectColor(namespace) {
          var hash = 0,
            i;

          for (i in namespace) {
            hash = (hash << 5) - hash + namespace.charCodeAt(i);
            hash |= 0; // Convert to 32bit integer
          }

          return exports.colors[Math.abs(hash) % exports.colors.length];
        }

        /**
         * Create a debugger with the given `namespace`.
         *
         * @param {String} namespace
         * @return {Function}
         * @api public
         */

        function createDebug(namespace) {
          var prevTime;

          function debug() {
            // disabled?
            if (!debug.enabled) return;

            var self = debug;

            // set `diff` timestamp
            var curr = +new Date();
            var ms = curr - (prevTime || curr);
            self.diff = ms;
            self.prev = prevTime;
            self.curr = curr;
            prevTime = curr;

            // turn the `arguments` into a proper Array
            var args = new Array(arguments.length);
            for (var i = 0; i < args.length; i++) {
              args[i] = arguments[i];
            }

            args[0] = exports.coerce(args[0]);

            if ('string' !== typeof args[0]) {
              // anything else let's inspect with %O
              args.unshift('%O');
            }

            // apply any `formatters` transformations
            var index = 0;
            args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
              // if we encounter an escaped % then don't increase the array index
              if (match === '%%') return match;
              index++;
              var formatter = exports.formatters[format];
              if ('function' === typeof formatter) {
                var val = args[index];
                match = formatter.call(self, val);

                // now we need to remove `args[index]` since it's inlined in the `format`
                args.splice(index, 1);
                index--;
              }
              return match;
            });

            // apply env-specific formatting (colors, etc.)
            exports.formatArgs.call(self, args);

            var logFn = debug.log || exports.log || console.log.bind(console);
            logFn.apply(self, args);
          }

          debug.namespace = namespace;
          debug.enabled = exports.enabled(namespace);
          debug.useColors = exports.useColors();
          debug.color = selectColor(namespace);
          debug.destroy = destroy;

          // env-specific initialization logic for debug instances
          if ('function' === typeof exports.init) {
            exports.init(debug);
          }

          exports.instances.push(debug);

          return debug;
        }

        function destroy() {
          var index = exports.instances.indexOf(this);
          if (index !== -1) {
            exports.instances.splice(index, 1);
            return true;
          } else {
            return false;
          }
        }

        /**
         * Enables a debug mode by namespaces. This can include modes
         * separated by a colon and wildcards.
         *
         * @param {String} namespaces
         * @api public
         */

        function enable(namespaces) {
          exports.save(namespaces);

          exports.names = [];
          exports.skips = [];

          var i;
          var split = (typeof namespaces === 'string' ? namespaces : '').split(
            /[\s,]+/
          );
          var len = split.length;

          for (i = 0; i < len; i++) {
            if (!split[i]) continue; // ignore empty strings
            namespaces = split[i].replace(/\*/g, '.*?');
            if (namespaces[0] === '-') {
              exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
            } else {
              exports.names.push(new RegExp('^' + namespaces + '$'));
            }
          }

          for (i = 0; i < exports.instances.length; i++) {
            var instance = exports.instances[i];
            instance.enabled = exports.enabled(instance.namespace);
          }
        }

        /**
         * Disable debug output.
         *
         * @api public
         */

        function disable() {
          exports.enable('');
        }

        /**
         * Returns true if the given mode name is enabled, false otherwise.
         *
         * @param {String} name
         * @return {Boolean}
         * @api public
         */

        function enabled(name) {
          if (name[name.length - 1] === '*') {
            return true;
          }
          var i, len;
          for (i = 0, len = exports.skips.length; i < len; i++) {
            if (exports.skips[i].test(name)) {
              return false;
            }
          }
          for (i = 0, len = exports.names.length; i < len; i++) {
            if (exports.names[i].test(name)) {
              return true;
            }
          }
          return false;
        }

        /**
         * Coerce `val`.
         *
         * @param {Mixed} val
         * @return {Mixed}
         * @api private
         */

        function coerce(val) {
          if (val instanceof Error) return val.stack || val.message;
          return val;
        }

        /***/
      },
      /* 78 */
      /***/ function(module, exports) {
        module.exports = require('util');

        /***/
      },
      /* 79 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = function isCancel(value) {
          return !!(value && value.__CANCEL__);
        };

        /***/
      },
      /* 80 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * A `Cancel` is an object that is thrown when an operation is canceled.
         *
         * @class
         * @param {string=} message The message.
         */

        function Cancel(message) {
          this.message = message;
        }

        Cancel.prototype.toString = function toString() {
          return 'Cancel' + (this.message ? ': ' + this.message : '');
        };

        Cancel.prototype.__CANCEL__ = true;

        module.exports = Cancel;

        /***/
      },
      /* 81 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _shared = __webpack_require__(9);

        var _methods = __webpack_require__(14);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var ioIsSupported =
          typeof window !== 'undefined' && 'IntersectionObserver' in window;
        var handleIntersection = function handleIntersection(
          element,
          callback
        ) {
          var io = new window.IntersectionObserver(function(entries) {
            entries.forEach(function(entry) {
              // Edge doesn't support isIntersecting. intersectionRatio > 0 works as a fallback
              if (
                element === entry.target &&
                (entry.isIntersecting || entry.intersectionRatio > 0)
              ) {
                io.unobserve(element);
                io.disconnect();
                callback();
              }
            });
          });

          io.observe(element);
        };

        var PrefetchWhenSeen = (function(_React$Component) {
          _inherits(PrefetchWhenSeen, _React$Component);

          function PrefetchWhenSeen() {
            var _ref,
              _this2 = this;

            var _temp, _this, _ret;

            _classCallCheck(this, PrefetchWhenSeen);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                (_ref =
                  PrefetchWhenSeen.__proto__ ||
                  Object.getPrototypeOf(PrefetchWhenSeen)).call.apply(
                  _ref,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.runPrefetch = function() {
                return _asyncToGenerator(
                  /*#__PURE__*/ _regenerator2.default.mark(function _callee() {
                    var _this$props, path, onLoad, type, cleanedPath, data;

                    return _regenerator2.default.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              (_this$props = _this.props),
                                (path = _this$props.path),
                                (onLoad = _this$props.onLoad),
                                (type = _this$props.type);
                              cleanedPath = (0, _shared.cleanPath)(path);
                              _context.next = 4;
                              return (0, _methods.prefetch)(cleanedPath, {
                                type: type,
                              });

                            case 4:
                              data = _context.sent;

                              onLoad(data, cleanedPath);

                            case 6:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee,
                      _this2
                    );
                  })
                )();
              }),
              (_this.handleRef = function(ref) {
                if (ioIsSupported && ref) {
                  handleIntersection(ref, _this.runPrefetch);
                }
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          _createClass(PrefetchWhenSeen, [
            {
              key: 'componentDidMount',
              value: function componentDidMount() {
                if (!ioIsSupported) {
                  this.runPrefetch();
                }
              },
            },
            {
              key: 'render',
              value: function render() {
                var _props = this.props,
                  component = _props.component,
                  render = _props.render,
                  children = _props.children,
                  rest = _objectWithoutProperties(_props, [
                    'component',
                    'render',
                    'children',
                  ]);

                if (component) {
                  return _react2.default.createElement(component, {
                    handleRef: this.handleRef,
                  });
                }
                if (render) {
                  return render({ handleRef: this.handleRef });
                }
                return _react2.default.createElement(
                  'div',
                  _extends({ ref: this.handleRef }, rest),
                  children
                );
              },
            },
          ]);

          return PrefetchWhenSeen;
        })(_react2.default.Component);

        PrefetchWhenSeen.defaultProps = {
          children: null,
          path: null,
          className: null,
          type: null,
          onLoad: function onLoad() {},
        };
        exports.default = PrefetchWhenSeen;

        /***/
      },
      /* 82 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;
        var canUseDOM = (exports.canUseDOM = !!(
          typeof window !== 'undefined' &&
          window.document &&
          window.document.createElement
        ));

        var addEventListener = (exports.addEventListener = function addEventListener(
          node,
          event,
          listener
        ) {
          return node.addEventListener
            ? node.addEventListener(event, listener, false)
            : node.attachEvent('on' + event, listener);
        });

        var removeEventListener = (exports.removeEventListener = function removeEventListener(
          node,
          event,
          listener
        ) {
          return node.removeEventListener
            ? node.removeEventListener(event, listener, false)
            : node.detachEvent('on' + event, listener);
        });

        var getConfirmation = (exports.getConfirmation = function getConfirmation(
          message,
          callback
        ) {
          return callback(window.confirm(message));
        }); // eslint-disable-line no-alert

        /**
         * Returns true if the HTML5 history API is supported. Taken from Modernizr.
         *
         * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
         * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
         * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
         */
        var supportsHistory = (exports.supportsHistory = function supportsHistory() {
          var ua = window.navigator.userAgent;

          if (
            (ua.indexOf('Android 2.') !== -1 ||
              ua.indexOf('Android 4.0') !== -1) &&
            ua.indexOf('Mobile Safari') !== -1 &&
            ua.indexOf('Chrome') === -1 &&
            ua.indexOf('Windows Phone') === -1
          )
            return false;

          return window.history && 'pushState' in window.history;
        });

        /**
         * Returns true if browser fires popstate on hash change.
         * IE10 and IE11 do not.
         */
        var supportsPopStateOnHashChange = (exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
          return window.navigator.userAgent.indexOf('Trident') === -1;
        });

        /**
         * Returns false if using go(n) with hash history causes a full page reload.
         */
        var supportsGoWithoutReloadUsingHash = (exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
          return window.navigator.userAgent.indexOf('Firefox') === -1;
        });

        /**
         * Returns true if a given popstate event is an extraneous WebKit event.
         * Accounts for the fact that Chrome on iOS fires real popstate events
         * containing undefined state when pressing the back button.
         */
        var isExtraneousPopstateEvent = (exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(
          event
        ) {
          return (
            event.state === undefined &&
            navigator.userAgent.indexOf('CriOS') === -1
          );
        });

        /***/
      },
      /* 83 */
      /***/ function(module, exports, __webpack_require__) {
        var now = __webpack_require__(209),
          root = typeof window === 'undefined' ? global : window,
          vendors = ['moz', 'webkit'],
          suffix = 'AnimationFrame',
          raf = root['request' + suffix],
          caf = root['cancel' + suffix] || root['cancelRequest' + suffix];

        for (var i = 0; !raf && i < vendors.length; i++) {
          raf = root[vendors[i] + 'Request' + suffix];
          caf =
            root[vendors[i] + 'Cancel' + suffix] ||
            root[vendors[i] + 'CancelRequest' + suffix];
        }

        // Some versions of FF have rAF but not cAF
        if (!raf || !caf) {
          var last = 0,
            id = 0,
            queue = [],
            frameDuration = 1000 / 60;

          raf = function(callback) {
            if (queue.length === 0) {
              var _now = now(),
                next = Math.max(0, frameDuration - (_now - last));
              last = next + _now;
              setTimeout(function() {
                var cp = queue.slice(0);
                // Clear queue here to prevent
                // callbacks from appending listeners
                // to the current frame's queue
                queue.length = 0;
                for (var i = 0; i < cp.length; i++) {
                  if (!cp[i].cancelled) {
                    try {
                      cp[i].callback(last);
                    } catch (e) {
                      setTimeout(function() {
                        throw e;
                      }, 0);
                    }
                  }
                }
              }, Math.round(next));
            }
            queue.push({
              handle: ++id,
              callback: callback,
              cancelled: false,
            });
            return id;
          };

          caf = function(handle) {
            for (var i = 0; i < queue.length; i++) {
              if (queue[i].handle === handle) {
                queue[i].cancelled = true;
              }
            }
          };
        }

        module.exports = function(fn) {
          // Wrap in a new function to prevent
          // `cancel` potentially being assigned
          // to the native rAF function
          return raf.call(root, fn);
        };
        module.exports.cancel = function() {
          caf.apply(root, arguments);
        };
        module.exports.polyfill = function(object) {
          if (!object) {
            object = root;
          }
          object.requestAnimationFrame = raf;
          object.cancelAnimationFrame = caf;
        };

        /***/
      },
      /* 84 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        exports.default = scrollTo;

        var _raf = __webpack_require__(83);

        var _raf2 = _interopRequireDefault(_raf);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        //
        var ease = function ease(t) {
          return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
        };

        var defaultOptions = {
          duration: 800,
          offset: 0,
          context: typeof window !== 'undefined' && window,
        };

        var getTop = function getTop(
          element,
          offset,
          contextScrollHeight,
          contextVisibleHeight
        ) {
          return Math.min(
            element.getBoundingClientRect().top + window.pageYOffset + offset,
            contextScrollHeight - contextVisibleHeight
          );
        };

        var getPosition = function getPosition(
          start,
          end,
          elapsed,
          duration,
          easeFn
        ) {
          if (elapsed > duration) return end;
          return start + (end - start) * easeFn(elapsed / duration);
        };

        function scrollTo(element, options) {
          var _defaultOptions$optio = _extends({}, defaultOptions, options),
            duration = _defaultOptions$optio.duration,
            offset = _defaultOptions$optio.offset,
            context = _defaultOptions$optio.context;

          var start = window.pageYOffset;
          var innerHeight = void 0;
          var scrollHeight = void 0;
          if (context !== window) {
            innerHeight = context.offsetHeight;
            scrollHeight = context.scrollHeight;
          } else {
            innerHeight = window.innerHeight;
            scrollHeight = document.body.scrollHeight;
          }
          var clock = Date.now() - 1;
          return new Promise(function(resolve) {
            var step = function step() {
              var elapsed = Date.now() - clock;
              var end =
                typeof element === 'number'
                  ? parseInt(element)
                  : getTop(element, offset, scrollHeight, innerHeight);
              if (context !== window) {
                context.scrollTop = getPosition(
                  start,
                  end,
                  elapsed,
                  duration,
                  ease
                );
              } else {
                window.scroll(
                  0,
                  getPosition(start, end, elapsed, duration, ease)
                );
              }

              if (typeof duration === 'undefined' || elapsed > duration) {
                resolve();
                return;
              }

              // Sanity check to prevent taking over the scroll once we prematurely got to the element
              if (start === end) {
                resolve();
                return;
              }

              (0, _raf2.default)(step);
            };
            (0, _raf2.default)(step);
          });
        }

        /***/
      },
      /* 85 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function(module) {
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });
          exports.default = exports.setHasBabelPlugin = exports.ReportChunks = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;

          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };

          var _createClass = (function() {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var _requireUniversalModule = __webpack_require__(219);

          Object.defineProperty(exports, 'CHUNK_NAMES', {
            enumerable: true,
            get: function get() {
              return _requireUniversalModule.CHUNK_NAMES;
            },
          });
          Object.defineProperty(exports, 'MODULE_IDS', {
            enumerable: true,
            get: function get() {
              return _requireUniversalModule.MODULE_IDS;
            },
          });

          var _reportChunks = __webpack_require__(220);

          Object.defineProperty(exports, 'ReportChunks', {
            enumerable: true,
            get: function get() {
              return _interopRequireDefault(_reportChunks).default;
            },
          });

          var _react = __webpack_require__(0);

          var _react2 = _interopRequireDefault(_react);

          var _propTypes = __webpack_require__(1);

          var _propTypes2 = _interopRequireDefault(_propTypes);

          var _hoistNonReactStatics = __webpack_require__(26);

          var _hoistNonReactStatics2 = _interopRequireDefault(
            _hoistNonReactStatics
          );

          var _requireUniversalModule2 = _interopRequireDefault(
            _requireUniversalModule
          );

          var _utils = __webpack_require__(86);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }

          function _objectWithoutProperties(obj, keys) {
            var target = {};
            for (var i in obj) {
              if (keys.indexOf(i) >= 0) continue;
              if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
              target[i] = obj[i];
            }
            return target;
          }

          var hasBabelPlugin = false;

          var isHMR = function isHMR() {
            return (
              // $FlowIgnore
              module.hot && (module.hot.data || module.hot.status() === 'apply')
            );
          };

          var setHasBabelPlugin = (exports.setHasBabelPlugin = function setHasBabelPlugin() {
            hasBabelPlugin = true;
          });

          function universal(component) {
            var _class, _temp;

            var opts =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};

            var _opts$loading = opts.loading,
              Loading =
                _opts$loading === undefined
                  ? _utils.DefaultLoading
                  : _opts$loading,
              _opts$error = opts.error,
              Err =
                _opts$error === undefined ? _utils.DefaultError : _opts$error,
              _opts$minDelay = opts.minDelay,
              minDelay = _opts$minDelay === undefined ? 0 : _opts$minDelay,
              _opts$alwaysDelay = opts.alwaysDelay,
              alwaysDelay =
                _opts$alwaysDelay === undefined ? false : _opts$alwaysDelay,
              _opts$testBabelPlugin = opts.testBabelPlugin,
              testBabelPlugin =
                _opts$testBabelPlugin === undefined
                  ? false
                  : _opts$testBabelPlugin,
              _opts$loadingTransiti = opts.loadingTransition,
              loadingTransition =
                _opts$loadingTransiti === undefined
                  ? true
                  : _opts$loadingTransiti,
              options = _objectWithoutProperties(opts, [
                'loading',
                'error',
                'minDelay',
                'alwaysDelay',
                'testBabelPlugin',
                'loadingTransition',
              ]);

            var isDynamic = hasBabelPlugin || testBabelPlugin;
            options.isDynamic = isDynamic;
            options.modCache = {};
            options.promCache = {};

            return (
              (_temp = _class = (function(_React$Component) {
                _inherits(UniversalComponent, _React$Component);

                _createClass(UniversalComponent, null, [
                  {
                    key: 'preload',

                    /* eslint-enable react/sort-comp */

                    /* eslint-disable react/sort-comp */
                    value: function preload(props) {
                      var context =
                        arguments.length > 1 && arguments[1] !== undefined
                          ? arguments[1]
                          : {};

                      props = props || {};

                      var _req = (0, _requireUniversalModule2.default)(
                          component,
                          options,
                          props
                        ),
                        requireAsync = _req.requireAsync,
                        requireSync = _req.requireSync;

                      var Component = void 0;

                      try {
                        Component = requireSync(props, context);
                      } catch (error) {
                        return Promise.reject(error);
                      }

                      return Promise.resolve()
                        .then(function() {
                          if (Component) return Component;
                          return requireAsync(props, context);
                        })
                        .then(function(Component) {
                          (0,
                          _hoistNonReactStatics2.default)(UniversalComponent, Component, { preload: true });
                          return Component;
                        });
                    },
                  },
                ]);

                function UniversalComponent(props, context) {
                  _classCallCheck(this, UniversalComponent);

                  var _this = _possibleConstructorReturn(
                    this,
                    (
                      UniversalComponent.__proto__ ||
                      Object.getPrototypeOf(UniversalComponent)
                    ).call(this, props, context)
                  );

                  _this.update = function(state) {
                    var isMount =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : false;
                    var isSync =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : false;
                    var isServer =
                      arguments.length > 3 && arguments[3] !== undefined
                        ? arguments[3]
                        : false;

                    if (!_this._mounted) return;
                    if (!state.error) state.error = null;

                    _this.handleAfter(state, isMount, isSync, isServer);
                  };

                  _this.state = { error: null };
                  return _this;
                }

                _createClass(UniversalComponent, [
                  {
                    key: 'componentWillMount',
                    value: function componentWillMount() {
                      this._mounted = true;

                      var _req2 = (0, _requireUniversalModule2.default)(
                          component,
                          options,
                          this.props
                        ),
                        addModule = _req2.addModule,
                        requireSync = _req2.requireSync,
                        requireAsync = _req2.requireAsync,
                        asyncOnly = _req2.asyncOnly;

                      var Component = void 0;

                      try {
                        Component = requireSync(this.props, this.context);
                      } catch (error) {
                        return this.update({ error: error });
                      }

                      this._asyncOnly = asyncOnly;
                      var chunkName = addModule(this.props); // record the module for SSR flushing :)

                      if (this.context.report) {
                        this.context.report(chunkName);
                      }

                      if (Component || _utils.isServer) {
                        this.handleBefore(true, true, _utils.isServer);
                        this.update(
                          { Component: Component },
                          true,
                          true,
                          _utils.isServer
                        );
                        return;
                      }

                      this.handleBefore(true, false);
                      this.requireAsync(requireAsync, this.props, true);
                    },
                  },
                  {
                    key: 'componentWillUnmount',
                    value: function componentWillUnmount() {
                      this._mounted = false;
                    },
                  },
                  {
                    key: 'componentWillReceiveProps',
                    value: function componentWillReceiveProps(nextProps) {
                      var _this2 = this;

                      if (isDynamic || this._asyncOnly) {
                        var _req3 = (0, _requireUniversalModule2.default)(
                            component,
                            options,
                            nextProps,
                            this.props
                          ),
                          requireSync = _req3.requireSync,
                          requireAsync = _req3.requireAsync,
                          shouldUpdate = _req3.shouldUpdate;

                        if (shouldUpdate(nextProps, this.props)) {
                          var Component = void 0;

                          try {
                            Component = requireSync(nextProps, this.context);
                          } catch (error) {
                            return this.update({ error: error });
                          }

                          this.handleBefore(false, !!Component);

                          if (!Component) {
                            return this.requireAsync(requireAsync, nextProps);
                          }

                          var state = { Component: Component };

                          if (alwaysDelay) {
                            if (loadingTransition)
                              this.update({ Component: null }); // display `loading` during componentWillReceiveProps
                            setTimeout(function() {
                              return _this2.update(state, false, true);
                            }, minDelay);
                            return;
                          }

                          this.update(state, false, true);
                        } else if (isHMR()) {
                          var _Component = requireSync(nextProps, this.context);
                          this.setState({
                            Component: function Component() {
                              return null;
                            },
                          }); // HMR /w Redux and HOCs can be finicky, so we
                          setTimeout(function() {
                            return _this2.setState({ Component: _Component });
                          }); // toggle components to insure updates occur
                        }
                      }
                    },
                  },
                  {
                    key: 'requireAsync',
                    value: function requireAsync(
                      _requireAsync,
                      props,
                      isMount
                    ) {
                      var _this3 = this;

                      if (this.state.Component && loadingTransition) {
                        this.update({ Component: null }); // display `loading` during componentWillReceiveProps
                      }

                      var time = new Date();

                      _requireAsync(props, this.context)
                        .then(function(Component) {
                          var state = { Component: Component };

                          var timeLapsed = new Date() - time;
                          if (timeLapsed < minDelay) {
                            var extraDelay = minDelay - timeLapsed;
                            return setTimeout(function() {
                              return _this3.update(state, isMount);
                            }, extraDelay);
                          }

                          _this3.update(state, isMount);
                        })
                        .catch(function(error) {
                          return _this3.update({ error: error });
                        });
                    },
                  },
                  {
                    key: 'handleBefore',
                    value: function handleBefore(isMount, isSync) {
                      var isServer =
                        arguments.length > 2 && arguments[2] !== undefined
                          ? arguments[2]
                          : false;

                      if (this.props.onBefore) {
                        var onBefore = this.props.onBefore;

                        var info = {
                          isMount: isMount,
                          isSync: isSync,
                          isServer: isServer,
                        };
                        onBefore(info);
                      }
                    },
                  },
                  {
                    key: 'handleAfter',
                    value: function handleAfter(
                      state,
                      isMount,
                      isSync,
                      isServer
                    ) {
                      var Component = state.Component,
                        error = state.error;

                      if (Component && !error) {
                        (0, _hoistNonReactStatics2.default)(
                          UniversalComponent,
                          Component,
                          { preload: true }
                        );

                        if (this.props.onAfter) {
                          var onAfter = this.props.onAfter;

                          var info = {
                            isMount: isMount,
                            isSync: isSync,
                            isServer: isServer,
                          };
                          onAfter(info, Component);
                        }
                      } else if (error && this.props.onError) {
                        this.props.onError(error);
                      }

                      this.setState(state);
                    },
                  },
                  {
                    key: 'render',
                    value: function render() {
                      var _state = this.state,
                        error = _state.error,
                        Component = _state.Component;

                      var _props = this.props,
                        isLoading = _props.isLoading,
                        userError = _props.error,
                        props = _objectWithoutProperties(_props, [
                          'isLoading',
                          'error',
                        ]);

                      // user-provided props (e.g. for data-fetching loading):

                      if (isLoading) {
                        return (0, _utils.createElement)(Loading, props);
                      } else if (userError) {
                        return (0, _utils.createElement)(
                          Err,
                          _extends({}, props, { error: userError })
                        );
                      } else if (error) {
                        return (0, _utils.createElement)(
                          Err,
                          _extends({}, props, { error: error })
                        );
                      } else if (Component) {
                        // primary usage (for async import loading + errors):
                        return (0, _utils.createElement)(Component, props);
                      }

                      return (0, _utils.createElement)(Loading, props);
                    },
                  },
                ]);

                return UniversalComponent;
              })(_react2.default.Component)),
              (_class.contextTypes = {
                store: _propTypes2.default.object,
                report: _propTypes2.default.func,
              }),
              _temp
            );
          }
          exports.default = universal;
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(18)(module)));

        /***/
      },
      /* 86 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function(module) {
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });
          exports.cacheProm = exports.loadFromPromiseCache = exports.cacheExport = exports.loadFromCache = exports.callForString = exports.createElement = exports.findExport = exports.resolveExport = exports.requireById = exports.tryRequire = exports.DefaultError = exports.DefaultLoading = exports.babelInterop = exports.isWebpack = exports.isServer = exports.isTest = undefined;

          var _typeof =
            typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
              ? function(obj) {
                  return typeof obj;
                }
              : function(obj) {
                  return obj &&
                    typeof Symbol === 'function' &&
                    obj.constructor === Symbol &&
                    obj !== Symbol.prototype
                    ? 'symbol'
                    : typeof obj;
                };

          var _react = __webpack_require__(0);

          var _react2 = _interopRequireDefault(_react);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }

          var isTest = (exports.isTest = 'production' === 'test');
          var isServer = (exports.isServer = !(
            typeof window !== 'undefined' &&
            window.document &&
            window.document.createElement
          ));

          var isWebpack = (exports.isWebpack = function isWebpack() {
            return typeof __webpack_require__ !== 'undefined';
          });
          var babelInterop = (exports.babelInterop = function babelInterop(
            mod
          ) {
            return mod &&
              (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) ===
                'object' &&
              mod.__esModule
              ? mod.default
              : mod;
          });

          var DefaultLoading = (exports.DefaultLoading = function DefaultLoading() {
            return _react2.default.createElement('div', null, 'Loading...');
          });
          var DefaultError = (exports.DefaultError = function DefaultError(
            _ref
          ) {
            var error = _ref.error;
            return _react2.default.createElement(
              'div',
              null,
              'Error: ',
              error && error.message
            );
          });

          var tryRequire = (exports.tryRequire = function tryRequire(id) {
            try {
              return requireById(id);
            } catch (err) {
              // warn if there was an error while requiring the chunk during development
              // this can sometimes lead the server to render the loading component.
              if (false) {
                console.warn(
                  'chunk not available for synchronous require yet: ' +
                    id +
                    ': ' +
                    err.message,
                  err.stack
                );
              }
            }

            return null;
          });

          var requireById = (exports.requireById = function requireById(id) {
            if (!isWebpack() && typeof id === 'string') {
              return module.require(id);
            }

            return __webpack_require__(id);
          });

          var resolveExport = (exports.resolveExport = function resolveExport(
            mod,
            key,
            onLoad,
            chunkName,
            props,
            context,
            modCache
          ) {
            var isSync =
              arguments.length > 7 && arguments[7] !== undefined
                ? arguments[7]
                : false;

            var exp = findExport(mod, key);
            if (onLoad && mod) {
              var _isServer = typeof window === 'undefined';
              var info = { isServer: _isServer, isSync: isSync };
              onLoad(mod, info, props, context);
            }
            if (chunkName && exp) cacheExport(exp, chunkName, props, modCache);
            return exp;
          });

          var findExport = (exports.findExport = function findExport(mod, key) {
            if (typeof key === 'function') {
              return key(mod);
            } else if (key === null) {
              return mod;
            }

            return mod &&
              (typeof mod === 'undefined' ? 'undefined' : _typeof(mod)) ===
                'object' &&
              key
              ? mod[key]
              : babelInterop(mod);
          });

          var createElement = (exports.createElement = function createElement(
            Component,
            props
          ) {
            return _react2.default.isValidElement(Component)
              ? _react2.default.cloneElement(Component, props)
              : _react2.default.createElement(Component, props);
          });

          var callForString = (exports.callForString = function callForString(
            strFun,
            props
          ) {
            return typeof strFun === 'function' ? strFun(props) : strFun;
          });

          var loadFromCache = (exports.loadFromCache = function loadFromCache(
            chunkName,
            props,
            modCache
          ) {
            return !isServer && modCache[callForString(chunkName, props)];
          });

          var cacheExport = (exports.cacheExport = function cacheExport(
            exp,
            chunkName,
            props,
            modCache
          ) {
            return (modCache[callForString(chunkName, props)] = exp);
          });

          var loadFromPromiseCache = (exports.loadFromPromiseCache = function loadFromPromiseCache(
            chunkName,
            props,
            promisecache
          ) {
            return promisecache[callForString(chunkName, props)];
          });

          var cacheProm = (exports.cacheProm = function cacheProm(
            pr,
            chunkName,
            props,
            promisecache
          ) {
            return (promisecache[callForString(chunkName, props)] = pr);
          });
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(18)(module)));

        /***/
      },
      /* 87 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var React = _interopRequireWildcard(_react);

        var _reactStatic = __webpack_require__(7);

        var _Thumbnails = __webpack_require__(221);

        var _Thumbnails2 = _interopRequireDefault(_Thumbnails);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        exports.default = (0, _reactStatic.withRouteData)(function(props) {
          return React.createElement(_Thumbnails2.default, props);
        });

        /***/
      },
      /* 88 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var React = _interopRequireWildcard(_react);

        var _reactStatic = __webpack_require__(7);

        var _Project = __webpack_require__(224);

        var _Project2 = _interopRequireDefault(_Project);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        exports.default = (0, _reactStatic.withRouteData)(_Project2.default);

        /***/
      },
      /* 89 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        function _toConsumableArray(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
              arr2[i] = arr[i];
            }
            return arr2;
          } else {
            return Array.from(arr);
          }
        }

        var xtend = __webpack_require__(6);
        var unified = __webpack_require__(226);
        var parse = __webpack_require__(237);
        var PropTypes = __webpack_require__(1);
        var naiveHtml = __webpack_require__(293);
        var disallowNode = __webpack_require__(294);
        var astToReact = __webpack_require__(295);
        var wrapTableRows = __webpack_require__(296);
        var getDefinitions = __webpack_require__(297);
        var uriTransformer = __webpack_require__(298);
        var defaultRenderers = __webpack_require__(299);

        var allTypes = Object.keys(defaultRenderers);

        var ReactMarkdown = function ReactMarkdown(props) {
          var src = props.source || props.children || '';

          if (props.allowedTypes && props.disallowedTypes) {
            throw new Error(
              'Only one of `allowedTypes` and `disallowedTypes` should be defined'
            );
          }

          var renderers = xtend(defaultRenderers, props.renderers);

          var plugins = [parse].concat(props.plugins || []);
          var parser = plugins.reduce(applyParserPlugin, unified());

          var rawAst = parser.parse(src);
          var renderProps = xtend(props, {
            renderers: renderers,
            definitions: getDefinitions(rawAst),
          });

          var astPlugins = determineAstPlugins(props);
          var ast = astPlugins.reduce(function(node, plugin) {
            return plugin(node, renderProps);
          }, rawAst);

          return astToReact(ast, renderProps);
        };

        function applyParserPlugin(parser, plugin) {
          return Array.isArray(plugin)
            ? parser.use.apply(parser, _toConsumableArray(plugin))
            : parser.use(plugin);
        }

        function determineAstPlugins(props) {
          var plugins = [wrapTableRows];

          var disallowedTypes = props.disallowedTypes;
          if (props.allowedTypes) {
            disallowedTypes = allTypes.filter(function(type) {
              return type !== 'root' && props.allowedTypes.indexOf(type) === -1;
            });
          }

          var removalMethod = props.unwrapDisallowed ? 'unwrap' : 'remove';
          if (disallowedTypes && disallowedTypes.length > 0) {
            plugins.push(disallowNode.ofType(disallowedTypes, removalMethod));
          }

          if (props.allowNode) {
            plugins.push(
              disallowNode.ifNotMatch(props.allowNode, removalMethod)
            );
          }

          var renderHtml = !props.escapeHtml && !props.skipHtml;
          if (renderHtml) {
            plugins.push(naiveHtml);
          }

          return props.astPlugins ? plugins.concat(props.astPlugins) : plugins;
        }

        ReactMarkdown.defaultProps = {
          renderers: {},
          escapeHtml: true,
          skipHtml: false,
          sourcePos: false,
          rawSourcePos: false,
          transformLinkUri: uriTransformer,
          astPlugins: [],
          plugins: [],
        };

        ReactMarkdown.propTypes = {
          className: PropTypes.string,
          source: PropTypes.string,
          children: PropTypes.string,
          sourcePos: PropTypes.bool,
          rawSourcePos: PropTypes.bool,
          escapeHtml: PropTypes.bool,
          skipHtml: PropTypes.bool,
          allowNode: PropTypes.func,
          allowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),
          disallowedTypes: PropTypes.arrayOf(PropTypes.oneOf(allTypes)),
          transformLinkUri: PropTypes.oneOfType([
            PropTypes.func,
            PropTypes.bool,
          ]),
          transformImageUri: PropTypes.func,
          astPlugins: PropTypes.arrayOf(PropTypes.func),
          unwrapDisallowed: PropTypes.bool,
          renderers: PropTypes.object,
          plugins: PropTypes.array,
        };

        ReactMarkdown.types = allTypes;
        ReactMarkdown.renderers = defaultRenderers;
        ReactMarkdown.uriTransformer = uriTransformer;

        module.exports = ReactMarkdown;

        /***/
      },
      /* 90 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = alphabetical;

        /* Check if the given character code, or the character
 * code at the first character, is alphabetical. */
        function alphabetical(character) {
          var code =
            typeof character === 'string' ? character.charCodeAt(0) : character;

          return (
            (code >= 97 && code <= 122) ||
            /* a-z */ (code >= 65 && code <= 90) /* A-Z */
          );
        }

        /***/
      },
      /* 91 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = {
          position: true,
          gfm: true,
          commonmark: false,
          footnotes: false,
          pedantic: false,
          blocks: __webpack_require__(254),
        };

        /***/
      },
      /* 92 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = indentation;

        /* Map of characters, and their column length,
 * which can be used as indentation. */
        var characters = { ' ': 1, '\t': 4 };

        /* Gets indentation information for a line. */
        function indentation(value) {
          var index = 0;
          var indent = 0;
          var character = value.charAt(index);
          var stops = {};
          var size;

          while (character in characters) {
            size = characters[character];

            indent += size;

            if (size > 1) {
              indent = Math.floor(indent / size) * size;
            }

            stops[indent] = index;

            character = value.charAt(++index);
          }

          return { indent: indent, stops: stops };
        }

        /***/
      },
      /* 93 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';
        var unquoted = '[^"\'=<>`\\u0000-\\u0020]+';
        var singleQuoted = "'[^']*'";
        var doubleQuoted = '"[^"]*"';
        var attributeValue =
          '(?:' + unquoted + '|' + singleQuoted + '|' + doubleQuoted + ')';
        var attribute =
          '(?:\\s+' + attributeName + '(?:\\s*=\\s*' + attributeValue + ')?)';
        var openTag = '<[A-Za-z][A-Za-z0-9\\-]*' + attribute + '*\\s*\\/?>';
        var closeTag = '<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>';
        var comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';
        var processing = '<[?].*?[?]>';
        var declaration = '<![A-Za-z]+\\s+[^>]*>';
        var cdata = '<!\\[CDATA\\[[\\s\\S]*?\\]\\]>';

        exports.openCloseTag = new RegExp(
          '^(?:' + openTag + '|' + closeTag + ')'
        );

        exports.tag = new RegExp(
          '^(?:' +
            openTag +
            '|' +
            closeTag +
            '|' +
            comment +
            '|' +
            processing +
            '|' +
            declaration +
            '|' +
            cdata +
            ')'
        );

        /***/
      },
      /* 94 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          return value.indexOf('<', fromIndex);
        }

        /***/
      },
      /* 95 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          var link = value.indexOf('[', fromIndex);
          var image = value.indexOf('![', fromIndex);

          if (image === -1) {
            return link;
          }

          /* Link can never be `-1` if an image is found, so we don’t need
   * to check for that :) */
          return link < image ? link : image;
        }

        /***/
      },
      /* 96 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var has = Object.prototype.hasOwnProperty;

        var hexTable = (function() {
          var array = [];
          for (var i = 0; i < 256; ++i) {
            array.push(
              '%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase()
            );
          }

          return array;
        })();

        var compactQueue = function compactQueue(queue) {
          var obj;

          while (queue.length) {
            var item = queue.pop();
            obj = item.obj[item.prop];

            if (Array.isArray(obj)) {
              var compacted = [];

              for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                  compacted.push(obj[j]);
                }
              }

              item.obj[item.prop] = compacted;
            }
          }

          return obj;
        };

        var arrayToObject = function arrayToObject(source, options) {
          var obj = options && options.plainObjects ? Object.create(null) : {};
          for (var i = 0; i < source.length; ++i) {
            if (typeof source[i] !== 'undefined') {
              obj[i] = source[i];
            }
          }

          return obj;
        };

        var merge = function merge(target, source, options) {
          if (!source) {
            return target;
          }

          if (typeof source !== 'object') {
            if (Array.isArray(target)) {
              target.push(source);
            } else if (typeof target === 'object') {
              if (
                options.plainObjects ||
                options.allowPrototypes ||
                !has.call(Object.prototype, source)
              ) {
                target[source] = true;
              }
            } else {
              return [target, source];
            }

            return target;
          }

          if (typeof target !== 'object') {
            return [target].concat(source);
          }

          var mergeTarget = target;
          if (Array.isArray(target) && !Array.isArray(source)) {
            mergeTarget = arrayToObject(target, options);
          }

          if (Array.isArray(target) && Array.isArray(source)) {
            source.forEach(function(item, i) {
              if (has.call(target, i)) {
                if (target[i] && typeof target[i] === 'object') {
                  target[i] = merge(target[i], item, options);
                } else {
                  target.push(item);
                }
              } else {
                target[i] = item;
              }
            });
            return target;
          }

          return Object.keys(source).reduce(function(acc, key) {
            var value = source[key];

            if (has.call(acc, key)) {
              acc[key] = merge(acc[key], value, options);
            } else {
              acc[key] = value;
            }
            return acc;
          }, mergeTarget);
        };

        var assign = function assignSingleSource(target, source) {
          return Object.keys(source).reduce(function(acc, key) {
            acc[key] = source[key];
            return acc;
          }, target);
        };

        var decode = function(str) {
          try {
            return decodeURIComponent(str.replace(/\+/g, ' '));
          } catch (e) {
            return str;
          }
        };

        var encode = function encode(str) {
          // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
          // It has been adapted here for stricter adherence to RFC 3986
          if (str.length === 0) {
            return str;
          }

          var string = typeof str === 'string' ? str : String(str);

          var out = '';
          for (var i = 0; i < string.length; ++i) {
            var c = string.charCodeAt(i);

            if (
              c === 0x2d || // -
              c === 0x2e || // .
              c === 0x5f || // _
              c === 0x7e || // ~
              (c >= 0x30 && c <= 0x39) || // 0-9
              (c >= 0x41 && c <= 0x5a) || // a-z
              (c >= 0x61 && c <= 0x7a) // A-Z
            ) {
              out += string.charAt(i);
              continue;
            }

            if (c < 0x80) {
              out = out + hexTable[c];
              continue;
            }

            if (c < 0x800) {
              out =
                out + (hexTable[0xc0 | (c >> 6)] + hexTable[0x80 | (c & 0x3f)]);
              continue;
            }

            if (c < 0xd800 || c >= 0xe000) {
              out =
                out +
                (hexTable[0xe0 | (c >> 12)] +
                  hexTable[0x80 | ((c >> 6) & 0x3f)] +
                  hexTable[0x80 | (c & 0x3f)]);
              continue;
            }

            i += 1;
            c =
              0x10000 + (((c & 0x3ff) << 10) | (string.charCodeAt(i) & 0x3ff));
            out +=
              hexTable[0xf0 | (c >> 18)] +
              hexTable[0x80 | ((c >> 12) & 0x3f)] +
              hexTable[0x80 | ((c >> 6) & 0x3f)] +
              hexTable[0x80 | (c & 0x3f)];
          }

          return out;
        };

        var compact = function compact(value) {
          var queue = [{ obj: { o: value }, prop: 'o' }];
          var refs = [];

          for (var i = 0; i < queue.length; ++i) {
            var item = queue[i];
            var obj = item.obj[item.prop];

            var keys = Object.keys(obj);
            for (var j = 0; j < keys.length; ++j) {
              var key = keys[j];
              var val = obj[key];
              if (
                typeof val === 'object' &&
                val !== null &&
                refs.indexOf(val) === -1
              ) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
              }
            }
          }

          return compactQueue(queue);
        };

        var isRegExp = function isRegExp(obj) {
          return Object.prototype.toString.call(obj) === '[object RegExp]';
        };

        var isBuffer = function isBuffer(obj) {
          if (obj === null || typeof obj === 'undefined') {
            return false;
          }

          return !!(
            obj.constructor &&
            obj.constructor.isBuffer &&
            obj.constructor.isBuffer(obj)
          );
        };

        module.exports = {
          arrayToObject: arrayToObject,
          assign: assign,
          compact: compact,
          decode: decode,
          encode: encode,
          isBuffer: isBuffer,
          isRegExp: isRegExp,
          merge: merge,
        };

        /***/
      },
      /* 97 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var replace = String.prototype.replace;
        var percentTwenties = /%20/g;

        module.exports = {
          default: 'RFC3986',
          formatters: {
            RFC1738: function(value) {
              return replace.call(value, percentTwenties, '+');
            },
            RFC3986: function(value) {
              return value;
            },
          },
          RFC1738: 'RFC1738',
          RFC3986: 'RFC3986',
        };

        /***/
      },
      /* 98 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var React = _interopRequireWildcard(_react);

        var _About = __webpack_require__(312);

        var _About2 = _interopRequireDefault(_About);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        exports.default = _About2.default;

        /***/
      },
      /* 99 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.default = undefined;

        var _NotFound = __webpack_require__(321);

        Object.defineProperty(exports, 'default', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_NotFound).default;
          },
        });

        var _react = __webpack_require__(0);

        var React = _interopRequireWildcard(_react);

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /***/
      },
      /* 100 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_smalldash__ = __webpack_require__(
          327
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom__ = __webpack_require__(
          48
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_dom___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_react_dom__
        );

        var component = {
          name: 'component',
          schema: {
            height: 0,
            width: 0,
          },
          fn: function fn(node) {
            return {
              height: node.clientHeight,
              width: node.clientWidth,
            };
          },
          subscriptions: {
            resize: true,
          },
        };

        var inView = {
          name: 'inView',
          schema: false,
          fn: function fn(node) {
            var top = node.getBoundingClientRect().top;
            var height = node.clientHeight;
            var innerHeight = window.innerHeight;
            return top < 0 ? Math.abs(top) - height < 0 : top < innerHeight;
          },
          subscriptions: { scroll: true, resize: true },
        };

        var createMobile = function createMobile() {
          var breakpoint =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 768;
          return {
            name: 'mobile',
            schema: false,
            fn: function fn(node) {
              return window.innerWidth < breakpoint;
            },
            subscriptions: {
              resize: true,
            },
          };
        };

        var orientation = {
          name: 'orientation',
          schema: 'landscape',
          fn: function fn(node) {
            return window.innerWidth > window.innerHeight
              ? 'landscape'
              : 'portrait';
          },
          subscriptions: { resize: true },
        };

        var windowSize = {
          name: 'window',
          schema: {
            innerHeight: 0,
            innerWidth: 0,
            outerHeight: 0,
            outerWidth: 0,
          },
          fn: function fn(node) {
            return {
              innerHeight: window.innerHeight,
              innerWidth: window.innerWidth,
              outerHeight: window.outerHeight,
              outerWidth: window.outerWidth,
            };
          },
          subscriptions: { resize: true },
        };

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var classCallCheck = function(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        };

        var createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }

          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var defineProperty = function(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }

          return obj;
        };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];

              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }

            return target;
          };

        var inherits = function(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }

          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        };

        var possibleConstructorReturn = function(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }

          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        };

        var toConsumableArray = function(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++)
              arr2[i] = arr[i];

            return arr2;
          } else {
            return Array.from(arr);
          }
        };

        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type =
            typeof value === 'undefined' ? 'undefined' : _typeof(value);
          return value != null && (type == 'object' || type == 'function');
        }

        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          (typeof global === 'undefined' ? 'undefined' : _typeof(global)) ==
            'object' &&
          global &&
          global.Object === Object &&
          global;

        /** Detect free variable `self`. */
        var freeSelf =
          (typeof self === 'undefined' ? 'undefined' : _typeof(self)) ==
            'object' &&
          self &&
          self.Object === Object &&
          self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function now() {
          return root.Date.now();
        };

        /** Built-in value references. */
        var _Symbol = root.Symbol;

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

        /**
         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the raw `toStringTag`.
         */
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

          try {
            value[symToStringTag] = undefined;
          } catch (e) {}

          var result = nativeObjectToString.call(value);
          {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result;
        }

        /** Used for built-in method references. */
        var objectProto$1 = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString$1 = objectProto$1.toString;

        /**
         * Converts `value` to a string using `Object.prototype.toString`.
         *
         * @private
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         */
        function objectToString(value) {
          return nativeObjectToString$1.call(value);
        }

        /** `Object#toString` result references. */
        var nullTag = '[object Null]',
          undefinedTag = '[object Undefined]';

        /** Built-in value references. */
        var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;

        /**
         * The base implementation of `getTag` without fallbacks for buggy environments.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
          }
          return symToStringTag$1 && symToStringTag$1 in Object(value)
            ? getRawTag(value)
            : objectToString(value);
        }

        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return (
            value != null &&
            (typeof value === 'undefined' ? 'undefined' : _typeof(value)) ==
              'object'
          );
        }

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            (typeof value === 'undefined' ? 'undefined' : _typeof(value)) ==
              'symbol' ||
            (isObjectLike(value) && baseGetTag(value) == symbolTag)
          );
        }

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other =
              typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value)
            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
            : reIsBadHex.test(value)
              ? NAN
              : +value;
        }

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
          nativeMin = Math.min;

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
          var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = 'maxWait' in options;
            maxWait = maxing
              ? nativeMax(toNumber(options.maxWait) || 0, wait)
              : maxWait;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }

          function invokeFunc(time) {
            var args = lastArgs,
              thisArg = lastThis;

            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }

          function leadingEdge(time) {
            // Reset any `maxWait` timer.
            lastInvokeTime = time;
            // Start the timer for the trailing edge.
            timerId = setTimeout(timerExpired, wait);
            // Invoke the leading edge.
            return leading ? invokeFunc(time) : result;
          }

          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;

            return maxing
              ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
              : timeWaiting;
          }

          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;

            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (
              lastCallTime === undefined ||
              timeSinceLastCall >= wait ||
              timeSinceLastCall < 0 ||
              (maxing && timeSinceLastInvoke >= maxWait)
            );
          }

          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            // Restart the timer.
            timerId = setTimeout(timerExpired, remainingWait(time));
          }

          function trailingEdge(time) {
            timerId = undefined;

            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }

          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }

          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }

          function debounced() {
            var time = now(),
              isInvoking = shouldInvoke(time);

            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;

            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }

        /** Error message constants. */
        var FUNC_ERROR_TEXT$1 = 'Expected a function';

        /**
         * Creates a throttled function that only invokes `func` at most once per
         * every `wait` milliseconds. The throttled function comes with a `cancel`
         * method to cancel delayed `func` invocations and a `flush` method to
         * immediately invoke them. Provide `options` to indicate whether `func`
         * should be invoked on the leading and/or trailing edge of the `wait`
         * timeout. The `func` is invoked with the last arguments provided to the
         * throttled function. Subsequent calls to the throttled function return the
         * result of the last `func` invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the throttled function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.throttle` and `_.debounce`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to throttle.
         * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=true]
         *  Specify invoking on the leading edge of the timeout.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new throttled function.
         * @example
         *
         * // Avoid excessively updating the position while scrolling.
         * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
         *
         * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
         * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
         * jQuery(element).on('click', throttled);
         *
         * // Cancel the trailing throttled invocation.
         * jQuery(window).on('popstate', throttled.cancel);
         */
        function throttle(func, wait, options) {
          var leading = true,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT$1);
          }
          if (isObject(options)) {
            leading = 'leading' in options ? !!options.leading : leading;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            leading: leading,
            maxWait: wait,
            trailing: trailing,
          });
        }

        /**
         * Basic subscription publish function. Returns an object with subscribe and publish functions.
         */
        var SubPub = function SubPub() {
          var subscribers = {};

          var createKey = function createKey() {
            return Math.random()
              .toString(16)
              .slice(-8);
          };

          return Object.seal({
            subscribe: function subscribe(subscriber) {
              var key = createKey();
              subscribers[key] = subscriber;
              return {
                unsubscribe: function unsubscribe() {
                  return delete subscribers[key];
                },
              };
            },

            publish: function publish() {
              Object.keys(subscribers).map(function(key) {
                return subscribers[key]();
              });
            },
          });
        };

        /**
         * Creates a window event listener based on the event type. Uses animation frames for improved performance.
         * @param {string} eventType
         */

        var createListener = function createListener(eventType) {
          var listener = new SubPub();
          var working = false;

          window.addEventListener(eventType, function(e) {
            if (!working) {
              working = true;
              window.requestAnimationFrame(listener.publish);
              working = false;
              // setTimeout(() => (working = false), 66);
            }
          });

          return Object.seal({ subscribe: listener.subscribe });
        };

        /**
         * We create window listeners lazily using this function.
         * This allows us to refrain from using the window object until componentDidMount lifecycle method.
         * Partial application to the listeners reference object so we don't create more then one of the same type of listener.
         * @param {object} listeners cache storage for already created window listeners
         * @param {string} eventType which window event to create a listener for
         */
        var windowEventCache = function windowEventCache() {
          var listeners =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          return function(eventType) {
            if (!listeners[eventType])
              listeners[eventType] = createListener(eventType);
            return listeners[eventType];
          };
        };

        var LazyEvent = windowEventCache();

        var defaultConfiguration = {
          name: '',
          schema: '',
          fn: function fn() {
            return '';
          },
          subscriptions: null,
        };

        var validateConfigurations = function validateConfigurations(
          configurations
        ) {
          return configurations.map(function(config) {
            // validate the name
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              typeof config.name === 'string',
              'Please provide a string name for your size configuration'
            );
            // validate the function
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              typeof config.fn === 'function',
              'The fn value of your size configuration is not a function'
            );
            // define defaults?
            return _extends({}, defaultConfiguration, config);
          });
        };

        var createInitialState = function createInitialState(configurations) {
          return configurations.reduce(
            function(state) {
              var _ref =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                schema = _ref.schema,
                name = _ref.name;

              return _extends({}, state, defineProperty({}, name, schema));
            },
            {
              subscriptions: [],
              DOMNode: null,
            }
          );
        };

        var createInitalState = Object(
          __WEBPACK_IMPORTED_MODULE_0_smalldash__['a' /* compose */]
        )(createInitialState, validateConfigurations);

        /**
         * This function will create an HOC that will wrap the react component.
         * It will make available all current props and also the current DOMNode.
         * @param {object} subscriptions which window events to subscribe to
         * @param {string} name string indentifier to be added to sizes prop
         * @param {function} fn comparator function to return value of the prop
         * @param {object} schema initial object state for safe object access
         */
        var createConfigurationInjector = function createConfigurationInjector(
          configurations
        ) {
          return function(Wrapped) {
            return (function(_React$Component) {
              inherits(ConfigurationInjector, _React$Component);

              function ConfigurationInjector() {
                var _ref;

                var _temp, _this, _ret;

                classCallCheck(this, ConfigurationInjector);

                for (
                  var _len = arguments.length, args = Array(_len), _key = 0;
                  _key < _len;
                  _key++
                ) {
                  args[_key] = arguments[_key];
                }

                return (
                  (_ret = ((_temp = ((_this = possibleConstructorReturn(
                    this,
                    (_ref =
                      ConfigurationInjector.__proto__ ||
                      Object.getPrototypeOf(ConfigurationInjector)).call.apply(
                      _ref,
                      [this].concat(args)
                    )
                  )),
                  _this)),
                  (_this.state = createInitalState(configurations)),
                  (_this.resize = function(config) {
                    return _this.computeProperty.bind(_this, config);
                  }),
                  (_this.scroll = function(config) {
                    return throttle(
                      _this.computeProperty.bind(_this, config),
                      400
                    );
                  }),
                  (_this.computeProperties = function() {
                    configurations.forEach(function(prop) {
                      return _this.computeProperty(prop);
                    });
                  }),
                  (_this.computeProperty = function(_ref2) {
                    var name = _ref2.name,
                      fn = _ref2.fn,
                      schema = _ref2.schema;

                    _this.setState(function(state) {
                      var nextProps = state.DOMNode
                        ? fn(state.DOMNode)
                        : schema;
                      return !Object(
                        __WEBPACK_IMPORTED_MODULE_0_smalldash__[
                          'b' /* equals */
                        ]
                      )(nextProps, state[name])
                        ? defineProperty({}, name, nextProps)
                        : null;
                    });
                  }),
                  (_this.scheduleSubscriptions = function() {
                    configurations.forEach(function(config) {
                      Object.keys(config.subscriptions).forEach(function(
                        listener
                      ) {
                        _this.setState(function(state) {
                          return {
                            subscriptions: [].concat(
                              toConsumableArray(state.subscriptions),
                              [
                                LazyEvent(listener).subscribe(
                                  _this[listener](config)
                                ),
                              ]
                            ),
                          };
                        });
                      });
                    });
                  }),
                  _temp)),
                  possibleConstructorReturn(_this, _ret)
                );
              }

              createClass(ConfigurationInjector, [
                {
                  key: 'componentDidMount',

                  /**
                   * Sets reference to DOMNode and stores it in component state
                   * Schedules listeners
                   */
                  value: function componentDidMount() {
                    // store DOM
                    this.setState({
                      DOMNode: __WEBPACK_IMPORTED_MODULE_3_react_dom___default.a.findDOMNode(
                        this
                      ),
                    });
                    // schedule listeners
                    this.scheduleSubscriptions();
                    // first call
                    this.computeProperties();
                  },

                  /**
                   * Unsubscribe from all window listener if it has been set up
                   */
                },
                {
                  key: 'componentWillUnmount',
                  value: function componentWillUnmount() {
                    this.state.subscriptions.forEach(function(each) {
                      return each.unsubscribe();
                    });
                  },
                },
                {
                  key: 'componentDidUpdate',
                  value: function componentDidUpdate(prevProps, prevState) {
                    if (prevState !== this.state && this.props.onSize) {
                      this.props.onSize(
                        _extends({}, this.state, {
                          name: Wrapped.name,
                          id: this.props.id,
                        })
                      );
                    }
                  },
                },
                {
                  key: 'render',
                  value: function render() {
                    return Object(
                      __WEBPACK_IMPORTED_MODULE_2_react__['createElement']
                    )(Wrapped, _extends({}, this.props, { sizes: this.state }));
                  },
                },
              ]);
              return ConfigurationInjector;
            })(__WEBPACK_IMPORTED_MODULE_2_react__['Component']);
          };
        };

        /**
         * Returns a new array (HOC injector functions) with the partially applied option added based on the boolean.
         * @param {function} option the react higher order component to wrap
         * @param {boolean} bool whether or not you wish to add the option to the array
         * @param {array} arr the array of higher order components you wish to wrap with
         */
        var addOption = function addOption(option) {
          return function(bool) {
            return function(arr) {
              return bool ? [].concat(toConsumableArray(arr), [option]) : arr;
            };
          };
        };

        /**
         * Adds HOC to the wrapped depending on the configuration object. Some HOC have dependencies on other HOC so this satisfies that logic as well.
         * @param {object} options this is the configuration object. It specifies which measurements to take.
         * @param {component} WrappedComponent the react component to wrap.
         */
        var Compose = function Compose() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            _ref$component = _ref.component,
            component$$1 =
              _ref$component === undefined ? false : _ref$component,
            _ref$measureWindow = _ref.measureWindow,
            measureWindow =
              _ref$measureWindow === undefined ? false : _ref$measureWindow,
            _ref$inView = _ref.inView,
            inView$$1 = _ref$inView === undefined ? false : _ref$inView,
            _ref$mobile = _ref.mobile,
            mobile = _ref$mobile === undefined ? false : _ref$mobile,
            _ref$orientation = _ref.orientation,
            orientation$$1 =
              _ref$orientation === undefined ? false : _ref$orientation,
            _ref$breakpoint = _ref.breakpoint,
            breakpoint = _ref$breakpoint === undefined ? 768 : _ref$breakpoint,
            _ref$resize = _ref.resize,
            _ref$scroll = _ref.scroll,
            _ref$custom = _ref.custom,
            custom = _ref$custom === undefined ? [] : _ref$custom;

          return function(WrappedComponent) {
            var configurations = Object(
              __WEBPACK_IMPORTED_MODULE_0_smalldash__['a' /* compose */]
            )(
              addOption(inView)(inView$$1),
              addOption(component)(component$$1),
              addOption(orientation)(orientation$$1),
              addOption(createMobile(breakpoint))(mobile),
              addOption(windowSize)(measureWindow)
            )([]);

            return createConfigurationInjector(
              [].concat(
                toConsumableArray(configurations),
                toConsumableArray(custom)
              )
            )(WrappedComponent);
          };
        };

        /* harmony default export */ __webpack_exports__['default'] = Compose;
        //# sourceMappingURL=react-size-components.esm.js.map

        /***/
      },
      /* 101 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        /* 
	Animate Menu Worksheet Instructions 
	Create new style updates by creating  animateMenu actions
	Object should contain properties to update
	We use rest operator to add properties so be sure to cancel or
	Reset properties that need to be overridden

	{ 
		left: -9999px
	}

	then

	{
		left: null
	}
*/

        var menuOn = (exports.menuOn = function menuOn() {
          return { type: 'MENU_ON' };
        });
        var menuOff = (exports.menuOff = function menuOff() {
          return { type: 'MENU_OFF' };
        });
        var menuState = (exports.menuState = function menuState(payload) {
          return {
            type: 'MENU_STATE',
            key: 'isMenuOn',
            payload: payload,
          };
        });
        var animateMenu = (exports.animateMenu = function animateMenu(payload) {
          return {
            type: 'ANIMATE_MENU',
            key: 'mobileMenuStyle',
            payload: payload,
          };
        });
        var setOrientation = (exports.setOrientation = function setOrientation(
          payload
        ) {
          return {
            type: 'ORIENTATION',
            key: 'orientation',
            payload: payload,
          };
        });
        var setMobile = (exports.setMobile = function setMobile(payload) {
          return {
            type: 'DEVICE',
            key: 'isMobile',
            payload: payload,
          };
        });

        var opacityZero = (exports.opacityZero = animateMenu({
          opacity: 0,
        }));

        var opacityOne = (exports.opacityOne = animateMenu({
          opacity: 1,
        }));

        var moveMenuOffScreen = (exports.moveMenuOffScreen = animateMenu({
          position: 'absolute',
          left: '-9999px',
          opacity: 0,
        }));

        var moveMenuOnScreen = (exports.moveMenuOnScreen = animateMenu({
          position: 'fixed',
          left: '0',
        }));

        /***/
      },
      /* 102 */
      /***/ function(module, exports, __webpack_require__) {
        var freeGlobal = __webpack_require__(351);

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        module.exports = root;

        /***/
      },
      /* 103 */
      /***/ function(module, exports, __webpack_require__) {
        var root = __webpack_require__(102);

        /** Built-in value references. */
        var Symbol = root.Symbol;

        module.exports = Symbol;

        /***/
      },
      /* 104 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactDom = __webpack_require__(48);

        var _reactDom2 = _interopRequireDefault(_reactDom);

        var _App = __webpack_require__(113);

        var _App2 = _interopRequireDefault(_App);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Export your top level component as JSX (for static rendering)
        exports.default = _App2.default;

        // Render your app

        // Your top level component

        if (typeof document !== 'undefined') {
          var renderMethod = false
            ? _reactDom2.default.render
            : _reactDom2.default.hydrate || _reactDom2.default.render;
          var render = function render(Comp) {
            renderMethod(
              _react2.default.createElement(Comp, null),
              document.getElementById('root')
            );
          };

          // Render!
          render(_App2.default);
        }

        /***/
      },
      /* 105 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /** @license React v16.4.1
         * react.production.min.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var k = __webpack_require__(17),
          n = __webpack_require__(45),
          p = __webpack_require__(46),
          q = __webpack_require__(47),
          r = 'function' === typeof Symbol && Symbol.for,
          t = r ? Symbol.for('react.element') : 60103,
          u = r ? Symbol.for('react.portal') : 60106,
          v = r ? Symbol.for('react.fragment') : 60107,
          w = r ? Symbol.for('react.strict_mode') : 60108,
          x = r ? Symbol.for('react.profiler') : 60114,
          y = r ? Symbol.for('react.provider') : 60109,
          z = r ? Symbol.for('react.context') : 60110,
          A = r ? Symbol.for('react.async_mode') : 60111,
          B = r ? Symbol.for('react.forward_ref') : 60112;
        r && Symbol.for('react.timeout');
        var C = 'function' === typeof Symbol && Symbol.iterator;
        function D(a) {
          for (
            var b = arguments.length - 1,
              e = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a,
              c = 0;
            c < b;
            c++
          )
            e += '&args[]=' + encodeURIComponent(arguments[c + 1]);
          n(
            !1,
            'Minified React error #' +
              a +
              '; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ',
            e
          );
        }
        var E = {
          isMounted: function() {
            return !1;
          },
          enqueueForceUpdate: function() {},
          enqueueReplaceState: function() {},
          enqueueSetState: function() {},
        };
        function F(a, b, e) {
          this.props = a;
          this.context = b;
          this.refs = p;
          this.updater = e || E;
        }
        F.prototype.isReactComponent = {};
        F.prototype.setState = function(a, b) {
          'object' !== typeof a && 'function' !== typeof a && null != a
            ? D('85')
            : void 0;
          this.updater.enqueueSetState(this, a, b, 'setState');
        };
        F.prototype.forceUpdate = function(a) {
          this.updater.enqueueForceUpdate(this, a, 'forceUpdate');
        };
        function G() {}
        G.prototype = F.prototype;
        function H(a, b, e) {
          this.props = a;
          this.context = b;
          this.refs = p;
          this.updater = e || E;
        }
        var I = (H.prototype = new G());
        I.constructor = H;
        k(I, F.prototype);
        I.isPureReactComponent = !0;
        var J = { current: null },
          K = Object.prototype.hasOwnProperty,
          L = { key: !0, ref: !0, __self: !0, __source: !0 };
        function M(a, b, e) {
          var c = void 0,
            d = {},
            g = null,
            h = null;
          if (null != b)
            for (c in (void 0 !== b.ref && (h = b.ref),
            void 0 !== b.key && (g = '' + b.key),
            b))
              K.call(b, c) && !L.hasOwnProperty(c) && (d[c] = b[c]);
          var f = arguments.length - 2;
          if (1 === f) d.children = e;
          else if (1 < f) {
            for (var l = Array(f), m = 0; m < f; m++) l[m] = arguments[m + 2];
            d.children = l;
          }
          if (a && a.defaultProps)
            for (c in ((f = a.defaultProps), f))
              void 0 === d[c] && (d[c] = f[c]);
          return {
            $$typeof: t,
            type: a,
            key: g,
            ref: h,
            props: d,
            _owner: J.current,
          };
        }
        function N(a) {
          return 'object' === typeof a && null !== a && a.$$typeof === t;
        }
        function escape(a) {
          var b = { '=': '=0', ':': '=2' };
          return (
            '$' +
            ('' + a).replace(/[=:]/g, function(a) {
              return b[a];
            })
          );
        }
        var O = /\/+/g,
          P = [];
        function Q(a, b, e, c) {
          if (P.length) {
            var d = P.pop();
            d.result = a;
            d.keyPrefix = b;
            d.func = e;
            d.context = c;
            d.count = 0;
            return d;
          }
          return { result: a, keyPrefix: b, func: e, context: c, count: 0 };
        }
        function R(a) {
          a.result = null;
          a.keyPrefix = null;
          a.func = null;
          a.context = null;
          a.count = 0;
          10 > P.length && P.push(a);
        }
        function S(a, b, e, c) {
          var d = typeof a;
          if ('undefined' === d || 'boolean' === d) a = null;
          var g = !1;
          if (null === a) g = !0;
          else
            switch (d) {
              case 'string':
              case 'number':
                g = !0;
                break;
              case 'object':
                switch (a.$$typeof) {
                  case t:
                  case u:
                    g = !0;
                }
            }
          if (g) return e(c, a, '' === b ? '.' + T(a, 0) : b), 1;
          g = 0;
          b = '' === b ? '.' : b + ':';
          if (Array.isArray(a))
            for (var h = 0; h < a.length; h++) {
              d = a[h];
              var f = b + T(d, h);
              g += S(d, f, e, c);
            }
          else if (
            (null === a || 'undefined' === typeof a
              ? (f = null)
              : ((f = (C && a[C]) || a['@@iterator']),
                (f = 'function' === typeof f ? f : null)),
            'function' === typeof f)
          )
            for (a = f.call(a), h = 0; !(d = a.next()).done; )
              (d = d.value), (f = b + T(d, h++)), (g += S(d, f, e, c));
          else
            'object' === d &&
              ((e = '' + a),
              D(
                '31',
                '[object Object]' === e
                  ? 'object with keys {' + Object.keys(a).join(', ') + '}'
                  : e,
                ''
              ));
          return g;
        }
        function T(a, b) {
          return 'object' === typeof a && null !== a && null != a.key
            ? escape(a.key)
            : b.toString(36);
        }
        function U(a, b) {
          a.func.call(a.context, b, a.count++);
        }
        function V(a, b, e) {
          var c = a.result,
            d = a.keyPrefix;
          a = a.func.call(a.context, b, a.count++);
          Array.isArray(a)
            ? W(a, c, e, q.thatReturnsArgument)
            : null != a &&
              (N(a) &&
                ((b =
                  d +
                  (!a.key || (b && b.key === a.key)
                    ? ''
                    : ('' + a.key).replace(O, '$&/') + '/') +
                  e),
                (a = {
                  $$typeof: t,
                  type: a.type,
                  key: b,
                  ref: a.ref,
                  props: a.props,
                  _owner: a._owner,
                })),
              c.push(a));
        }
        function W(a, b, e, c, d) {
          var g = '';
          null != e && (g = ('' + e).replace(O, '$&/') + '/');
          b = Q(b, g, c, d);
          null == a || S(a, '', V, b);
          R(b);
        }
        var X = {
            Children: {
              map: function(a, b, e) {
                if (null == a) return a;
                var c = [];
                W(a, c, null, b, e);
                return c;
              },
              forEach: function(a, b, e) {
                if (null == a) return a;
                b = Q(null, null, b, e);
                null == a || S(a, '', U, b);
                R(b);
              },
              count: function(a) {
                return null == a ? 0 : S(a, '', q.thatReturnsNull, null);
              },
              toArray: function(a) {
                var b = [];
                W(a, b, null, q.thatReturnsArgument);
                return b;
              },
              only: function(a) {
                N(a) ? void 0 : D('143');
                return a;
              },
            },
            createRef: function() {
              return { current: null };
            },
            Component: F,
            PureComponent: H,
            createContext: function(a, b) {
              void 0 === b && (b = null);
              a = {
                $$typeof: z,
                _calculateChangedBits: b,
                _defaultValue: a,
                _currentValue: a,
                _currentValue2: a,
                _changedBits: 0,
                _changedBits2: 0,
                Provider: null,
                Consumer: null,
              };
              a.Provider = { $$typeof: y, _context: a };
              return (a.Consumer = a);
            },
            forwardRef: function(a) {
              return { $$typeof: B, render: a };
            },
            Fragment: v,
            StrictMode: w,
            unstable_AsyncMode: A,
            unstable_Profiler: x,
            createElement: M,
            cloneElement: function(a, b, e) {
              null === a || void 0 === a ? D('267', a) : void 0;
              var c = void 0,
                d = k({}, a.props),
                g = a.key,
                h = a.ref,
                f = a._owner;
              if (null != b) {
                void 0 !== b.ref && ((h = b.ref), (f = J.current));
                void 0 !== b.key && (g = '' + b.key);
                var l = void 0;
                a.type && a.type.defaultProps && (l = a.type.defaultProps);
                for (c in b)
                  K.call(b, c) &&
                    !L.hasOwnProperty(c) &&
                    (d[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);
              }
              c = arguments.length - 2;
              if (1 === c) d.children = e;
              else if (1 < c) {
                l = Array(c);
                for (var m = 0; m < c; m++) l[m] = arguments[m + 2];
                d.children = l;
              }
              return {
                $$typeof: t,
                type: a.type,
                key: g,
                ref: h,
                props: d,
                _owner: f,
              };
            },
            createFactory: function(a) {
              var b = M.bind(null, a);
              b.type = a;
              return b;
            },
            isValidElement: N,
            version: '16.4.1',
            __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
              ReactCurrentOwner: J,
              assign: k,
            },
          },
          Y = { default: X },
          Z = (Y && X) || Y;
        module.exports = Z.default ? Z.default : Z;

        /***/
      },
      /* 106 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /** @license React v16.4.1
         * react-dom.production.min.js
         *
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

        var aa = __webpack_require__(45),
          ba = __webpack_require__(0),
          m = __webpack_require__(107),
          p = __webpack_require__(17),
          v = __webpack_require__(47),
          da = __webpack_require__(108),
          ea = __webpack_require__(109),
          fa = __webpack_require__(110),
          ha = __webpack_require__(46);
        function A(a) {
          for (
            var b = arguments.length - 1,
              c = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a,
              d = 0;
            d < b;
            d++
          )
            c += '&args[]=' + encodeURIComponent(arguments[d + 1]);
          aa(
            !1,
            'Minified React error #' +
              a +
              '; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ',
            c
          );
        }
        ba ? void 0 : A('227');
        function ia(a, b, c, d, e, f, g, h, k) {
          this._hasCaughtError = !1;
          this._caughtError = null;
          var n = Array.prototype.slice.call(arguments, 3);
          try {
            b.apply(c, n);
          } catch (r) {
            (this._caughtError = r), (this._hasCaughtError = !0);
          }
        }
        var B = {
          _caughtError: null,
          _hasCaughtError: !1,
          _rethrowError: null,
          _hasRethrowError: !1,
          invokeGuardedCallback: function(a, b, c, d, e, f, g, h, k) {
            ia.apply(B, arguments);
          },
          invokeGuardedCallbackAndCatchFirstError: function(
            a,
            b,
            c,
            d,
            e,
            f,
            g,
            h,
            k
          ) {
            B.invokeGuardedCallback.apply(this, arguments);
            if (B.hasCaughtError()) {
              var n = B.clearCaughtError();
              B._hasRethrowError ||
                ((B._hasRethrowError = !0), (B._rethrowError = n));
            }
          },
          rethrowCaughtError: function() {
            return ka.apply(B, arguments);
          },
          hasCaughtError: function() {
            return B._hasCaughtError;
          },
          clearCaughtError: function() {
            if (B._hasCaughtError) {
              var a = B._caughtError;
              B._caughtError = null;
              B._hasCaughtError = !1;
              return a;
            }
            A('198');
          },
        };
        function ka() {
          if (B._hasRethrowError) {
            var a = B._rethrowError;
            B._rethrowError = null;
            B._hasRethrowError = !1;
            throw a;
          }
        }
        var la = null,
          ma = {};
        function na() {
          if (la)
            for (var a in ma) {
              var b = ma[a],
                c = la.indexOf(a);
              -1 < c ? void 0 : A('96', a);
              if (!oa[c]) {
                b.extractEvents ? void 0 : A('97', a);
                oa[c] = b;
                c = b.eventTypes;
                for (var d in c) {
                  var e = void 0;
                  var f = c[d],
                    g = b,
                    h = d;
                  pa.hasOwnProperty(h) ? A('99', h) : void 0;
                  pa[h] = f;
                  var k = f.phasedRegistrationNames;
                  if (k) {
                    for (e in k) k.hasOwnProperty(e) && qa(k[e], g, h);
                    e = !0;
                  } else
                    f.registrationName
                      ? (qa(f.registrationName, g, h), (e = !0))
                      : (e = !1);
                  e ? void 0 : A('98', d, a);
                }
              }
            }
        }
        function qa(a, b, c) {
          ra[a] ? A('100', a) : void 0;
          ra[a] = b;
          sa[a] = b.eventTypes[c].dependencies;
        }
        var oa = [],
          pa = {},
          ra = {},
          sa = {};
        function ta(a) {
          la ? A('101') : void 0;
          la = Array.prototype.slice.call(a);
          na();
        }
        function ua(a) {
          var b = !1,
            c;
          for (c in a)
            if (a.hasOwnProperty(c)) {
              var d = a[c];
              (ma.hasOwnProperty(c) && ma[c] === d) ||
                (ma[c] ? A('102', c) : void 0, (ma[c] = d), (b = !0));
            }
          b && na();
        }
        var va = {
            plugins: oa,
            eventNameDispatchConfigs: pa,
            registrationNameModules: ra,
            registrationNameDependencies: sa,
            possibleRegistrationNames: null,
            injectEventPluginOrder: ta,
            injectEventPluginsByName: ua,
          },
          wa = null,
          xa = null,
          ya = null;
        function za(a, b, c, d) {
          b = a.type || 'unknown-event';
          a.currentTarget = ya(d);
          B.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);
          a.currentTarget = null;
        }
        function Aa(a, b) {
          null == b ? A('30') : void 0;
          if (null == a) return b;
          if (Array.isArray(a)) {
            if (Array.isArray(b)) return a.push.apply(a, b), a;
            a.push(b);
            return a;
          }
          return Array.isArray(b) ? [a].concat(b) : [a, b];
        }
        function Ba(a, b, c) {
          Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
        }
        var Ca = null;
        function Da(a, b) {
          if (a) {
            var c = a._dispatchListeners,
              d = a._dispatchInstances;
            if (Array.isArray(c))
              for (var e = 0; e < c.length && !a.isPropagationStopped(); e++)
                za(a, b, c[e], d[e]);
            else c && za(a, b, c, d);
            a._dispatchListeners = null;
            a._dispatchInstances = null;
            a.isPersistent() || a.constructor.release(a);
          }
        }
        function Ea(a) {
          return Da(a, !0);
        }
        function Fa(a) {
          return Da(a, !1);
        }
        var Ga = { injectEventPluginOrder: ta, injectEventPluginsByName: ua };
        function Ha(a, b) {
          var c = a.stateNode;
          if (!c) return null;
          var d = wa(c);
          if (!d) return null;
          c = d[b];
          a: switch (b) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
              (d = !d.disabled) ||
                ((a = a.type),
                (d = !(
                  'button' === a ||
                  'input' === a ||
                  'select' === a ||
                  'textarea' === a
                )));
              a = !d;
              break a;
            default:
              a = !1;
          }
          if (a) return null;
          c && 'function' !== typeof c ? A('231', b, typeof c) : void 0;
          return c;
        }
        function Ia(a, b) {
          null !== a && (Ca = Aa(Ca, a));
          a = Ca;
          Ca = null;
          a &&
            (b ? Ba(a, Ea) : Ba(a, Fa),
            Ca ? A('95') : void 0,
            B.rethrowCaughtError());
        }
        function Ja(a, b, c, d) {
          for (var e = null, f = 0; f < oa.length; f++) {
            var g = oa[f];
            g && (g = g.extractEvents(a, b, c, d)) && (e = Aa(e, g));
          }
          Ia(e, !1);
        }
        var Ka = {
            injection: Ga,
            getListener: Ha,
            runEventsInBatch: Ia,
            runExtractedEventsInBatch: Ja,
          },
          La = Math.random()
            .toString(36)
            .slice(2),
          C = '__reactInternalInstance$' + La,
          Ma = '__reactEventHandlers$' + La;
        function Na(a) {
          if (a[C]) return a[C];
          for (; !a[C]; )
            if (a.parentNode) a = a.parentNode;
            else return null;
          a = a[C];
          return 5 === a.tag || 6 === a.tag ? a : null;
        }
        function Oa(a) {
          if (5 === a.tag || 6 === a.tag) return a.stateNode;
          A('33');
        }
        function Pa(a) {
          return a[Ma] || null;
        }
        var Qa = {
          precacheFiberNode: function(a, b) {
            b[C] = a;
          },
          getClosestInstanceFromNode: Na,
          getInstanceFromNode: function(a) {
            a = a[C];
            return !a || (5 !== a.tag && 6 !== a.tag) ? null : a;
          },
          getNodeFromInstance: Oa,
          getFiberCurrentPropsFromNode: Pa,
          updateFiberProps: function(a, b) {
            a[Ma] = b;
          },
        };
        function F(a) {
          do a = a.return;
          while (a && 5 !== a.tag);
          return a ? a : null;
        }
        function Ra(a, b, c) {
          for (var d = []; a; ) d.push(a), (a = F(a));
          for (a = d.length; 0 < a--; ) b(d[a], 'captured', c);
          for (a = 0; a < d.length; a++) b(d[a], 'bubbled', c);
        }
        function Sa(a, b, c) {
          if ((b = Ha(a, c.dispatchConfig.phasedRegistrationNames[b])))
            (c._dispatchListeners = Aa(c._dispatchListeners, b)),
              (c._dispatchInstances = Aa(c._dispatchInstances, a));
        }
        function Ta(a) {
          a &&
            a.dispatchConfig.phasedRegistrationNames &&
            Ra(a._targetInst, Sa, a);
        }
        function Ua(a) {
          if (a && a.dispatchConfig.phasedRegistrationNames) {
            var b = a._targetInst;
            b = b ? F(b) : null;
            Ra(b, Sa, a);
          }
        }
        function Va(a, b, c) {
          a &&
            c &&
            c.dispatchConfig.registrationName &&
            (b = Ha(a, c.dispatchConfig.registrationName)) &&
            ((c._dispatchListeners = Aa(c._dispatchListeners, b)),
            (c._dispatchInstances = Aa(c._dispatchInstances, a)));
        }
        function Xa(a) {
          a && a.dispatchConfig.registrationName && Va(a._targetInst, null, a);
        }
        function Ya(a) {
          Ba(a, Ta);
        }
        function Za(a, b, c, d) {
          if (c && d)
            a: {
              var e = c;
              for (var f = d, g = 0, h = e; h; h = F(h)) g++;
              h = 0;
              for (var k = f; k; k = F(k)) h++;
              for (; 0 < g - h; ) (e = F(e)), g--;
              for (; 0 < h - g; ) (f = F(f)), h--;
              for (; g--; ) {
                if (e === f || e === f.alternate) break a;
                e = F(e);
                f = F(f);
              }
              e = null;
            }
          else e = null;
          f = e;
          for (e = []; c && c !== f; ) {
            g = c.alternate;
            if (null !== g && g === f) break;
            e.push(c);
            c = F(c);
          }
          for (c = []; d && d !== f; ) {
            g = d.alternate;
            if (null !== g && g === f) break;
            c.push(d);
            d = F(d);
          }
          for (d = 0; d < e.length; d++) Va(e[d], 'bubbled', a);
          for (a = c.length; 0 < a--; ) Va(c[a], 'captured', b);
        }
        var $a = {
          accumulateTwoPhaseDispatches: Ya,
          accumulateTwoPhaseDispatchesSkipTarget: function(a) {
            Ba(a, Ua);
          },
          accumulateEnterLeaveDispatches: Za,
          accumulateDirectDispatches: function(a) {
            Ba(a, Xa);
          },
        };
        function ab(a, b) {
          var c = {};
          c[a.toLowerCase()] = b.toLowerCase();
          c['Webkit' + a] = 'webkit' + b;
          c['Moz' + a] = 'moz' + b;
          c['ms' + a] = 'MS' + b;
          c['O' + a] = 'o' + b.toLowerCase();
          return c;
        }
        var bb = {
            animationend: ab('Animation', 'AnimationEnd'),
            animationiteration: ab('Animation', 'AnimationIteration'),
            animationstart: ab('Animation', 'AnimationStart'),
            transitionend: ab('Transition', 'TransitionEnd'),
          },
          cb = {},
          db = {};
        m.canUseDOM &&
          ((db = document.createElement('div').style),
          'AnimationEvent' in window ||
            (delete bb.animationend.animation,
            delete bb.animationiteration.animation,
            delete bb.animationstart.animation),
          'TransitionEvent' in window || delete bb.transitionend.transition);
        function eb(a) {
          if (cb[a]) return cb[a];
          if (!bb[a]) return a;
          var b = bb[a],
            c;
          for (c in b)
            if (b.hasOwnProperty(c) && c in db) return (cb[a] = b[c]);
          return a;
        }
        var fb = eb('animationend'),
          gb = eb('animationiteration'),
          hb = eb('animationstart'),
          ib = eb('transitionend'),
          jb = 'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting'.split(
            ' '
          ),
          kb = null;
        function lb() {
          !kb &&
            m.canUseDOM &&
            (kb =
              'textContent' in document.documentElement
                ? 'textContent'
                : 'innerText');
          return kb;
        }
        var G = { _root: null, _startText: null, _fallbackText: null };
        function mb() {
          if (G._fallbackText) return G._fallbackText;
          var a,
            b = G._startText,
            c = b.length,
            d,
            e = nb(),
            f = e.length;
          for (a = 0; a < c && b[a] === e[a]; a++);
          var g = c - a;
          for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
          G._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);
          return G._fallbackText;
        }
        function nb() {
          return 'value' in G._root ? G._root.value : G._root[lb()];
        }
        var ob = 'dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances'.split(
            ' '
          ),
          pb = {
            type: null,
            target: null,
            currentTarget: v.thatReturnsNull,
            eventPhase: null,
            bubbles: null,
            cancelable: null,
            timeStamp: function(a) {
              return a.timeStamp || Date.now();
            },
            defaultPrevented: null,
            isTrusted: null,
          };
        function H(a, b, c, d) {
          this.dispatchConfig = a;
          this._targetInst = b;
          this.nativeEvent = c;
          a = this.constructor.Interface;
          for (var e in a)
            a.hasOwnProperty(e) &&
              ((b = a[e])
                ? (this[e] = b(c))
                : 'target' === e
                  ? (this.target = d)
                  : (this[e] = c[e]));
          this.isDefaultPrevented = (null != c.defaultPrevented
          ? c.defaultPrevented
          : !1 === c.returnValue)
            ? v.thatReturnsTrue
            : v.thatReturnsFalse;
          this.isPropagationStopped = v.thatReturnsFalse;
          return this;
        }
        p(H.prototype, {
          preventDefault: function() {
            this.defaultPrevented = !0;
            var a = this.nativeEvent;
            a &&
              (a.preventDefault
                ? a.preventDefault()
                : 'unknown' !== typeof a.returnValue && (a.returnValue = !1),
              (this.isDefaultPrevented = v.thatReturnsTrue));
          },
          stopPropagation: function() {
            var a = this.nativeEvent;
            a &&
              (a.stopPropagation
                ? a.stopPropagation()
                : 'unknown' !== typeof a.cancelBubble && (a.cancelBubble = !0),
              (this.isPropagationStopped = v.thatReturnsTrue));
          },
          persist: function() {
            this.isPersistent = v.thatReturnsTrue;
          },
          isPersistent: v.thatReturnsFalse,
          destructor: function() {
            var a = this.constructor.Interface,
              b;
            for (b in a) this[b] = null;
            for (a = 0; a < ob.length; a++) this[ob[a]] = null;
          },
        });
        H.Interface = pb;
        H.extend = function(a) {
          function b() {}
          function c() {
            return d.apply(this, arguments);
          }
          var d = this;
          b.prototype = d.prototype;
          var e = new b();
          p(e, c.prototype);
          c.prototype = e;
          c.prototype.constructor = c;
          c.Interface = p({}, d.Interface, a);
          c.extend = d.extend;
          qb(c);
          return c;
        };
        qb(H);
        function rb(a, b, c, d) {
          if (this.eventPool.length) {
            var e = this.eventPool.pop();
            this.call(e, a, b, c, d);
            return e;
          }
          return new this(a, b, c, d);
        }
        function sb(a) {
          a instanceof this ? void 0 : A('223');
          a.destructor();
          10 > this.eventPool.length && this.eventPool.push(a);
        }
        function qb(a) {
          a.eventPool = [];
          a.getPooled = rb;
          a.release = sb;
        }
        var tb = H.extend({ data: null }),
          ub = H.extend({ data: null }),
          vb = [9, 13, 27, 32],
          wb = m.canUseDOM && 'CompositionEvent' in window,
          xb = null;
        m.canUseDOM &&
          'documentMode' in document &&
          (xb = document.documentMode);
        var yb = m.canUseDOM && 'TextEvent' in window && !xb,
          zb = m.canUseDOM && (!wb || (xb && 8 < xb && 11 >= xb)),
          Ab = String.fromCharCode(32),
          Bb = {
            beforeInput: {
              phasedRegistrationNames: {
                bubbled: 'onBeforeInput',
                captured: 'onBeforeInputCapture',
              },
              dependencies: [
                'compositionend',
                'keypress',
                'textInput',
                'paste',
              ],
            },
            compositionEnd: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionEnd',
                captured: 'onCompositionEndCapture',
              },
              dependencies: 'blur compositionend keydown keypress keyup mousedown'.split(
                ' '
              ),
            },
            compositionStart: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionStart',
                captured: 'onCompositionStartCapture',
              },
              dependencies: 'blur compositionstart keydown keypress keyup mousedown'.split(
                ' '
              ),
            },
            compositionUpdate: {
              phasedRegistrationNames: {
                bubbled: 'onCompositionUpdate',
                captured: 'onCompositionUpdateCapture',
              },
              dependencies: 'blur compositionupdate keydown keypress keyup mousedown'.split(
                ' '
              ),
            },
          },
          Cb = !1;
        function Db(a, b) {
          switch (a) {
            case 'keyup':
              return -1 !== vb.indexOf(b.keyCode);
            case 'keydown':
              return 229 !== b.keyCode;
            case 'keypress':
            case 'mousedown':
            case 'blur':
              return !0;
            default:
              return !1;
          }
        }
        function Eb(a) {
          a = a.detail;
          return 'object' === typeof a && 'data' in a ? a.data : null;
        }
        var Fb = !1;
        function Gb(a, b) {
          switch (a) {
            case 'compositionend':
              return Eb(b);
            case 'keypress':
              if (32 !== b.which) return null;
              Cb = !0;
              return Ab;
            case 'textInput':
              return (a = b.data), a === Ab && Cb ? null : a;
            default:
              return null;
          }
        }
        function Hb(a, b) {
          if (Fb)
            return 'compositionend' === a || (!wb && Db(a, b))
              ? ((a = mb()),
                (G._root = null),
                (G._startText = null),
                (G._fallbackText = null),
                (Fb = !1),
                a)
              : null;
          switch (a) {
            case 'paste':
              return null;
            case 'keypress':
              if (
                !(b.ctrlKey || b.altKey || b.metaKey) ||
                (b.ctrlKey && b.altKey)
              ) {
                if (b.char && 1 < b.char.length) return b.char;
                if (b.which) return String.fromCharCode(b.which);
              }
              return null;
            case 'compositionend':
              return zb ? null : b.data;
            default:
              return null;
          }
        }
        var Ib = {
            eventTypes: Bb,
            extractEvents: function(a, b, c, d) {
              var e = void 0;
              var f = void 0;
              if (wb)
                b: {
                  switch (a) {
                    case 'compositionstart':
                      e = Bb.compositionStart;
                      break b;
                    case 'compositionend':
                      e = Bb.compositionEnd;
                      break b;
                    case 'compositionupdate':
                      e = Bb.compositionUpdate;
                      break b;
                  }
                  e = void 0;
                }
              else
                Fb
                  ? Db(a, c) && (e = Bb.compositionEnd)
                  : 'keydown' === a &&
                    229 === c.keyCode &&
                    (e = Bb.compositionStart);
              e
                ? (zb &&
                    (Fb || e !== Bb.compositionStart
                      ? e === Bb.compositionEnd && Fb && (f = mb())
                      : ((G._root = d), (G._startText = nb()), (Fb = !0))),
                  (e = tb.getPooled(e, b, c, d)),
                  f ? (e.data = f) : ((f = Eb(c)), null !== f && (e.data = f)),
                  Ya(e),
                  (f = e))
                : (f = null);
              (a = yb ? Gb(a, c) : Hb(a, c))
                ? ((b = ub.getPooled(Bb.beforeInput, b, c, d)),
                  (b.data = a),
                  Ya(b))
                : (b = null);
              return null === f ? b : null === b ? f : [f, b];
            },
          },
          Jb = null,
          Kb = {
            injectFiberControlledHostComponent: function(a) {
              Jb = a;
            },
          },
          Lb = null,
          Mb = null;
        function Nb(a) {
          if ((a = xa(a))) {
            Jb && 'function' === typeof Jb.restoreControlledState
              ? void 0
              : A('194');
            var b = wa(a.stateNode);
            Jb.restoreControlledState(a.stateNode, a.type, b);
          }
        }
        function Ob(a) {
          Lb ? (Mb ? Mb.push(a) : (Mb = [a])) : (Lb = a);
        }
        function Pb() {
          return null !== Lb || null !== Mb;
        }
        function Qb() {
          if (Lb) {
            var a = Lb,
              b = Mb;
            Mb = Lb = null;
            Nb(a);
            if (b) for (a = 0; a < b.length; a++) Nb(b[a]);
          }
        }
        var Rb = {
          injection: Kb,
          enqueueStateRestore: Ob,
          needsStateRestore: Pb,
          restoreStateIfNeeded: Qb,
        };
        function Sb(a, b) {
          return a(b);
        }
        function Tb(a, b, c) {
          return a(b, c);
        }
        function Ub() {}
        var Vb = !1;
        function Wb(a, b) {
          if (Vb) return a(b);
          Vb = !0;
          try {
            return Sb(a, b);
          } finally {
            (Vb = !1), Pb() && (Ub(), Qb());
          }
        }
        var Xb = {
          color: !0,
          date: !0,
          datetime: !0,
          'datetime-local': !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function Yb(a) {
          var b = a && a.nodeName && a.nodeName.toLowerCase();
          return 'input' === b ? !!Xb[a.type] : 'textarea' === b ? !0 : !1;
        }
        function Zb(a) {
          a = a.target || a.srcElement || window;
          a.correspondingUseElement && (a = a.correspondingUseElement);
          return 3 === a.nodeType ? a.parentNode : a;
        }
        function $b(a, b) {
          if (!m.canUseDOM || (b && !('addEventListener' in document)))
            return !1;
          a = 'on' + a;
          b = a in document;
          b ||
            ((b = document.createElement('div')),
            b.setAttribute(a, 'return;'),
            (b = 'function' === typeof b[a]));
          return b;
        }
        function ac(a) {
          var b = a.type;
          return (
            (a = a.nodeName) &&
            'input' === a.toLowerCase() &&
            ('checkbox' === b || 'radio' === b)
          );
        }
        function bc(a) {
          var b = ac(a) ? 'checked' : 'value',
            c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
            d = '' + a[b];
          if (
            !a.hasOwnProperty(b) &&
            'undefined' !== typeof c &&
            'function' === typeof c.get &&
            'function' === typeof c.set
          ) {
            var e = c.get,
              f = c.set;
            Object.defineProperty(a, b, {
              configurable: !0,
              get: function() {
                return e.call(this);
              },
              set: function(a) {
                d = '' + a;
                f.call(this, a);
              },
            });
            Object.defineProperty(a, b, { enumerable: c.enumerable });
            return {
              getValue: function() {
                return d;
              },
              setValue: function(a) {
                d = '' + a;
              },
              stopTracking: function() {
                a._valueTracker = null;
                delete a[b];
              },
            };
          }
        }
        function cc(a) {
          a._valueTracker || (a._valueTracker = bc(a));
        }
        function dc(a) {
          if (!a) return !1;
          var b = a._valueTracker;
          if (!b) return !0;
          var c = b.getValue();
          var d = '';
          a && (d = ac(a) ? (a.checked ? 'true' : 'false') : a.value);
          a = d;
          return a !== c ? (b.setValue(a), !0) : !1;
        }
        var ec =
            ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              .ReactCurrentOwner,
          fc = 'function' === typeof Symbol && Symbol.for,
          gc = fc ? Symbol.for('react.element') : 60103,
          hc = fc ? Symbol.for('react.portal') : 60106,
          ic = fc ? Symbol.for('react.fragment') : 60107,
          jc = fc ? Symbol.for('react.strict_mode') : 60108,
          kc = fc ? Symbol.for('react.profiler') : 60114,
          lc = fc ? Symbol.for('react.provider') : 60109,
          mc = fc ? Symbol.for('react.context') : 60110,
          pc = fc ? Symbol.for('react.async_mode') : 60111,
          qc = fc ? Symbol.for('react.forward_ref') : 60112,
          rc = fc ? Symbol.for('react.timeout') : 60113,
          sc = 'function' === typeof Symbol && Symbol.iterator;
        function tc(a) {
          if (null === a || 'undefined' === typeof a) return null;
          a = (sc && a[sc]) || a['@@iterator'];
          return 'function' === typeof a ? a : null;
        }
        function uc(a) {
          var b = a.type;
          if ('function' === typeof b) return b.displayName || b.name;
          if ('string' === typeof b) return b;
          switch (b) {
            case pc:
              return 'AsyncMode';
            case mc:
              return 'Context.Consumer';
            case ic:
              return 'ReactFragment';
            case hc:
              return 'ReactPortal';
            case kc:
              return 'Profiler(' + a.pendingProps.id + ')';
            case lc:
              return 'Context.Provider';
            case jc:
              return 'StrictMode';
            case rc:
              return 'Timeout';
          }
          if ('object' === typeof b && null !== b)
            switch (b.$$typeof) {
              case qc:
                return (
                  (a = b.render.displayName || b.render.name || ''),
                  '' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef'
                );
            }
          return null;
        }
        function vc(a) {
          var b = '';
          do {
            a: switch (a.tag) {
              case 0:
              case 1:
              case 2:
              case 5:
                var c = a._debugOwner,
                  d = a._debugSource;
                var e = uc(a);
                var f = null;
                c && (f = uc(c));
                c = d;
                e =
                  '\n    in ' +
                  (e || 'Unknown') +
                  (c
                    ? ' (at ' +
                      c.fileName.replace(/^.*[\\\/]/, '') +
                      ':' +
                      c.lineNumber +
                      ')'
                    : f
                      ? ' (created by ' + f + ')'
                      : '');
                break a;
              default:
                e = '';
            }
            b += e;
            a = a.return;
          } while (a);
          return b;
        }
        var wc = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          xc = {},
          zc = {};
        function Ac(a) {
          if (zc.hasOwnProperty(a)) return !0;
          if (xc.hasOwnProperty(a)) return !1;
          if (wc.test(a)) return (zc[a] = !0);
          xc[a] = !0;
          return !1;
        }
        function Bc(a, b, c, d) {
          if (null !== c && 0 === c.type) return !1;
          switch (typeof b) {
            case 'function':
            case 'symbol':
              return !0;
            case 'boolean':
              if (d) return !1;
              if (null !== c) return !c.acceptsBooleans;
              a = a.toLowerCase().slice(0, 5);
              return 'data-' !== a && 'aria-' !== a;
            default:
              return !1;
          }
        }
        function Cc(a, b, c, d) {
          if (null === b || 'undefined' === typeof b || Bc(a, b, c, d))
            return !0;
          if (d) return !1;
          if (null !== c)
            switch (c.type) {
              case 3:
                return !b;
              case 4:
                return !1 === b;
              case 5:
                return isNaN(b);
              case 6:
                return isNaN(b) || 1 > b;
            }
          return !1;
        }
        function I(a, b, c, d, e) {
          this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
          this.attributeName = d;
          this.attributeNamespace = e;
          this.mustUseProperty = c;
          this.propertyName = a;
          this.type = b;
        }
        var J = {};
        'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
          .split(' ')
          .forEach(function(a) {
            J[a] = new I(a, 0, !1, a, null);
          });
        [
          ['acceptCharset', 'accept-charset'],
          ['className', 'class'],
          ['htmlFor', 'for'],
          ['httpEquiv', 'http-equiv'],
        ].forEach(function(a) {
          var b = a[0];
          J[b] = new I(b, 1, !1, a[1], null);
        });
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
          function(a) {
            J[a] = new I(a, 2, !1, a.toLowerCase(), null);
          }
        );
        ['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(
          function(a) {
            J[a] = new I(a, 2, !1, a, null);
          }
        );
        'allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
          .split(' ')
          .forEach(function(a) {
            J[a] = new I(a, 3, !1, a.toLowerCase(), null);
          });
        ['checked', 'multiple', 'muted', 'selected'].forEach(function(a) {
          J[a] = new I(a, 3, !0, a.toLowerCase(), null);
        });
        ['capture', 'download'].forEach(function(a) {
          J[a] = new I(a, 4, !1, a.toLowerCase(), null);
        });
        ['cols', 'rows', 'size', 'span'].forEach(function(a) {
          J[a] = new I(a, 6, !1, a.toLowerCase(), null);
        });
        ['rowSpan', 'start'].forEach(function(a) {
          J[a] = new I(a, 5, !1, a.toLowerCase(), null);
        });
        var Dc = /[\-:]([a-z])/g;
        function Ec(a) {
          return a[1].toUpperCase();
        }
        'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
          .split(' ')
          .forEach(function(a) {
            var b = a.replace(Dc, Ec);
            J[b] = new I(b, 1, !1, a, null);
          });
        'xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type'
          .split(' ')
          .forEach(function(a) {
            var b = a.replace(Dc, Ec);
            J[b] = new I(b, 1, !1, a, 'http://www.w3.org/1999/xlink');
          });
        ['xml:base', 'xml:lang', 'xml:space'].forEach(function(a) {
          var b = a.replace(Dc, Ec);
          J[b] = new I(b, 1, !1, a, 'http://www.w3.org/XML/1998/namespace');
        });
        J.tabIndex = new I('tabIndex', 1, !1, 'tabindex', null);
        function Fc(a, b, c, d) {
          var e = J.hasOwnProperty(b) ? J[b] : null;
          var f =
            null !== e
              ? 0 === e.type
              : d
                ? !1
                : !(2 < b.length) ||
                  ('o' !== b[0] && 'O' !== b[0]) ||
                  ('n' !== b[1] && 'N' !== b[1])
                  ? !1
                  : !0;
          f ||
            (Cc(b, c, e, d) && (c = null),
            d || null === e
              ? Ac(b) &&
                (null === c ? a.removeAttribute(b) : a.setAttribute(b, '' + c))
              : e.mustUseProperty
                ? (a[e.propertyName] =
                    null === c ? (3 === e.type ? !1 : '') : c)
                : ((b = e.attributeName),
                  (d = e.attributeNamespace),
                  null === c
                    ? a.removeAttribute(b)
                    : ((e = e.type),
                      (c = 3 === e || (4 === e && !0 === c) ? '' : '' + c),
                      d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
        }
        function Gc(a, b) {
          var c = b.checked;
          return p({}, b, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != c ? c : a._wrapperState.initialChecked,
          });
        }
        function Hc(a, b) {
          var c = null == b.defaultValue ? '' : b.defaultValue,
            d = null != b.checked ? b.checked : b.defaultChecked;
          c = Ic(null != b.value ? b.value : c);
          a._wrapperState = {
            initialChecked: d,
            initialValue: c,
            controlled:
              'checkbox' === b.type || 'radio' === b.type
                ? null != b.checked
                : null != b.value,
          };
        }
        function Jc(a, b) {
          b = b.checked;
          null != b && Fc(a, 'checked', b, !1);
        }
        function Kc(a, b) {
          Jc(a, b);
          var c = Ic(b.value);
          if (null != c)
            if ('number' === b.type) {
              if ((0 === c && '' === a.value) || a.value != c) a.value = '' + c;
            } else a.value !== '' + c && (a.value = '' + c);
          b.hasOwnProperty('value')
            ? Lc(a, b.type, c)
            : b.hasOwnProperty('defaultValue') &&
              Lc(a, b.type, Ic(b.defaultValue));
          null == b.checked &&
            null != b.defaultChecked &&
            (a.defaultChecked = !!b.defaultChecked);
        }
        function Mc(a, b, c) {
          if (b.hasOwnProperty('value') || b.hasOwnProperty('defaultValue')) {
            b = '' + a._wrapperState.initialValue;
            var d = a.value;
            c || b === d || (a.value = b);
            a.defaultValue = b;
          }
          c = a.name;
          '' !== c && (a.name = '');
          a.defaultChecked = !a.defaultChecked;
          a.defaultChecked = !a.defaultChecked;
          '' !== c && (a.name = c);
        }
        function Lc(a, b, c) {
          if ('number' !== b || a.ownerDocument.activeElement !== a)
            null == c
              ? (a.defaultValue = '' + a._wrapperState.initialValue)
              : a.defaultValue !== '' + c && (a.defaultValue = '' + c);
        }
        function Ic(a) {
          switch (typeof a) {
            case 'boolean':
            case 'number':
            case 'object':
            case 'string':
            case 'undefined':
              return a;
            default:
              return '';
          }
        }
        var Nc = {
          change: {
            phasedRegistrationNames: {
              bubbled: 'onChange',
              captured: 'onChangeCapture',
            },
            dependencies: 'blur change click focus input keydown keyup selectionchange'.split(
              ' '
            ),
          },
        };
        function Oc(a, b, c) {
          a = H.getPooled(Nc.change, a, b, c);
          a.type = 'change';
          Ob(c);
          Ya(a);
          return a;
        }
        var Pc = null,
          Qc = null;
        function Rc(a) {
          Ia(a, !1);
        }
        function Sc(a) {
          var b = Oa(a);
          if (dc(b)) return a;
        }
        function Tc(a, b) {
          if ('change' === a) return b;
        }
        var Uc = !1;
        m.canUseDOM &&
          (Uc =
            $b('input') &&
            (!document.documentMode || 9 < document.documentMode));
        function Vc() {
          Pc && (Pc.detachEvent('onpropertychange', Wc), (Qc = Pc = null));
        }
        function Wc(a) {
          'value' === a.propertyName &&
            Sc(Qc) &&
            ((a = Oc(Qc, a, Zb(a))), Wb(Rc, a));
        }
        function Xc(a, b, c) {
          'focus' === a
            ? (Vc(), (Pc = b), (Qc = c), Pc.attachEvent('onpropertychange', Wc))
            : 'blur' === a && Vc();
        }
        function Yc(a) {
          if ('selectionchange' === a || 'keyup' === a || 'keydown' === a)
            return Sc(Qc);
        }
        function Zc(a, b) {
          if ('click' === a) return Sc(b);
        }
        function $c(a, b) {
          if ('input' === a || 'change' === a) return Sc(b);
        }
        var ad = {
            eventTypes: Nc,
            _isInputEventSupported: Uc,
            extractEvents: function(a, b, c, d) {
              var e = b ? Oa(b) : window,
                f = void 0,
                g = void 0,
                h = e.nodeName && e.nodeName.toLowerCase();
              'select' === h || ('input' === h && 'file' === e.type)
                ? (f = Tc)
                : Yb(e)
                  ? Uc
                    ? (f = $c)
                    : ((f = Yc), (g = Xc))
                  : (h = e.nodeName) &&
                    'input' === h.toLowerCase() &&
                    ('checkbox' === e.type || 'radio' === e.type) &&
                    (f = Zc);
              if (f && (f = f(a, b))) return Oc(f, c, d);
              g && g(a, e, b);
              'blur' === a &&
                (a = e._wrapperState) &&
                a.controlled &&
                'number' === e.type &&
                Lc(e, 'number', e.value);
            },
          },
          bd = H.extend({ view: null, detail: null }),
          cd = {
            Alt: 'altKey',
            Control: 'ctrlKey',
            Meta: 'metaKey',
            Shift: 'shiftKey',
          };
        function dd(a) {
          var b = this.nativeEvent;
          return b.getModifierState
            ? b.getModifierState(a)
            : (a = cd[a])
              ? !!b[a]
              : !1;
        }
        function ed() {
          return dd;
        }
        var fd = bd.extend({
            screenX: null,
            screenY: null,
            clientX: null,
            clientY: null,
            pageX: null,
            pageY: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            getModifierState: ed,
            button: null,
            buttons: null,
            relatedTarget: function(a) {
              return (
                a.relatedTarget ||
                (a.fromElement === a.srcElement ? a.toElement : a.fromElement)
              );
            },
          }),
          gd = fd.extend({
            pointerId: null,
            width: null,
            height: null,
            pressure: null,
            tiltX: null,
            tiltY: null,
            pointerType: null,
            isPrimary: null,
          }),
          hd = {
            mouseEnter: {
              registrationName: 'onMouseEnter',
              dependencies: ['mouseout', 'mouseover'],
            },
            mouseLeave: {
              registrationName: 'onMouseLeave',
              dependencies: ['mouseout', 'mouseover'],
            },
            pointerEnter: {
              registrationName: 'onPointerEnter',
              dependencies: ['pointerout', 'pointerover'],
            },
            pointerLeave: {
              registrationName: 'onPointerLeave',
              dependencies: ['pointerout', 'pointerover'],
            },
          },
          id = {
            eventTypes: hd,
            extractEvents: function(a, b, c, d) {
              var e = 'mouseover' === a || 'pointerover' === a,
                f = 'mouseout' === a || 'pointerout' === a;
              if ((e && (c.relatedTarget || c.fromElement)) || (!f && !e))
                return null;
              e =
                d.window === d
                  ? d
                  : (e = d.ownerDocument)
                    ? e.defaultView || e.parentWindow
                    : window;
              f
                ? ((f = b),
                  (b = (b = c.relatedTarget || c.toElement) ? Na(b) : null))
                : (f = null);
              if (f === b) return null;
              var g = void 0,
                h = void 0,
                k = void 0,
                n = void 0;
              if ('mouseout' === a || 'mouseover' === a)
                (g = fd),
                  (h = hd.mouseLeave),
                  (k = hd.mouseEnter),
                  (n = 'mouse');
              else if ('pointerout' === a || 'pointerover' === a)
                (g = gd),
                  (h = hd.pointerLeave),
                  (k = hd.pointerEnter),
                  (n = 'pointer');
              a = null == f ? e : Oa(f);
              e = null == b ? e : Oa(b);
              h = g.getPooled(h, f, c, d);
              h.type = n + 'leave';
              h.target = a;
              h.relatedTarget = e;
              c = g.getPooled(k, b, c, d);
              c.type = n + 'enter';
              c.target = e;
              c.relatedTarget = a;
              Za(h, c, f, b);
              return [h, c];
            },
          };
        function jd(a) {
          var b = a;
          if (a.alternate) for (; b.return; ) b = b.return;
          else {
            if (0 !== (b.effectTag & 2)) return 1;
            for (; b.return; )
              if (((b = b.return), 0 !== (b.effectTag & 2))) return 1;
          }
          return 3 === b.tag ? 2 : 3;
        }
        function kd(a) {
          2 !== jd(a) ? A('188') : void 0;
        }
        function ld(a) {
          var b = a.alternate;
          if (!b)
            return (b = jd(a)), 3 === b ? A('188') : void 0, 1 === b ? null : a;
          for (var c = a, d = b; ; ) {
            var e = c.return,
              f = e ? e.alternate : null;
            if (!e || !f) break;
            if (e.child === f.child) {
              for (var g = e.child; g; ) {
                if (g === c) return kd(e), a;
                if (g === d) return kd(e), b;
                g = g.sibling;
              }
              A('188');
            }
            if (c.return !== d.return) (c = e), (d = f);
            else {
              g = !1;
              for (var h = e.child; h; ) {
                if (h === c) {
                  g = !0;
                  c = e;
                  d = f;
                  break;
                }
                if (h === d) {
                  g = !0;
                  d = e;
                  c = f;
                  break;
                }
                h = h.sibling;
              }
              if (!g) {
                for (h = f.child; h; ) {
                  if (h === c) {
                    g = !0;
                    c = f;
                    d = e;
                    break;
                  }
                  if (h === d) {
                    g = !0;
                    d = f;
                    c = e;
                    break;
                  }
                  h = h.sibling;
                }
                g ? void 0 : A('189');
              }
            }
            c.alternate !== d ? A('190') : void 0;
          }
          3 !== c.tag ? A('188') : void 0;
          return c.stateNode.current === c ? a : b;
        }
        function md(a) {
          a = ld(a);
          if (!a) return null;
          for (var b = a; ; ) {
            if (5 === b.tag || 6 === b.tag) return b;
            if (b.child) (b.child.return = b), (b = b.child);
            else {
              if (b === a) break;
              for (; !b.sibling; ) {
                if (!b.return || b.return === a) return null;
                b = b.return;
              }
              b.sibling.return = b.return;
              b = b.sibling;
            }
          }
          return null;
        }
        function nd(a) {
          a = ld(a);
          if (!a) return null;
          for (var b = a; ; ) {
            if (5 === b.tag || 6 === b.tag) return b;
            if (b.child && 4 !== b.tag) (b.child.return = b), (b = b.child);
            else {
              if (b === a) break;
              for (; !b.sibling; ) {
                if (!b.return || b.return === a) return null;
                b = b.return;
              }
              b.sibling.return = b.return;
              b = b.sibling;
            }
          }
          return null;
        }
        var od = H.extend({
            animationName: null,
            elapsedTime: null,
            pseudoElement: null,
          }),
          pd = H.extend({
            clipboardData: function(a) {
              return 'clipboardData' in a
                ? a.clipboardData
                : window.clipboardData;
            },
          }),
          qd = bd.extend({ relatedTarget: null });
        function rd(a) {
          var b = a.keyCode;
          'charCode' in a
            ? ((a = a.charCode), 0 === a && 13 === b && (a = 13))
            : (a = b);
          10 === a && (a = 13);
          return 32 <= a || 13 === a ? a : 0;
        }
        var sd = {
            Esc: 'Escape',
            Spacebar: ' ',
            Left: 'ArrowLeft',
            Up: 'ArrowUp',
            Right: 'ArrowRight',
            Down: 'ArrowDown',
            Del: 'Delete',
            Win: 'OS',
            Menu: 'ContextMenu',
            Apps: 'ContextMenu',
            Scroll: 'ScrollLock',
            MozPrintableKey: 'Unidentified',
          },
          td = {
            8: 'Backspace',
            9: 'Tab',
            12: 'Clear',
            13: 'Enter',
            16: 'Shift',
            17: 'Control',
            18: 'Alt',
            19: 'Pause',
            20: 'CapsLock',
            27: 'Escape',
            32: ' ',
            33: 'PageUp',
            34: 'PageDown',
            35: 'End',
            36: 'Home',
            37: 'ArrowLeft',
            38: 'ArrowUp',
            39: 'ArrowRight',
            40: 'ArrowDown',
            45: 'Insert',
            46: 'Delete',
            112: 'F1',
            113: 'F2',
            114: 'F3',
            115: 'F4',
            116: 'F5',
            117: 'F6',
            118: 'F7',
            119: 'F8',
            120: 'F9',
            121: 'F10',
            122: 'F11',
            123: 'F12',
            144: 'NumLock',
            145: 'ScrollLock',
            224: 'Meta',
          },
          ud = bd.extend({
            key: function(a) {
              if (a.key) {
                var b = sd[a.key] || a.key;
                if ('Unidentified' !== b) return b;
              }
              return 'keypress' === a.type
                ? ((a = rd(a)), 13 === a ? 'Enter' : String.fromCharCode(a))
                : 'keydown' === a.type || 'keyup' === a.type
                  ? td[a.keyCode] || 'Unidentified'
                  : '';
            },
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: ed,
            charCode: function(a) {
              return 'keypress' === a.type ? rd(a) : 0;
            },
            keyCode: function(a) {
              return 'keydown' === a.type || 'keyup' === a.type ? a.keyCode : 0;
            },
            which: function(a) {
              return 'keypress' === a.type
                ? rd(a)
                : 'keydown' === a.type || 'keyup' === a.type
                  ? a.keyCode
                  : 0;
            },
          }),
          vd = fd.extend({ dataTransfer: null }),
          wd = bd.extend({
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: ed,
          }),
          xd = H.extend({
            propertyName: null,
            elapsedTime: null,
            pseudoElement: null,
          }),
          yd = fd.extend({
            deltaX: function(a) {
              return 'deltaX' in a
                ? a.deltaX
                : 'wheelDeltaX' in a
                  ? -a.wheelDeltaX
                  : 0;
            },
            deltaY: function(a) {
              return 'deltaY' in a
                ? a.deltaY
                : 'wheelDeltaY' in a
                  ? -a.wheelDeltaY
                  : 'wheelDelta' in a
                    ? -a.wheelDelta
                    : 0;
            },
            deltaZ: null,
            deltaMode: null,
          }),
          zd = [
            ['abort', 'abort'],
            [fb, 'animationEnd'],
            [gb, 'animationIteration'],
            [hb, 'animationStart'],
            ['canplay', 'canPlay'],
            ['canplaythrough', 'canPlayThrough'],
            ['drag', 'drag'],
            ['dragenter', 'dragEnter'],
            ['dragexit', 'dragExit'],
            ['dragleave', 'dragLeave'],
            ['dragover', 'dragOver'],
            ['durationchange', 'durationChange'],
            ['emptied', 'emptied'],
            ['encrypted', 'encrypted'],
            ['ended', 'ended'],
            ['error', 'error'],
            ['gotpointercapture', 'gotPointerCapture'],
            ['load', 'load'],
            ['loadeddata', 'loadedData'],
            ['loadedmetadata', 'loadedMetadata'],
            ['loadstart', 'loadStart'],
            ['lostpointercapture', 'lostPointerCapture'],
            ['mousemove', 'mouseMove'],
            ['mouseout', 'mouseOut'],
            ['mouseover', 'mouseOver'],
            ['playing', 'playing'],
            ['pointermove', 'pointerMove'],
            ['pointerout', 'pointerOut'],
            ['pointerover', 'pointerOver'],
            ['progress', 'progress'],
            ['scroll', 'scroll'],
            ['seeking', 'seeking'],
            ['stalled', 'stalled'],
            ['suspend', 'suspend'],
            ['timeupdate', 'timeUpdate'],
            ['toggle', 'toggle'],
            ['touchmove', 'touchMove'],
            [ib, 'transitionEnd'],
            ['waiting', 'waiting'],
            ['wheel', 'wheel'],
          ],
          Ad = {},
          Bd = {};
        function Cd(a, b) {
          var c = a[0];
          a = a[1];
          var d = 'on' + (a[0].toUpperCase() + a.slice(1));
          b = {
            phasedRegistrationNames: { bubbled: d, captured: d + 'Capture' },
            dependencies: [c],
            isInteractive: b,
          };
          Ad[a] = b;
          Bd[c] = b;
        }
        [
          ['blur', 'blur'],
          ['cancel', 'cancel'],
          ['click', 'click'],
          ['close', 'close'],
          ['contextmenu', 'contextMenu'],
          ['copy', 'copy'],
          ['cut', 'cut'],
          ['dblclick', 'doubleClick'],
          ['dragend', 'dragEnd'],
          ['dragstart', 'dragStart'],
          ['drop', 'drop'],
          ['focus', 'focus'],
          ['input', 'input'],
          ['invalid', 'invalid'],
          ['keydown', 'keyDown'],
          ['keypress', 'keyPress'],
          ['keyup', 'keyUp'],
          ['mousedown', 'mouseDown'],
          ['mouseup', 'mouseUp'],
          ['paste', 'paste'],
          ['pause', 'pause'],
          ['play', 'play'],
          ['pointercancel', 'pointerCancel'],
          ['pointerdown', 'pointerDown'],
          ['pointerup', 'pointerUp'],
          ['ratechange', 'rateChange'],
          ['reset', 'reset'],
          ['seeked', 'seeked'],
          ['submit', 'submit'],
          ['touchcancel', 'touchCancel'],
          ['touchend', 'touchEnd'],
          ['touchstart', 'touchStart'],
          ['volumechange', 'volumeChange'],
        ].forEach(function(a) {
          Cd(a, !0);
        });
        zd.forEach(function(a) {
          Cd(a, !1);
        });
        var Dd = {
            eventTypes: Ad,
            isInteractiveTopLevelEventType: function(a) {
              a = Bd[a];
              return void 0 !== a && !0 === a.isInteractive;
            },
            extractEvents: function(a, b, c, d) {
              var e = Bd[a];
              if (!e) return null;
              switch (a) {
                case 'keypress':
                  if (0 === rd(c)) return null;
                case 'keydown':
                case 'keyup':
                  a = ud;
                  break;
                case 'blur':
                case 'focus':
                  a = qd;
                  break;
                case 'click':
                  if (2 === c.button) return null;
                case 'dblclick':
                case 'mousedown':
                case 'mousemove':
                case 'mouseup':
                case 'mouseout':
                case 'mouseover':
                case 'contextmenu':
                  a = fd;
                  break;
                case 'drag':
                case 'dragend':
                case 'dragenter':
                case 'dragexit':
                case 'dragleave':
                case 'dragover':
                case 'dragstart':
                case 'drop':
                  a = vd;
                  break;
                case 'touchcancel':
                case 'touchend':
                case 'touchmove':
                case 'touchstart':
                  a = wd;
                  break;
                case fb:
                case gb:
                case hb:
                  a = od;
                  break;
                case ib:
                  a = xd;
                  break;
                case 'scroll':
                  a = bd;
                  break;
                case 'wheel':
                  a = yd;
                  break;
                case 'copy':
                case 'cut':
                case 'paste':
                  a = pd;
                  break;
                case 'gotpointercapture':
                case 'lostpointercapture':
                case 'pointercancel':
                case 'pointerdown':
                case 'pointermove':
                case 'pointerout':
                case 'pointerover':
                case 'pointerup':
                  a = gd;
                  break;
                default:
                  a = H;
              }
              b = a.getPooled(e, b, c, d);
              Ya(b);
              return b;
            },
          },
          Ed = Dd.isInteractiveTopLevelEventType,
          Fd = [];
        function Gd(a) {
          var b = a.targetInst;
          do {
            if (!b) {
              a.ancestors.push(b);
              break;
            }
            var c;
            for (c = b; c.return; ) c = c.return;
            c = 3 !== c.tag ? null : c.stateNode.containerInfo;
            if (!c) break;
            a.ancestors.push(b);
            b = Na(c);
          } while (b);
          for (c = 0; c < a.ancestors.length; c++)
            (b = a.ancestors[c]),
              Ja(a.topLevelType, b, a.nativeEvent, Zb(a.nativeEvent));
        }
        var Hd = !0;
        function Id(a) {
          Hd = !!a;
        }
        function K(a, b) {
          if (!b) return null;
          var c = (Ed(a) ? Kd : Ld).bind(null, a);
          b.addEventListener(a, c, !1);
        }
        function Md(a, b) {
          if (!b) return null;
          var c = (Ed(a) ? Kd : Ld).bind(null, a);
          b.addEventListener(a, c, !0);
        }
        function Kd(a, b) {
          Tb(Ld, a, b);
        }
        function Ld(a, b) {
          if (Hd) {
            var c = Zb(b);
            c = Na(c);
            null === c ||
              'number' !== typeof c.tag ||
              2 === jd(c) ||
              (c = null);
            if (Fd.length) {
              var d = Fd.pop();
              d.topLevelType = a;
              d.nativeEvent = b;
              d.targetInst = c;
              a = d;
            } else
              a = {
                topLevelType: a,
                nativeEvent: b,
                targetInst: c,
                ancestors: [],
              };
            try {
              Wb(Gd, a);
            } finally {
              (a.topLevelType = null),
                (a.nativeEvent = null),
                (a.targetInst = null),
                (a.ancestors.length = 0),
                10 > Fd.length && Fd.push(a);
            }
          }
        }
        var Nd = {
            get _enabled() {
              return Hd;
            },
            setEnabled: Id,
            isEnabled: function() {
              return Hd;
            },
            trapBubbledEvent: K,
            trapCapturedEvent: Md,
            dispatchEvent: Ld,
          },
          Od = {},
          Pd = 0,
          Qd = '_reactListenersID' + ('' + Math.random()).slice(2);
        function Rd(a) {
          Object.prototype.hasOwnProperty.call(a, Qd) ||
            ((a[Qd] = Pd++), (Od[a[Qd]] = {}));
          return Od[a[Qd]];
        }
        function Sd(a) {
          for (; a && a.firstChild; ) a = a.firstChild;
          return a;
        }
        function Td(a, b) {
          var c = Sd(a);
          a = 0;
          for (var d; c; ) {
            if (3 === c.nodeType) {
              d = a + c.textContent.length;
              if (a <= b && d >= b) return { node: c, offset: b - a };
              a = d;
            }
            a: {
              for (; c; ) {
                if (c.nextSibling) {
                  c = c.nextSibling;
                  break a;
                }
                c = c.parentNode;
              }
              c = void 0;
            }
            c = Sd(c);
          }
        }
        function Ud(a) {
          var b = a && a.nodeName && a.nodeName.toLowerCase();
          return (
            b &&
            (('input' === b &&
              ('text' === a.type ||
                'search' === a.type ||
                'tel' === a.type ||
                'url' === a.type ||
                'password' === a.type)) ||
              'textarea' === b ||
              'true' === a.contentEditable)
          );
        }
        var Vd =
            m.canUseDOM &&
            'documentMode' in document &&
            11 >= document.documentMode,
          Wd = {
            select: {
              phasedRegistrationNames: {
                bubbled: 'onSelect',
                captured: 'onSelectCapture',
              },
              dependencies: 'blur contextmenu focus keydown keyup mousedown mouseup selectionchange'.split(
                ' '
              ),
            },
          },
          Xd = null,
          Yd = null,
          Zd = null,
          $d = !1;
        function ae(a, b) {
          if ($d || null == Xd || Xd !== da()) return null;
          var c = Xd;
          'selectionStart' in c && Ud(c)
            ? (c = { start: c.selectionStart, end: c.selectionEnd })
            : window.getSelection
              ? ((c = window.getSelection()),
                (c = {
                  anchorNode: c.anchorNode,
                  anchorOffset: c.anchorOffset,
                  focusNode: c.focusNode,
                  focusOffset: c.focusOffset,
                }))
              : (c = void 0);
          return Zd && ea(Zd, c)
            ? null
            : ((Zd = c),
              (a = H.getPooled(Wd.select, Yd, a, b)),
              (a.type = 'select'),
              (a.target = Xd),
              Ya(a),
              a);
        }
        var be = {
          eventTypes: Wd,
          extractEvents: function(a, b, c, d) {
            var e =
                d.window === d
                  ? d.document
                  : 9 === d.nodeType
                    ? d
                    : d.ownerDocument,
              f;
            if (!(f = !e)) {
              a: {
                e = Rd(e);
                f = sa.onSelect;
                for (var g = 0; g < f.length; g++) {
                  var h = f[g];
                  if (!e.hasOwnProperty(h) || !e[h]) {
                    e = !1;
                    break a;
                  }
                }
                e = !0;
              }
              f = !e;
            }
            if (f) return null;
            e = b ? Oa(b) : window;
            switch (a) {
              case 'focus':
                if (Yb(e) || 'true' === e.contentEditable)
                  (Xd = e), (Yd = b), (Zd = null);
                break;
              case 'blur':
                Zd = Yd = Xd = null;
                break;
              case 'mousedown':
                $d = !0;
                break;
              case 'contextmenu':
              case 'mouseup':
                return ($d = !1), ae(c, d);
              case 'selectionchange':
                if (Vd) break;
              case 'keydown':
              case 'keyup':
                return ae(c, d);
            }
            return null;
          },
        };
        Ga.injectEventPluginOrder(
          'ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin'.split(
            ' '
          )
        );
        wa = Qa.getFiberCurrentPropsFromNode;
        xa = Qa.getInstanceFromNode;
        ya = Qa.getNodeFromInstance;
        Ga.injectEventPluginsByName({
          SimpleEventPlugin: Dd,
          EnterLeaveEventPlugin: id,
          ChangeEventPlugin: ad,
          SelectEventPlugin: be,
          BeforeInputEventPlugin: Ib,
        });
        var ce =
            'function' === typeof requestAnimationFrame
              ? requestAnimationFrame
              : void 0,
          de = Date,
          ee = setTimeout,
          fe = clearTimeout,
          ge = void 0;
        if (
          'object' === typeof performance &&
          'function' === typeof performance.now
        ) {
          var he = performance;
          ge = function() {
            return he.now();
          };
        } else
          ge = function() {
            return de.now();
          };
        var ie = void 0,
          je = void 0;
        if (m.canUseDOM) {
          var ke =
              'function' === typeof ce
                ? ce
                : function() {
                    A('276');
                  },
            L = null,
            le = null,
            me = -1,
            ne = !1,
            oe = !1,
            pe = 0,
            qe = 33,
            re = 33,
            se = {
              didTimeout: !1,
              timeRemaining: function() {
                var a = pe - ge();
                return 0 < a ? a : 0;
              },
            },
            ue = function(a, b) {
              var c = a.scheduledCallback,
                d = !1;
              try {
                c(b), (d = !0);
              } finally {
                je(a), d || ((ne = !0), window.postMessage(te, '*'));
              }
            },
            te =
              '__reactIdleCallback$' +
              Math.random()
                .toString(36)
                .slice(2);
          window.addEventListener(
            'message',
            function(a) {
              if (
                a.source === window &&
                a.data === te &&
                ((ne = !1), null !== L)
              ) {
                if (null !== L) {
                  var b = ge();
                  if (!(-1 === me || me > b)) {
                    a = -1;
                    for (var c = [], d = L; null !== d; ) {
                      var e = d.timeoutTime;
                      -1 !== e && e <= b
                        ? c.push(d)
                        : -1 !== e && (-1 === a || e < a) && (a = e);
                      d = d.next;
                    }
                    if (0 < c.length)
                      for (se.didTimeout = !0, b = 0, d = c.length; b < d; b++)
                        ue(c[b], se);
                    me = a;
                  }
                }
                for (a = ge(); 0 < pe - a && null !== L; )
                  (a = L), (se.didTimeout = !1), ue(a, se), (a = ge());
                null === L || oe || ((oe = !0), ke(ve));
              }
            },
            !1
          );
          var ve = function(a) {
            oe = !1;
            var b = a - pe + re;
            b < re && qe < re
              ? (8 > b && (b = 8), (re = b < qe ? qe : b))
              : (qe = b);
            pe = a + re;
            ne || ((ne = !0), window.postMessage(te, '*'));
          };
          ie = function(a, b) {
            var c = -1;
            null != b &&
              'number' === typeof b.timeout &&
              (c = ge() + b.timeout);
            if (-1 === me || (-1 !== c && c < me)) me = c;
            a = {
              scheduledCallback: a,
              timeoutTime: c,
              prev: null,
              next: null,
            };
            null === L
              ? (L = a)
              : ((b = a.prev = le), null !== b && (b.next = a));
            le = a;
            oe || ((oe = !0), ke(ve));
            return a;
          };
          je = function(a) {
            if (null !== a.prev || L === a) {
              var b = a.next,
                c = a.prev;
              a.next = null;
              a.prev = null;
              null !== b
                ? null !== c
                  ? ((c.next = b), (b.prev = c))
                  : ((b.prev = null), (L = b))
                : null !== c
                  ? ((c.next = null), (le = c))
                  : (le = L = null);
            }
          };
        } else {
          var we = new Map();
          ie = function(a) {
            var b = {
                scheduledCallback: a,
                timeoutTime: 0,
                next: null,
                prev: null,
              },
              c = ee(function() {
                a({
                  timeRemaining: function() {
                    return Infinity;
                  },
                  didTimeout: !1,
                });
              });
            we.set(a, c);
            return b;
          };
          je = function(a) {
            var b = we.get(a.scheduledCallback);
            we.delete(a);
            fe(b);
          };
        }
        function xe(a) {
          var b = '';
          ba.Children.forEach(a, function(a) {
            null == a ||
              ('string' !== typeof a && 'number' !== typeof a) ||
              (b += a);
          });
          return b;
        }
        function ye(a, b) {
          a = p({ children: void 0 }, b);
          if ((b = xe(b.children))) a.children = b;
          return a;
        }
        function ze(a, b, c, d) {
          a = a.options;
          if (b) {
            b = {};
            for (var e = 0; e < c.length; e++) b['$' + c[e]] = !0;
            for (c = 0; c < a.length; c++)
              (e = b.hasOwnProperty('$' + a[c].value)),
                a[c].selected !== e && (a[c].selected = e),
                e && d && (a[c].defaultSelected = !0);
          } else {
            c = '' + c;
            b = null;
            for (e = 0; e < a.length; e++) {
              if (a[e].value === c) {
                a[e].selected = !0;
                d && (a[e].defaultSelected = !0);
                return;
              }
              null !== b || a[e].disabled || (b = a[e]);
            }
            null !== b && (b.selected = !0);
          }
        }
        function Ae(a, b) {
          var c = b.value;
          a._wrapperState = {
            initialValue: null != c ? c : b.defaultValue,
            wasMultiple: !!b.multiple,
          };
        }
        function Be(a, b) {
          null != b.dangerouslySetInnerHTML ? A('91') : void 0;
          return p({}, b, {
            value: void 0,
            defaultValue: void 0,
            children: '' + a._wrapperState.initialValue,
          });
        }
        function Ce(a, b) {
          var c = b.value;
          null == c &&
            ((c = b.defaultValue),
            (b = b.children),
            null != b &&
              (null != c ? A('92') : void 0,
              Array.isArray(b) &&
                (1 >= b.length ? void 0 : A('93'), (b = b[0])),
              (c = '' + b)),
            null == c && (c = ''));
          a._wrapperState = { initialValue: '' + c };
        }
        function De(a, b) {
          var c = b.value;
          null != c &&
            ((c = '' + c),
            c !== a.value && (a.value = c),
            null == b.defaultValue && (a.defaultValue = c));
          null != b.defaultValue && (a.defaultValue = b.defaultValue);
        }
        function Ee(a) {
          var b = a.textContent;
          b === a._wrapperState.initialValue && (a.value = b);
        }
        var Fe = {
          html: 'http://www.w3.org/1999/xhtml',
          mathml: 'http://www.w3.org/1998/Math/MathML',
          svg: 'http://www.w3.org/2000/svg',
        };
        function Ge(a) {
          switch (a) {
            case 'svg':
              return 'http://www.w3.org/2000/svg';
            case 'math':
              return 'http://www.w3.org/1998/Math/MathML';
            default:
              return 'http://www.w3.org/1999/xhtml';
          }
        }
        function He(a, b) {
          return null == a || 'http://www.w3.org/1999/xhtml' === a
            ? Ge(b)
            : 'http://www.w3.org/2000/svg' === a && 'foreignObject' === b
              ? 'http://www.w3.org/1999/xhtml'
              : a;
        }
        var Ie = void 0,
          Je = (function(a) {
            return 'undefined' !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function(b, c, d, e) {
                  MSApp.execUnsafeLocalFunction(function() {
                    return a(b, c, d, e);
                  });
                }
              : a;
          })(function(a, b) {
            if (a.namespaceURI !== Fe.svg || 'innerHTML' in a) a.innerHTML = b;
            else {
              Ie = Ie || document.createElement('div');
              Ie.innerHTML = '<svg>' + b + '</svg>';
              for (b = Ie.firstChild; a.firstChild; )
                a.removeChild(a.firstChild);
              for (; b.firstChild; ) a.appendChild(b.firstChild);
            }
          });
        function Ke(a, b) {
          if (b) {
            var c = a.firstChild;
            if (c && c === a.lastChild && 3 === c.nodeType) {
              c.nodeValue = b;
              return;
            }
          }
          a.textContent = b;
        }
        var Le = {
            animationIterationCount: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          Me = ['Webkit', 'ms', 'Moz', 'O'];
        Object.keys(Le).forEach(function(a) {
          Me.forEach(function(b) {
            b = b + a.charAt(0).toUpperCase() + a.substring(1);
            Le[b] = Le[a];
          });
        });
        function Ne(a, b) {
          a = a.style;
          for (var c in b)
            if (b.hasOwnProperty(c)) {
              var d = 0 === c.indexOf('--');
              var e = c;
              var f = b[c];
              e =
                null == f || 'boolean' === typeof f || '' === f
                  ? ''
                  : d ||
                    'number' !== typeof f ||
                    0 === f ||
                    (Le.hasOwnProperty(e) && Le[e])
                    ? ('' + f).trim()
                    : f + 'px';
              'float' === c && (c = 'cssFloat');
              d ? a.setProperty(c, e) : (a[c] = e);
            }
        }
        var Oe = p(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function Pe(a, b, c) {
          b &&
            (Oe[a] &&
              (null != b.children || null != b.dangerouslySetInnerHTML
                ? A('137', a, c())
                : void 0),
            null != b.dangerouslySetInnerHTML &&
              (null != b.children ? A('60') : void 0,
              'object' === typeof b.dangerouslySetInnerHTML &&
              '__html' in b.dangerouslySetInnerHTML
                ? void 0
                : A('61')),
            null != b.style && 'object' !== typeof b.style
              ? A('62', c())
              : void 0);
        }
        function Qe(a, b) {
          if (-1 === a.indexOf('-')) return 'string' === typeof b.is;
          switch (a) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return !1;
            default:
              return !0;
          }
        }
        var Re = v.thatReturns('');
        function Se(a, b) {
          a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
          var c = Rd(a);
          b = sa[b];
          for (var d = 0; d < b.length; d++) {
            var e = b[d];
            if (!c.hasOwnProperty(e) || !c[e]) {
              switch (e) {
                case 'scroll':
                  Md('scroll', a);
                  break;
                case 'focus':
                case 'blur':
                  Md('focus', a);
                  Md('blur', a);
                  c.blur = !0;
                  c.focus = !0;
                  break;
                case 'cancel':
                case 'close':
                  $b(e, !0) && Md(e, a);
                  break;
                case 'invalid':
                case 'submit':
                case 'reset':
                  break;
                default:
                  -1 === jb.indexOf(e) && K(e, a);
              }
              c[e] = !0;
            }
          }
        }
        function Te(a, b, c, d) {
          c = 9 === c.nodeType ? c : c.ownerDocument;
          d === Fe.html && (d = Ge(a));
          d === Fe.html
            ? 'script' === a
              ? ((a = c.createElement('div')),
                (a.innerHTML = '<script>\x3c/script>'),
                (a = a.removeChild(a.firstChild)))
              : (a =
                  'string' === typeof b.is
                    ? c.createElement(a, { is: b.is })
                    : c.createElement(a))
            : (a = c.createElementNS(d, a));
          return a;
        }
        function Ue(a, b) {
          return (9 === b.nodeType ? b : b.ownerDocument).createTextNode(a);
        }
        function Ve(a, b, c, d) {
          var e = Qe(b, c);
          switch (b) {
            case 'iframe':
            case 'object':
              K('load', a);
              var f = c;
              break;
            case 'video':
            case 'audio':
              for (f = 0; f < jb.length; f++) K(jb[f], a);
              f = c;
              break;
            case 'source':
              K('error', a);
              f = c;
              break;
            case 'img':
            case 'image':
            case 'link':
              K('error', a);
              K('load', a);
              f = c;
              break;
            case 'form':
              K('reset', a);
              K('submit', a);
              f = c;
              break;
            case 'details':
              K('toggle', a);
              f = c;
              break;
            case 'input':
              Hc(a, c);
              f = Gc(a, c);
              K('invalid', a);
              Se(d, 'onChange');
              break;
            case 'option':
              f = ye(a, c);
              break;
            case 'select':
              Ae(a, c);
              f = p({}, c, { value: void 0 });
              K('invalid', a);
              Se(d, 'onChange');
              break;
            case 'textarea':
              Ce(a, c);
              f = Be(a, c);
              K('invalid', a);
              Se(d, 'onChange');
              break;
            default:
              f = c;
          }
          Pe(b, f, Re);
          var g = f,
            h;
          for (h in g)
            if (g.hasOwnProperty(h)) {
              var k = g[h];
              'style' === h
                ? Ne(a, k, Re)
                : 'dangerouslySetInnerHTML' === h
                  ? ((k = k ? k.__html : void 0), null != k && Je(a, k))
                  : 'children' === h
                    ? 'string' === typeof k
                      ? ('textarea' !== b || '' !== k) && Ke(a, k)
                      : 'number' === typeof k && Ke(a, '' + k)
                    : 'suppressContentEditableWarning' !== h &&
                      'suppressHydrationWarning' !== h &&
                      'autoFocus' !== h &&
                      (ra.hasOwnProperty(h)
                        ? null != k && Se(d, h)
                        : null != k && Fc(a, h, k, e));
            }
          switch (b) {
            case 'input':
              cc(a);
              Mc(a, c, !1);
              break;
            case 'textarea':
              cc(a);
              Ee(a, c);
              break;
            case 'option':
              null != c.value && a.setAttribute('value', c.value);
              break;
            case 'select':
              a.multiple = !!c.multiple;
              b = c.value;
              null != b
                ? ze(a, !!c.multiple, b, !1)
                : null != c.defaultValue &&
                  ze(a, !!c.multiple, c.defaultValue, !0);
              break;
            default:
              'function' === typeof f.onClick && (a.onclick = v);
          }
        }
        function We(a, b, c, d, e) {
          var f = null;
          switch (b) {
            case 'input':
              c = Gc(a, c);
              d = Gc(a, d);
              f = [];
              break;
            case 'option':
              c = ye(a, c);
              d = ye(a, d);
              f = [];
              break;
            case 'select':
              c = p({}, c, { value: void 0 });
              d = p({}, d, { value: void 0 });
              f = [];
              break;
            case 'textarea':
              c = Be(a, c);
              d = Be(a, d);
              f = [];
              break;
            default:
              'function' !== typeof c.onClick &&
                'function' === typeof d.onClick &&
                (a.onclick = v);
          }
          Pe(b, d, Re);
          b = a = void 0;
          var g = null;
          for (a in c)
            if (!d.hasOwnProperty(a) && c.hasOwnProperty(a) && null != c[a])
              if ('style' === a) {
                var h = c[a];
                for (b in h)
                  h.hasOwnProperty(b) && (g || (g = {}), (g[b] = ''));
              } else
                'dangerouslySetInnerHTML' !== a &&
                  'children' !== a &&
                  'suppressContentEditableWarning' !== a &&
                  'suppressHydrationWarning' !== a &&
                  'autoFocus' !== a &&
                  (ra.hasOwnProperty(a)
                    ? f || (f = [])
                    : (f = f || []).push(a, null));
          for (a in d) {
            var k = d[a];
            h = null != c ? c[a] : void 0;
            if (d.hasOwnProperty(a) && k !== h && (null != k || null != h))
              if ('style' === a) {
                if (h) {
                  for (b in h)
                    !h.hasOwnProperty(b) ||
                      (k && k.hasOwnProperty(b)) ||
                      (g || (g = {}), (g[b] = ''));
                  for (b in k)
                    k.hasOwnProperty(b) &&
                      h[b] !== k[b] &&
                      (g || (g = {}), (g[b] = k[b]));
                } else g || (f || (f = []), f.push(a, g)), (g = k);
              } else
                'dangerouslySetInnerHTML' === a
                  ? ((k = k ? k.__html : void 0),
                    (h = h ? h.__html : void 0),
                    null != k && h !== k && (f = f || []).push(a, '' + k))
                  : 'children' === a
                    ? h === k ||
                      ('string' !== typeof k && 'number' !== typeof k) ||
                      (f = f || []).push(a, '' + k)
                    : 'suppressContentEditableWarning' !== a &&
                      'suppressHydrationWarning' !== a &&
                      (ra.hasOwnProperty(a)
                        ? (null != k && Se(e, a), f || h === k || (f = []))
                        : (f = f || []).push(a, k));
          }
          g && (f = f || []).push('style', g);
          return f;
        }
        function Xe(a, b, c, d, e) {
          'input' === c && 'radio' === e.type && null != e.name && Jc(a, e);
          Qe(c, d);
          d = Qe(c, e);
          for (var f = 0; f < b.length; f += 2) {
            var g = b[f],
              h = b[f + 1];
            'style' === g
              ? Ne(a, h, Re)
              : 'dangerouslySetInnerHTML' === g
                ? Je(a, h)
                : 'children' === g
                  ? Ke(a, h)
                  : Fc(a, g, h, d);
          }
          switch (c) {
            case 'input':
              Kc(a, e);
              break;
            case 'textarea':
              De(a, e);
              break;
            case 'select':
              (a._wrapperState.initialValue = void 0),
                (b = a._wrapperState.wasMultiple),
                (a._wrapperState.wasMultiple = !!e.multiple),
                (c = e.value),
                null != c
                  ? ze(a, !!e.multiple, c, !1)
                  : b !== !!e.multiple &&
                    (null != e.defaultValue
                      ? ze(a, !!e.multiple, e.defaultValue, !0)
                      : ze(a, !!e.multiple, e.multiple ? [] : '', !1));
          }
        }
        function Ye(a, b, c, d, e) {
          switch (b) {
            case 'iframe':
            case 'object':
              K('load', a);
              break;
            case 'video':
            case 'audio':
              for (d = 0; d < jb.length; d++) K(jb[d], a);
              break;
            case 'source':
              K('error', a);
              break;
            case 'img':
            case 'image':
            case 'link':
              K('error', a);
              K('load', a);
              break;
            case 'form':
              K('reset', a);
              K('submit', a);
              break;
            case 'details':
              K('toggle', a);
              break;
            case 'input':
              Hc(a, c);
              K('invalid', a);
              Se(e, 'onChange');
              break;
            case 'select':
              Ae(a, c);
              K('invalid', a);
              Se(e, 'onChange');
              break;
            case 'textarea':
              Ce(a, c), K('invalid', a), Se(e, 'onChange');
          }
          Pe(b, c, Re);
          d = null;
          for (var f in c)
            if (c.hasOwnProperty(f)) {
              var g = c[f];
              'children' === f
                ? 'string' === typeof g
                  ? a.textContent !== g && (d = ['children', g])
                  : 'number' === typeof g &&
                    a.textContent !== '' + g &&
                    (d = ['children', '' + g])
                : ra.hasOwnProperty(f) && null != g && Se(e, f);
            }
          switch (b) {
            case 'input':
              cc(a);
              Mc(a, c, !0);
              break;
            case 'textarea':
              cc(a);
              Ee(a, c);
              break;
            case 'select':
            case 'option':
              break;
            default:
              'function' === typeof c.onClick && (a.onclick = v);
          }
          return d;
        }
        function Ze(a, b) {
          return a.nodeValue !== b;
        }
        var $e = {
            createElement: Te,
            createTextNode: Ue,
            setInitialProperties: Ve,
            diffProperties: We,
            updateProperties: Xe,
            diffHydratedProperties: Ye,
            diffHydratedText: Ze,
            warnForUnmatchedText: function() {},
            warnForDeletedHydratableElement: function() {},
            warnForDeletedHydratableText: function() {},
            warnForInsertedHydratedElement: function() {},
            warnForInsertedHydratedText: function() {},
            restoreControlledState: function(a, b, c) {
              switch (b) {
                case 'input':
                  Kc(a, c);
                  b = c.name;
                  if ('radio' === c.type && null != b) {
                    for (c = a; c.parentNode; ) c = c.parentNode;
                    c = c.querySelectorAll(
                      'input[name=' + JSON.stringify('' + b) + '][type="radio"]'
                    );
                    for (b = 0; b < c.length; b++) {
                      var d = c[b];
                      if (d !== a && d.form === a.form) {
                        var e = Pa(d);
                        e ? void 0 : A('90');
                        dc(d);
                        Kc(d, e);
                      }
                    }
                  }
                  break;
                case 'textarea':
                  De(a, c);
                  break;
                case 'select':
                  (b = c.value), null != b && ze(a, !!c.multiple, b, !1);
              }
            },
          },
          af = null,
          bf = null;
        function cf(a, b) {
          switch (a) {
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
              return !!b.autoFocus;
          }
          return !1;
        }
        function df(a, b) {
          return (
            'textarea' === a ||
            'string' === typeof b.children ||
            'number' === typeof b.children ||
            ('object' === typeof b.dangerouslySetInnerHTML &&
              null !== b.dangerouslySetInnerHTML &&
              'string' === typeof b.dangerouslySetInnerHTML.__html)
          );
        }
        var ef = ge,
          ff = ie,
          gf = je;
        function hf(a) {
          for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType; )
            a = a.nextSibling;
          return a;
        }
        function jf(a) {
          for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType; )
            a = a.nextSibling;
          return a;
        }
        new Set();
        var kf = [],
          lf = -1;
        function mf(a) {
          return { current: a };
        }
        function M(a) {
          0 > lf || ((a.current = kf[lf]), (kf[lf] = null), lf--);
        }
        function N(a, b) {
          lf++;
          kf[lf] = a.current;
          a.current = b;
        }
        var nf = mf(ha),
          O = mf(!1),
          of = ha;
        function pf(a) {
          return qf(a) ? of : nf.current;
        }
        function rf(a, b) {
          var c = a.type.contextTypes;
          if (!c) return ha;
          var d = a.stateNode;
          if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
            return d.__reactInternalMemoizedMaskedChildContext;
          var e = {},
            f;
          for (f in c) e[f] = b[f];
          d &&
            ((a = a.stateNode),
            (a.__reactInternalMemoizedUnmaskedChildContext = b),
            (a.__reactInternalMemoizedMaskedChildContext = e));
          return e;
        }
        function qf(a) {
          return 2 === a.tag && null != a.type.childContextTypes;
        }
        function sf(a) {
          qf(a) && (M(O, a), M(nf, a));
        }
        function tf(a) {
          M(O, a);
          M(nf, a);
        }
        function uf(a, b, c) {
          nf.current !== ha ? A('168') : void 0;
          N(nf, b, a);
          N(O, c, a);
        }
        function vf(a, b) {
          var c = a.stateNode,
            d = a.type.childContextTypes;
          if ('function' !== typeof c.getChildContext) return b;
          c = c.getChildContext();
          for (var e in c) e in d ? void 0 : A('108', uc(a) || 'Unknown', e);
          return p({}, b, c);
        }
        function wf(a) {
          if (!qf(a)) return !1;
          var b = a.stateNode;
          b = (b && b.__reactInternalMemoizedMergedChildContext) || ha;
          of = nf.current;
          N(nf, b, a);
          N(O, O.current, a);
          return !0;
        }
        function xf(a, b) {
          var c = a.stateNode;
          c ? void 0 : A('169');
          if (b) {
            var d = vf(a, of);
            c.__reactInternalMemoizedMergedChildContext = d;
            M(O, a);
            M(nf, a);
            N(nf, d, a);
          } else M(O, a);
          N(O, b, a);
        }
        function yf(a, b, c, d) {
          this.tag = a;
          this.key = c;
          this.sibling = this.child = this.return = this.stateNode = this.type = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = b;
          this.memoizedState = this.updateQueue = this.memoizedProps = null;
          this.mode = d;
          this.effectTag = 0;
          this.lastEffect = this.firstEffect = this.nextEffect = null;
          this.expirationTime = 0;
          this.alternate = null;
        }
        function zf(a, b, c) {
          var d = a.alternate;
          null === d
            ? ((d = new yf(a.tag, b, a.key, a.mode)),
              (d.type = a.type),
              (d.stateNode = a.stateNode),
              (d.alternate = a),
              (a.alternate = d))
            : ((d.pendingProps = b),
              (d.effectTag = 0),
              (d.nextEffect = null),
              (d.firstEffect = null),
              (d.lastEffect = null));
          d.expirationTime = c;
          d.child = a.child;
          d.memoizedProps = a.memoizedProps;
          d.memoizedState = a.memoizedState;
          d.updateQueue = a.updateQueue;
          d.sibling = a.sibling;
          d.index = a.index;
          d.ref = a.ref;
          return d;
        }
        function Af(a, b, c) {
          var d = a.type,
            e = a.key;
          a = a.props;
          if ('function' === typeof d)
            var f = d.prototype && d.prototype.isReactComponent ? 2 : 0;
          else if ('string' === typeof d) f = 5;
          else
            switch (d) {
              case ic:
                return Bf(a.children, b, c, e);
              case pc:
                f = 11;
                b |= 3;
                break;
              case jc:
                f = 11;
                b |= 2;
                break;
              case kc:
                return (
                  (d = new yf(15, a, e, b | 4)),
                  (d.type = kc),
                  (d.expirationTime = c),
                  d
                );
              case rc:
                f = 16;
                b |= 2;
                break;
              default:
                a: {
                  switch (
                    'object' === typeof d && null !== d ? d.$$typeof : null
                  ) {
                    case lc:
                      f = 13;
                      break a;
                    case mc:
                      f = 12;
                      break a;
                    case qc:
                      f = 14;
                      break a;
                    default:
                      A('130', null == d ? d : typeof d, '');
                  }
                  f = void 0;
                }
            }
          b = new yf(f, a, e, b);
          b.type = d;
          b.expirationTime = c;
          return b;
        }
        function Bf(a, b, c, d) {
          a = new yf(10, a, d, b);
          a.expirationTime = c;
          return a;
        }
        function Cf(a, b, c) {
          a = new yf(6, a, null, b);
          a.expirationTime = c;
          return a;
        }
        function Df(a, b, c) {
          b = new yf(4, null !== a.children ? a.children : [], a.key, b);
          b.expirationTime = c;
          b.stateNode = {
            containerInfo: a.containerInfo,
            pendingChildren: null,
            implementation: a.implementation,
          };
          return b;
        }
        function Ef(a, b, c) {
          b = new yf(3, null, null, b ? 3 : 0);
          a = {
            current: b,
            containerInfo: a,
            pendingChildren: null,
            earliestPendingTime: 0,
            latestPendingTime: 0,
            earliestSuspendedTime: 0,
            latestSuspendedTime: 0,
            latestPingedTime: 0,
            pendingCommitExpirationTime: 0,
            finishedWork: null,
            context: null,
            pendingContext: null,
            hydrate: c,
            remainingExpirationTime: 0,
            firstBatch: null,
            nextScheduledRoot: null,
          };
          return (b.stateNode = a);
        }
        var Ff = null,
          Gf = null;
        function Hf(a) {
          return function(b) {
            try {
              return a(b);
            } catch (c) {}
          };
        }
        function If(a) {
          if ('undefined' === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
          var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (b.isDisabled || !b.supportsFiber) return !0;
          try {
            var c = b.inject(a);
            Ff = Hf(function(a) {
              return b.onCommitFiberRoot(c, a);
            });
            Gf = Hf(function(a) {
              return b.onCommitFiberUnmount(c, a);
            });
          } catch (d) {}
          return !0;
        }
        function Jf(a) {
          'function' === typeof Ff && Ff(a);
        }
        function Kf(a) {
          'function' === typeof Gf && Gf(a);
        }
        var Lf = !1;
        function Mf(a) {
          return {
            expirationTime: 0,
            baseState: a,
            firstUpdate: null,
            lastUpdate: null,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null,
          };
        }
        function Nf(a) {
          return {
            expirationTime: a.expirationTime,
            baseState: a.baseState,
            firstUpdate: a.firstUpdate,
            lastUpdate: a.lastUpdate,
            firstCapturedUpdate: null,
            lastCapturedUpdate: null,
            firstEffect: null,
            lastEffect: null,
            firstCapturedEffect: null,
            lastCapturedEffect: null,
          };
        }
        function Of(a) {
          return {
            expirationTime: a,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
            nextEffect: null,
          };
        }
        function Pf(a, b, c) {
          null === a.lastUpdate
            ? (a.firstUpdate = a.lastUpdate = b)
            : ((a.lastUpdate.next = b), (a.lastUpdate = b));
          if (0 === a.expirationTime || a.expirationTime > c)
            a.expirationTime = c;
        }
        function Qf(a, b, c) {
          var d = a.alternate;
          if (null === d) {
            var e = a.updateQueue;
            var f = null;
            null === e && (e = a.updateQueue = Mf(a.memoizedState));
          } else
            (e = a.updateQueue),
              (f = d.updateQueue),
              null === e
                ? null === f
                  ? ((e = a.updateQueue = Mf(a.memoizedState)),
                    (f = d.updateQueue = Mf(d.memoizedState)))
                  : (e = a.updateQueue = Nf(f))
                : null === f && (f = d.updateQueue = Nf(e));
          null === f || e === f
            ? Pf(e, b, c)
            : null === e.lastUpdate || null === f.lastUpdate
              ? (Pf(e, b, c), Pf(f, b, c))
              : (Pf(e, b, c), (f.lastUpdate = b));
        }
        function Rf(a, b, c) {
          var d = a.updateQueue;
          d = null === d ? (a.updateQueue = Mf(a.memoizedState)) : Sf(a, d);
          null === d.lastCapturedUpdate
            ? (d.firstCapturedUpdate = d.lastCapturedUpdate = b)
            : ((d.lastCapturedUpdate.next = b), (d.lastCapturedUpdate = b));
          if (0 === d.expirationTime || d.expirationTime > c)
            d.expirationTime = c;
        }
        function Sf(a, b) {
          var c = a.alternate;
          null !== c && b === c.updateQueue && (b = a.updateQueue = Nf(b));
          return b;
        }
        function Tf(a, b, c, d, e, f) {
          switch (c.tag) {
            case 1:
              return (
                (a = c.payload), 'function' === typeof a ? a.call(f, d, e) : a
              );
            case 3:
              a.effectTag = (a.effectTag & -1025) | 64;
            case 0:
              a = c.payload;
              e = 'function' === typeof a ? a.call(f, d, e) : a;
              if (null === e || void 0 === e) break;
              return p({}, d, e);
            case 2:
              Lf = !0;
          }
          return d;
        }
        function Uf(a, b, c, d, e) {
          Lf = !1;
          if (!(0 === b.expirationTime || b.expirationTime > e)) {
            b = Sf(a, b);
            for (
              var f = b.baseState, g = null, h = 0, k = b.firstUpdate, n = f;
              null !== k;

            ) {
              var r = k.expirationTime;
              if (r > e) {
                if ((null === g && ((g = k), (f = n)), 0 === h || h > r)) h = r;
              } else
                (n = Tf(a, b, k, n, c, d)),
                  null !== k.callback &&
                    ((a.effectTag |= 32),
                    (k.nextEffect = null),
                    null === b.lastEffect
                      ? (b.firstEffect = b.lastEffect = k)
                      : ((b.lastEffect.nextEffect = k), (b.lastEffect = k)));
              k = k.next;
            }
            r = null;
            for (k = b.firstCapturedUpdate; null !== k; ) {
              var w = k.expirationTime;
              if (w > e) {
                if (
                  (null === r && ((r = k), null === g && (f = n)),
                  0 === h || h > w)
                )
                  h = w;
              } else
                (n = Tf(a, b, k, n, c, d)),
                  null !== k.callback &&
                    ((a.effectTag |= 32),
                    (k.nextEffect = null),
                    null === b.lastCapturedEffect
                      ? (b.firstCapturedEffect = b.lastCapturedEffect = k)
                      : ((b.lastCapturedEffect.nextEffect = k),
                        (b.lastCapturedEffect = k)));
              k = k.next;
            }
            null === g && (b.lastUpdate = null);
            null === r ? (b.lastCapturedUpdate = null) : (a.effectTag |= 32);
            null === g && null === r && (f = n);
            b.baseState = f;
            b.firstUpdate = g;
            b.firstCapturedUpdate = r;
            b.expirationTime = h;
            a.memoizedState = n;
          }
        }
        function Vf(a, b) {
          'function' !== typeof a ? A('191', a) : void 0;
          a.call(b);
        }
        function Wf(a, b, c) {
          null !== b.firstCapturedUpdate &&
            (null !== b.lastUpdate &&
              ((b.lastUpdate.next = b.firstCapturedUpdate),
              (b.lastUpdate = b.lastCapturedUpdate)),
            (b.firstCapturedUpdate = b.lastCapturedUpdate = null));
          a = b.firstEffect;
          for (b.firstEffect = b.lastEffect = null; null !== a; ) {
            var d = a.callback;
            null !== d && ((a.callback = null), Vf(d, c));
            a = a.nextEffect;
          }
          a = b.firstCapturedEffect;
          for (
            b.firstCapturedEffect = b.lastCapturedEffect = null;
            null !== a;

          )
            (b = a.callback),
              null !== b && ((a.callback = null), Vf(b, c)),
              (a = a.nextEffect);
        }
        function Xf(a, b) {
          return { value: a, source: b, stack: vc(b) };
        }
        var Yf = mf(null),
          Zf = mf(null),
          $f = mf(0);
        function ag(a) {
          var b = a.type._context;
          N($f, b._changedBits, a);
          N(Zf, b._currentValue, a);
          N(Yf, a, a);
          b._currentValue = a.pendingProps.value;
          b._changedBits = a.stateNode;
        }
        function bg(a) {
          var b = $f.current,
            c = Zf.current;
          M(Yf, a);
          M(Zf, a);
          M($f, a);
          a = a.type._context;
          a._currentValue = c;
          a._changedBits = b;
        }
        var cg = {},
          dg = mf(cg),
          eg = mf(cg),
          fg = mf(cg);
        function gg(a) {
          a === cg ? A('174') : void 0;
          return a;
        }
        function ig(a, b) {
          N(fg, b, a);
          N(eg, a, a);
          N(dg, cg, a);
          var c = b.nodeType;
          switch (c) {
            case 9:
            case 11:
              b = (b = b.documentElement) ? b.namespaceURI : He(null, '');
              break;
            default:
              (c = 8 === c ? b.parentNode : b),
                (b = c.namespaceURI || null),
                (c = c.tagName),
                (b = He(b, c));
          }
          M(dg, a);
          N(dg, b, a);
        }
        function jg(a) {
          M(dg, a);
          M(eg, a);
          M(fg, a);
        }
        function kg(a) {
          eg.current === a && (M(dg, a), M(eg, a));
        }
        function lg(a, b, c) {
          var d = a.memoizedState;
          b = b(c, d);
          d = null === b || void 0 === b ? d : p({}, d, b);
          a.memoizedState = d;
          a = a.updateQueue;
          null !== a && 0 === a.expirationTime && (a.baseState = d);
        }
        var pg = {
          isMounted: function(a) {
            return (a = a._reactInternalFiber) ? 2 === jd(a) : !1;
          },
          enqueueSetState: function(a, b, c) {
            a = a._reactInternalFiber;
            var d = mg();
            d = ng(d, a);
            var e = Of(d);
            e.payload = b;
            void 0 !== c && null !== c && (e.callback = c);
            Qf(a, e, d);
            og(a, d);
          },
          enqueueReplaceState: function(a, b, c) {
            a = a._reactInternalFiber;
            var d = mg();
            d = ng(d, a);
            var e = Of(d);
            e.tag = 1;
            e.payload = b;
            void 0 !== c && null !== c && (e.callback = c);
            Qf(a, e, d);
            og(a, d);
          },
          enqueueForceUpdate: function(a, b) {
            a = a._reactInternalFiber;
            var c = mg();
            c = ng(c, a);
            var d = Of(c);
            d.tag = 2;
            void 0 !== b && null !== b && (d.callback = b);
            Qf(a, d, c);
            og(a, c);
          },
        };
        function qg(a, b, c, d, e, f) {
          var g = a.stateNode;
          a = a.type;
          return 'function' === typeof g.shouldComponentUpdate
            ? g.shouldComponentUpdate(c, e, f)
            : a.prototype && a.prototype.isPureReactComponent
              ? !ea(b, c) || !ea(d, e)
              : !0;
        }
        function rg(a, b, c, d) {
          a = b.state;
          'function' === typeof b.componentWillReceiveProps &&
            b.componentWillReceiveProps(c, d);
          'function' === typeof b.UNSAFE_componentWillReceiveProps &&
            b.UNSAFE_componentWillReceiveProps(c, d);
          b.state !== a && pg.enqueueReplaceState(b, b.state, null);
        }
        function sg(a, b) {
          var c = a.type,
            d = a.stateNode,
            e = a.pendingProps,
            f = pf(a);
          d.props = e;
          d.state = a.memoizedState;
          d.refs = ha;
          d.context = rf(a, f);
          f = a.updateQueue;
          null !== f && (Uf(a, f, e, d, b), (d.state = a.memoizedState));
          f = a.type.getDerivedStateFromProps;
          'function' === typeof f && (lg(a, f, e), (d.state = a.memoizedState));
          'function' === typeof c.getDerivedStateFromProps ||
            'function' === typeof d.getSnapshotBeforeUpdate ||
            ('function' !== typeof d.UNSAFE_componentWillMount &&
              'function' !== typeof d.componentWillMount) ||
            ((c = d.state),
            'function' === typeof d.componentWillMount &&
              d.componentWillMount(),
            'function' === typeof d.UNSAFE_componentWillMount &&
              d.UNSAFE_componentWillMount(),
            c !== d.state && pg.enqueueReplaceState(d, d.state, null),
            (f = a.updateQueue),
            null !== f && (Uf(a, f, e, d, b), (d.state = a.memoizedState)));
          'function' === typeof d.componentDidMount && (a.effectTag |= 4);
        }
        var tg = Array.isArray;
        function ug(a, b, c) {
          a = c.ref;
          if (null !== a && 'function' !== typeof a && 'object' !== typeof a) {
            if (c._owner) {
              c = c._owner;
              var d = void 0;
              c && (2 !== c.tag ? A('110') : void 0, (d = c.stateNode));
              d ? void 0 : A('147', a);
              var e = '' + a;
              if (
                null !== b &&
                null !== b.ref &&
                'function' === typeof b.ref &&
                b.ref._stringRef === e
              )
                return b.ref;
              b = function(a) {
                var b = d.refs === ha ? (d.refs = {}) : d.refs;
                null === a ? delete b[e] : (b[e] = a);
              };
              b._stringRef = e;
              return b;
            }
            'string' !== typeof a ? A('148') : void 0;
            c._owner ? void 0 : A('254', a);
          }
          return a;
        }
        function vg(a, b) {
          'textarea' !== a.type &&
            A(
              '31',
              '[object Object]' === Object.prototype.toString.call(b)
                ? 'object with keys {' + Object.keys(b).join(', ') + '}'
                : b,
              ''
            );
        }
        function wg(a) {
          function b(b, c) {
            if (a) {
              var d = b.lastEffect;
              null !== d
                ? ((d.nextEffect = c), (b.lastEffect = c))
                : (b.firstEffect = b.lastEffect = c);
              c.nextEffect = null;
              c.effectTag = 8;
            }
          }
          function c(c, d) {
            if (!a) return null;
            for (; null !== d; ) b(c, d), (d = d.sibling);
            return null;
          }
          function d(a, b) {
            for (a = new Map(); null !== b; )
              null !== b.key ? a.set(b.key, b) : a.set(b.index, b),
                (b = b.sibling);
            return a;
          }
          function e(a, b, c) {
            a = zf(a, b, c);
            a.index = 0;
            a.sibling = null;
            return a;
          }
          function f(b, c, d) {
            b.index = d;
            if (!a) return c;
            d = b.alternate;
            if (null !== d)
              return (d = d.index), d < c ? ((b.effectTag = 2), c) : d;
            b.effectTag = 2;
            return c;
          }
          function g(b) {
            a && null === b.alternate && (b.effectTag = 2);
            return b;
          }
          function h(a, b, c, d) {
            if (null === b || 6 !== b.tag)
              return (b = Cf(c, a.mode, d)), (b.return = a), b;
            b = e(b, c, d);
            b.return = a;
            return b;
          }
          function k(a, b, c, d) {
            if (null !== b && b.type === c.type)
              return (
                (d = e(b, c.props, d)), (d.ref = ug(a, b, c)), (d.return = a), d
              );
            d = Af(c, a.mode, d);
            d.ref = ug(a, b, c);
            d.return = a;
            return d;
          }
          function n(a, b, c, d) {
            if (
              null === b ||
              4 !== b.tag ||
              b.stateNode.containerInfo !== c.containerInfo ||
              b.stateNode.implementation !== c.implementation
            )
              return (b = Df(c, a.mode, d)), (b.return = a), b;
            b = e(b, c.children || [], d);
            b.return = a;
            return b;
          }
          function r(a, b, c, d, f) {
            if (null === b || 10 !== b.tag)
              return (b = Bf(c, a.mode, d, f)), (b.return = a), b;
            b = e(b, c, d);
            b.return = a;
            return b;
          }
          function w(a, b, c) {
            if ('string' === typeof b || 'number' === typeof b)
              return (b = Cf('' + b, a.mode, c)), (b.return = a), b;
            if ('object' === typeof b && null !== b) {
              switch (b.$$typeof) {
                case gc:
                  return (
                    (c = Af(b, a.mode, c)),
                    (c.ref = ug(a, null, b)),
                    (c.return = a),
                    c
                  );
                case hc:
                  return (b = Df(b, a.mode, c)), (b.return = a), b;
              }
              if (tg(b) || tc(b))
                return (b = Bf(b, a.mode, c, null)), (b.return = a), b;
              vg(a, b);
            }
            return null;
          }
          function P(a, b, c, d) {
            var e = null !== b ? b.key : null;
            if ('string' === typeof c || 'number' === typeof c)
              return null !== e ? null : h(a, b, '' + c, d);
            if ('object' === typeof c && null !== c) {
              switch (c.$$typeof) {
                case gc:
                  return c.key === e
                    ? c.type === ic
                      ? r(a, b, c.props.children, d, e)
                      : k(a, b, c, d)
                    : null;
                case hc:
                  return c.key === e ? n(a, b, c, d) : null;
              }
              if (tg(c) || tc(c))
                return null !== e ? null : r(a, b, c, d, null);
              vg(a, c);
            }
            return null;
          }
          function nc(a, b, c, d, e) {
            if ('string' === typeof d || 'number' === typeof d)
              return (a = a.get(c) || null), h(b, a, '' + d, e);
            if ('object' === typeof d && null !== d) {
              switch (d.$$typeof) {
                case gc:
                  return (
                    (a = a.get(null === d.key ? c : d.key) || null),
                    d.type === ic
                      ? r(b, a, d.props.children, e, d.key)
                      : k(b, a, d, e)
                  );
                case hc:
                  return (
                    (a = a.get(null === d.key ? c : d.key) || null),
                    n(b, a, d, e)
                  );
              }
              if (tg(d) || tc(d))
                return (a = a.get(c) || null), r(b, a, d, e, null);
              vg(b, d);
            }
            return null;
          }
          function Jd(e, g, h, k) {
            for (
              var u = null, x = null, t = g, q = (g = 0), n = null;
              null !== t && q < h.length;
              q++
            ) {
              t.index > q ? ((n = t), (t = null)) : (n = t.sibling);
              var l = P(e, t, h[q], k);
              if (null === l) {
                null === t && (t = n);
                break;
              }
              a && t && null === l.alternate && b(e, t);
              g = f(l, g, q);
              null === x ? (u = l) : (x.sibling = l);
              x = l;
              t = n;
            }
            if (q === h.length) return c(e, t), u;
            if (null === t) {
              for (; q < h.length; q++)
                if ((t = w(e, h[q], k)))
                  (g = f(t, g, q)),
                    null === x ? (u = t) : (x.sibling = t),
                    (x = t);
              return u;
            }
            for (t = d(e, t); q < h.length; q++)
              if ((n = nc(t, e, q, h[q], k)))
                a &&
                  null !== n.alternate &&
                  t.delete(null === n.key ? q : n.key),
                  (g = f(n, g, q)),
                  null === x ? (u = n) : (x.sibling = n),
                  (x = n);
            a &&
              t.forEach(function(a) {
                return b(e, a);
              });
            return u;
          }
          function E(e, g, h, k) {
            var u = tc(h);
            'function' !== typeof u ? A('150') : void 0;
            h = u.call(h);
            null == h ? A('151') : void 0;
            for (
              var t = (u = null), n = g, x = (g = 0), y = null, l = h.next();
              null !== n && !l.done;
              x++, l = h.next()
            ) {
              n.index > x ? ((y = n), (n = null)) : (y = n.sibling);
              var r = P(e, n, l.value, k);
              if (null === r) {
                n || (n = y);
                break;
              }
              a && n && null === r.alternate && b(e, n);
              g = f(r, g, x);
              null === t ? (u = r) : (t.sibling = r);
              t = r;
              n = y;
            }
            if (l.done) return c(e, n), u;
            if (null === n) {
              for (; !l.done; x++, l = h.next())
                (l = w(e, l.value, k)),
                  null !== l &&
                    ((g = f(l, g, x)),
                    null === t ? (u = l) : (t.sibling = l),
                    (t = l));
              return u;
            }
            for (n = d(e, n); !l.done; x++, l = h.next())
              (l = nc(n, e, x, l.value, k)),
                null !== l &&
                  (a &&
                    null !== l.alternate &&
                    n.delete(null === l.key ? x : l.key),
                  (g = f(l, g, x)),
                  null === t ? (u = l) : (t.sibling = l),
                  (t = l));
            a &&
              n.forEach(function(a) {
                return b(e, a);
              });
            return u;
          }
          return function(a, d, f, h) {
            var k =
              'object' === typeof f &&
              null !== f &&
              f.type === ic &&
              null === f.key;
            k && (f = f.props.children);
            var n = 'object' === typeof f && null !== f;
            if (n)
              switch (f.$$typeof) {
                case gc:
                  a: {
                    n = f.key;
                    for (k = d; null !== k; ) {
                      if (k.key === n) {
                        if (10 === k.tag ? f.type === ic : k.type === f.type) {
                          c(a, k.sibling);
                          d = e(
                            k,
                            f.type === ic ? f.props.children : f.props,
                            h
                          );
                          d.ref = ug(a, k, f);
                          d.return = a;
                          a = d;
                          break a;
                        } else {
                          c(a, k);
                          break;
                        }
                      } else b(a, k);
                      k = k.sibling;
                    }
                    f.type === ic
                      ? ((d = Bf(f.props.children, a.mode, h, f.key)),
                        (d.return = a),
                        (a = d))
                      : ((h = Af(f, a.mode, h)),
                        (h.ref = ug(a, d, f)),
                        (h.return = a),
                        (a = h));
                  }
                  return g(a);
                case hc:
                  a: {
                    for (k = f.key; null !== d; ) {
                      if (d.key === k) {
                        if (
                          4 === d.tag &&
                          d.stateNode.containerInfo === f.containerInfo &&
                          d.stateNode.implementation === f.implementation
                        ) {
                          c(a, d.sibling);
                          d = e(d, f.children || [], h);
                          d.return = a;
                          a = d;
                          break a;
                        } else {
                          c(a, d);
                          break;
                        }
                      } else b(a, d);
                      d = d.sibling;
                    }
                    d = Df(f, a.mode, h);
                    d.return = a;
                    a = d;
                  }
                  return g(a);
              }
            if ('string' === typeof f || 'number' === typeof f)
              return (
                (f = '' + f),
                null !== d && 6 === d.tag
                  ? (c(a, d.sibling), (d = e(d, f, h)), (d.return = a), (a = d))
                  : (c(a, d), (d = Cf(f, a.mode, h)), (d.return = a), (a = d)),
                g(a)
              );
            if (tg(f)) return Jd(a, d, f, h);
            if (tc(f)) return E(a, d, f, h);
            n && vg(a, f);
            if ('undefined' === typeof f && !k)
              switch (a.tag) {
                case 2:
                case 1:
                  (h = a.type),
                    A('152', h.displayName || h.name || 'Component');
              }
            return c(a, d);
          };
        }
        var xg = wg(!0),
          yg = wg(!1),
          zg = null,
          Ag = null,
          Bg = !1;
        function Cg(a, b) {
          var c = new yf(5, null, null, 0);
          c.type = 'DELETED';
          c.stateNode = b;
          c.return = a;
          c.effectTag = 8;
          null !== a.lastEffect
            ? ((a.lastEffect.nextEffect = c), (a.lastEffect = c))
            : (a.firstEffect = a.lastEffect = c);
        }
        function Dg(a, b) {
          switch (a.tag) {
            case 5:
              var c = a.type;
              b =
                1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase()
                  ? null
                  : b;
              return null !== b ? ((a.stateNode = b), !0) : !1;
            case 6:
              return (
                (b = '' === a.pendingProps || 3 !== b.nodeType ? null : b),
                null !== b ? ((a.stateNode = b), !0) : !1
              );
            default:
              return !1;
          }
        }
        function Eg(a) {
          if (Bg) {
            var b = Ag;
            if (b) {
              var c = b;
              if (!Dg(a, b)) {
                b = hf(c);
                if (!b || !Dg(a, b)) {
                  a.effectTag |= 2;
                  Bg = !1;
                  zg = a;
                  return;
                }
                Cg(zg, c);
              }
              zg = a;
              Ag = jf(b);
            } else (a.effectTag |= 2), (Bg = !1), (zg = a);
          }
        }
        function Fg(a) {
          for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag; )
            a = a.return;
          zg = a;
        }
        function Gg(a) {
          if (a !== zg) return !1;
          if (!Bg) return Fg(a), (Bg = !0), !1;
          var b = a.type;
          if (
            5 !== a.tag ||
            ('head' !== b && 'body' !== b && !df(b, a.memoizedProps))
          )
            for (b = Ag; b; ) Cg(a, b), (b = hf(b));
          Fg(a);
          Ag = zg ? hf(a.stateNode) : null;
          return !0;
        }
        function Hg() {
          Ag = zg = null;
          Bg = !1;
        }
        function Q(a, b, c) {
          Ig(a, b, c, b.expirationTime);
        }
        function Ig(a, b, c, d) {
          b.child = null === a ? yg(b, null, c, d) : xg(b, a.child, c, d);
        }
        function Jg(a, b) {
          var c = b.ref;
          if ((null === a && null !== c) || (null !== a && a.ref !== c))
            b.effectTag |= 128;
        }
        function Kg(a, b, c, d, e) {
          Jg(a, b);
          var f = 0 !== (b.effectTag & 64);
          if (!c && !f) return d && xf(b, !1), R(a, b);
          c = b.stateNode;
          ec.current = b;
          var g = f ? null : c.render();
          b.effectTag |= 1;
          f && (Ig(a, b, null, e), (b.child = null));
          Ig(a, b, g, e);
          b.memoizedState = c.state;
          b.memoizedProps = c.props;
          d && xf(b, !0);
          return b.child;
        }
        function Lg(a) {
          var b = a.stateNode;
          b.pendingContext
            ? uf(a, b.pendingContext, b.pendingContext !== b.context)
            : b.context && uf(a, b.context, !1);
          ig(a, b.containerInfo);
        }
        function Mg(a, b, c, d) {
          var e = a.child;
          null !== e && (e.return = a);
          for (; null !== e; ) {
            switch (e.tag) {
              case 12:
                var f = e.stateNode | 0;
                if (e.type === b && 0 !== (f & c)) {
                  for (f = e; null !== f; ) {
                    var g = f.alternate;
                    if (0 === f.expirationTime || f.expirationTime > d)
                      (f.expirationTime = d),
                        null !== g &&
                          (0 === g.expirationTime || g.expirationTime > d) &&
                          (g.expirationTime = d);
                    else if (
                      null !== g &&
                      (0 === g.expirationTime || g.expirationTime > d)
                    )
                      g.expirationTime = d;
                    else break;
                    f = f.return;
                  }
                  f = null;
                } else f = e.child;
                break;
              case 13:
                f = e.type === a.type ? null : e.child;
                break;
              default:
                f = e.child;
            }
            if (null !== f) f.return = e;
            else
              for (f = e; null !== f; ) {
                if (f === a) {
                  f = null;
                  break;
                }
                e = f.sibling;
                if (null !== e) {
                  e.return = f.return;
                  f = e;
                  break;
                }
                f = f.return;
              }
            e = f;
          }
        }
        function Qg(a, b, c) {
          var d = b.type._context,
            e = b.pendingProps,
            f = b.memoizedProps,
            g = !0;
          if (O.current) g = !1;
          else if (f === e) return (b.stateNode = 0), ag(b), R(a, b);
          var h = e.value;
          b.memoizedProps = e;
          if (null === f) h = 1073741823;
          else if (f.value === e.value) {
            if (f.children === e.children && g)
              return (b.stateNode = 0), ag(b), R(a, b);
            h = 0;
          } else {
            var k = f.value;
            if (
              (k === h && (0 !== k || 1 / k === 1 / h)) ||
              (k !== k && h !== h)
            ) {
              if (f.children === e.children && g)
                return (b.stateNode = 0), ag(b), R(a, b);
              h = 0;
            } else if (
              ((h =
                'function' === typeof d._calculateChangedBits
                  ? d._calculateChangedBits(k, h)
                  : 1073741823),
              (h |= 0),
              0 === h)
            ) {
              if (f.children === e.children && g)
                return (b.stateNode = 0), ag(b), R(a, b);
            } else Mg(b, d, h, c);
          }
          b.stateNode = h;
          ag(b);
          Q(a, b, e.children);
          return b.child;
        }
        function R(a, b) {
          null !== a && b.child !== a.child ? A('153') : void 0;
          if (null !== b.child) {
            a = b.child;
            var c = zf(a, a.pendingProps, a.expirationTime);
            b.child = c;
            for (c.return = b; null !== a.sibling; )
              (a = a.sibling),
                (c = c.sibling = zf(a, a.pendingProps, a.expirationTime)),
                (c.return = b);
            c.sibling = null;
          }
          return b.child;
        }
        function Rg(a, b, c) {
          if (0 === b.expirationTime || b.expirationTime > c) {
            switch (b.tag) {
              case 3:
                Lg(b);
                break;
              case 2:
                wf(b);
                break;
              case 4:
                ig(b, b.stateNode.containerInfo);
                break;
              case 13:
                ag(b);
            }
            return null;
          }
          switch (b.tag) {
            case 0:
              null !== a ? A('155') : void 0;
              var d = b.type,
                e = b.pendingProps,
                f = pf(b);
              f = rf(b, f);
              d = d(e, f);
              b.effectTag |= 1;
              'object' === typeof d &&
              null !== d &&
              'function' === typeof d.render &&
              void 0 === d.$$typeof
                ? ((f = b.type),
                  (b.tag = 2),
                  (b.memoizedState =
                    null !== d.state && void 0 !== d.state ? d.state : null),
                  (f = f.getDerivedStateFromProps),
                  'function' === typeof f && lg(b, f, e),
                  (e = wf(b)),
                  (d.updater = pg),
                  (b.stateNode = d),
                  (d._reactInternalFiber = b),
                  sg(b, c),
                  (a = Kg(a, b, !0, e, c)))
                : ((b.tag = 1),
                  Q(a, b, d),
                  (b.memoizedProps = e),
                  (a = b.child));
              return a;
            case 1:
              return (
                (e = b.type),
                (c = b.pendingProps),
                O.current || b.memoizedProps !== c
                  ? ((d = pf(b)),
                    (d = rf(b, d)),
                    (e = e(c, d)),
                    (b.effectTag |= 1),
                    Q(a, b, e),
                    (b.memoizedProps = c),
                    (a = b.child))
                  : (a = R(a, b)),
                a
              );
            case 2:
              e = wf(b);
              if (null === a) {
                if (null === b.stateNode) {
                  var g = b.pendingProps,
                    h = b.type;
                  d = pf(b);
                  var k = 2 === b.tag && null != b.type.contextTypes;
                  f = k ? rf(b, d) : ha;
                  g = new h(g, f);
                  b.memoizedState =
                    null !== g.state && void 0 !== g.state ? g.state : null;
                  g.updater = pg;
                  b.stateNode = g;
                  g._reactInternalFiber = b;
                  k &&
                    ((k = b.stateNode),
                    (k.__reactInternalMemoizedUnmaskedChildContext = d),
                    (k.__reactInternalMemoizedMaskedChildContext = f));
                  sg(b, c);
                  d = !0;
                } else {
                  h = b.type;
                  d = b.stateNode;
                  k = b.memoizedProps;
                  f = b.pendingProps;
                  d.props = k;
                  var n = d.context;
                  g = pf(b);
                  g = rf(b, g);
                  var r = h.getDerivedStateFromProps;
                  (h =
                    'function' === typeof r ||
                    'function' === typeof d.getSnapshotBeforeUpdate) ||
                    ('function' !== typeof d.UNSAFE_componentWillReceiveProps &&
                      'function' !== typeof d.componentWillReceiveProps) ||
                    ((k !== f || n !== g) && rg(b, d, f, g));
                  Lf = !1;
                  var w = b.memoizedState;
                  n = d.state = w;
                  var P = b.updateQueue;
                  null !== P && (Uf(b, P, f, d, c), (n = b.memoizedState));
                  k !== f || w !== n || O.current || Lf
                    ? ('function' === typeof r &&
                        (lg(b, r, f), (n = b.memoizedState)),
                      (k = Lf || qg(b, k, f, w, n, g))
                        ? (h ||
                            ('function' !==
                              typeof d.UNSAFE_componentWillMount &&
                              'function' !== typeof d.componentWillMount) ||
                            ('function' === typeof d.componentWillMount &&
                              d.componentWillMount(),
                            'function' === typeof d.UNSAFE_componentWillMount &&
                              d.UNSAFE_componentWillMount()),
                          'function' === typeof d.componentDidMount &&
                            (b.effectTag |= 4))
                        : ('function' === typeof d.componentDidMount &&
                            (b.effectTag |= 4),
                          (b.memoizedProps = f),
                          (b.memoizedState = n)),
                      (d.props = f),
                      (d.state = n),
                      (d.context = g),
                      (d = k))
                    : ('function' === typeof d.componentDidMount &&
                        (b.effectTag |= 4),
                      (d = !1));
                }
              } else
                (h = b.type),
                  (d = b.stateNode),
                  (f = b.memoizedProps),
                  (k = b.pendingProps),
                  (d.props = f),
                  (n = d.context),
                  (g = pf(b)),
                  (g = rf(b, g)),
                  (r = h.getDerivedStateFromProps),
                  (h =
                    'function' === typeof r ||
                    'function' === typeof d.getSnapshotBeforeUpdate) ||
                    ('function' !== typeof d.UNSAFE_componentWillReceiveProps &&
                      'function' !== typeof d.componentWillReceiveProps) ||
                    ((f !== k || n !== g) && rg(b, d, k, g)),
                  (Lf = !1),
                  (n = b.memoizedState),
                  (w = d.state = n),
                  (P = b.updateQueue),
                  null !== P && (Uf(b, P, k, d, c), (w = b.memoizedState)),
                  f !== k || n !== w || O.current || Lf
                    ? ('function' === typeof r &&
                        (lg(b, r, k), (w = b.memoizedState)),
                      (r = Lf || qg(b, f, k, n, w, g))
                        ? (h ||
                            ('function' !==
                              typeof d.UNSAFE_componentWillUpdate &&
                              'function' !== typeof d.componentWillUpdate) ||
                            ('function' === typeof d.componentWillUpdate &&
                              d.componentWillUpdate(k, w, g),
                            'function' ===
                              typeof d.UNSAFE_componentWillUpdate &&
                              d.UNSAFE_componentWillUpdate(k, w, g)),
                          'function' === typeof d.componentDidUpdate &&
                            (b.effectTag |= 4),
                          'function' === typeof d.getSnapshotBeforeUpdate &&
                            (b.effectTag |= 256))
                        : ('function' !== typeof d.componentDidUpdate ||
                            (f === a.memoizedProps && n === a.memoizedState) ||
                            (b.effectTag |= 4),
                          'function' !== typeof d.getSnapshotBeforeUpdate ||
                            (f === a.memoizedProps && n === a.memoizedState) ||
                            (b.effectTag |= 256),
                          (b.memoizedProps = k),
                          (b.memoizedState = w)),
                      (d.props = k),
                      (d.state = w),
                      (d.context = g),
                      (d = r))
                    : ('function' !== typeof d.componentDidUpdate ||
                        (f === a.memoizedProps && n === a.memoizedState) ||
                        (b.effectTag |= 4),
                      'function' !== typeof d.getSnapshotBeforeUpdate ||
                        (f === a.memoizedProps && n === a.memoizedState) ||
                        (b.effectTag |= 256),
                      (d = !1));
              return Kg(a, b, d, e, c);
            case 3:
              Lg(b);
              e = b.updateQueue;
              if (null !== e) {
                if (
                  ((d = b.memoizedState),
                  (d = null !== d ? d.element : null),
                  Uf(b, e, b.pendingProps, null, c),
                  (e = b.memoizedState.element),
                  e === d)
                )
                  Hg(), (a = R(a, b));
                else {
                  d = b.stateNode;
                  if ((d = (null === a || null === a.child) && d.hydrate))
                    (Ag = jf(b.stateNode.containerInfo)),
                      (zg = b),
                      (d = Bg = !0);
                  d
                    ? ((b.effectTag |= 2), (b.child = yg(b, null, e, c)))
                    : (Hg(), Q(a, b, e));
                  a = b.child;
                }
              } else Hg(), (a = R(a, b));
              return a;
            case 5:
              a: {
                gg(fg.current);
                e = gg(dg.current);
                d = He(e, b.type);
                e !== d && (N(eg, b, b), N(dg, d, b));
                null === a && Eg(b);
                e = b.type;
                k = b.memoizedProps;
                d = b.pendingProps;
                f = null !== a ? a.memoizedProps : null;
                if (!O.current && k === d) {
                  if ((k = b.mode & 1 && !!d.hidden))
                    b.expirationTime = 1073741823;
                  if (!k || 1073741823 !== c) {
                    a = R(a, b);
                    break a;
                  }
                }
                k = d.children;
                df(e, d) ? (k = null) : f && df(e, f) && (b.effectTag |= 16);
                Jg(a, b);
                1073741823 !== c && b.mode & 1 && d.hidden
                  ? ((b.expirationTime = 1073741823),
                    (b.memoizedProps = d),
                    (a = null))
                  : (Q(a, b, k), (b.memoizedProps = d), (a = b.child));
              }
              return a;
            case 6:
              return (
                null === a && Eg(b), (b.memoizedProps = b.pendingProps), null
              );
            case 16:
              return null;
            case 4:
              return (
                ig(b, b.stateNode.containerInfo),
                (e = b.pendingProps),
                O.current || b.memoizedProps !== e
                  ? (null === a ? (b.child = xg(b, null, e, c)) : Q(a, b, e),
                    (b.memoizedProps = e),
                    (a = b.child))
                  : (a = R(a, b)),
                a
              );
            case 14:
              return (
                (e = b.type.render),
                (c = b.pendingProps),
                (d = b.ref),
                O.current ||
                b.memoizedProps !== c ||
                d !== (null !== a ? a.ref : null)
                  ? ((e = e(c, d)),
                    Q(a, b, e),
                    (b.memoizedProps = c),
                    (a = b.child))
                  : (a = R(a, b)),
                a
              );
            case 10:
              return (
                (c = b.pendingProps),
                O.current || b.memoizedProps !== c
                  ? (Q(a, b, c), (b.memoizedProps = c), (a = b.child))
                  : (a = R(a, b)),
                a
              );
            case 11:
              return (
                (c = b.pendingProps.children),
                O.current || (null !== c && b.memoizedProps !== c)
                  ? (Q(a, b, c), (b.memoizedProps = c), (a = b.child))
                  : (a = R(a, b)),
                a
              );
            case 15:
              return (
                (c = b.pendingProps),
                b.memoizedProps === c
                  ? (a = R(a, b))
                  : (Q(a, b, c.children), (b.memoizedProps = c), (a = b.child)),
                a
              );
            case 13:
              return Qg(a, b, c);
            case 12:
              a: if (
                ((d = b.type),
                (f = b.pendingProps),
                (k = b.memoizedProps),
                (e = d._currentValue),
                (g = d._changedBits),
                O.current || 0 !== g || k !== f)
              ) {
                b.memoizedProps = f;
                h = f.unstable_observedBits;
                if (void 0 === h || null === h) h = 1073741823;
                b.stateNode = h;
                if (0 !== (g & h)) Mg(b, d, g, c);
                else if (k === f) {
                  a = R(a, b);
                  break a;
                }
                c = f.children;
                c = c(e);
                b.effectTag |= 1;
                Q(a, b, c);
                a = b.child;
              } else a = R(a, b);
              return a;
            default:
              A('156');
          }
        }
        function Sg(a) {
          a.effectTag |= 4;
        }
        var Tg = void 0,
          Ug = void 0,
          Vg = void 0;
        Tg = function() {};
        Ug = function(a, b, c) {
          (b.updateQueue = c) && Sg(b);
        };
        Vg = function(a, b, c, d) {
          c !== d && Sg(b);
        };
        function Wg(a, b) {
          var c = b.pendingProps;
          switch (b.tag) {
            case 1:
              return null;
            case 2:
              return sf(b), null;
            case 3:
              jg(b);
              tf(b);
              var d = b.stateNode;
              d.pendingContext &&
                ((d.context = d.pendingContext), (d.pendingContext = null));
              if (null === a || null === a.child) Gg(b), (b.effectTag &= -3);
              Tg(b);
              return null;
            case 5:
              kg(b);
              d = gg(fg.current);
              var e = b.type;
              if (null !== a && null != b.stateNode) {
                var f = a.memoizedProps,
                  g = b.stateNode,
                  h = gg(dg.current);
                g = We(g, e, f, c, d);
                Ug(a, b, g, e, f, c, d, h);
                a.ref !== b.ref && (b.effectTag |= 128);
              } else {
                if (!c) return null === b.stateNode ? A('166') : void 0, null;
                a = gg(dg.current);
                if (Gg(b))
                  (c = b.stateNode),
                    (e = b.type),
                    (f = b.memoizedProps),
                    (c[C] = b),
                    (c[Ma] = f),
                    (d = Ye(c, e, f, a, d)),
                    (b.updateQueue = d),
                    null !== d && Sg(b);
                else {
                  a = Te(e, c, d, a);
                  a[C] = b;
                  a[Ma] = c;
                  a: for (f = b.child; null !== f; ) {
                    if (5 === f.tag || 6 === f.tag) a.appendChild(f.stateNode);
                    else if (4 !== f.tag && null !== f.child) {
                      f.child.return = f;
                      f = f.child;
                      continue;
                    }
                    if (f === b) break;
                    for (; null === f.sibling; ) {
                      if (null === f.return || f.return === b) break a;
                      f = f.return;
                    }
                    f.sibling.return = f.return;
                    f = f.sibling;
                  }
                  Ve(a, e, c, d);
                  cf(e, c) && Sg(b);
                  b.stateNode = a;
                }
                null !== b.ref && (b.effectTag |= 128);
              }
              return null;
            case 6:
              if (a && null != b.stateNode) Vg(a, b, a.memoizedProps, c);
              else {
                if ('string' !== typeof c)
                  return null === b.stateNode ? A('166') : void 0, null;
                d = gg(fg.current);
                gg(dg.current);
                Gg(b)
                  ? ((d = b.stateNode),
                    (c = b.memoizedProps),
                    (d[C] = b),
                    Ze(d, c) && Sg(b))
                  : ((d = Ue(c, d)), (d[C] = b), (b.stateNode = d));
              }
              return null;
            case 14:
              return null;
            case 16:
              return null;
            case 10:
              return null;
            case 11:
              return null;
            case 15:
              return null;
            case 4:
              return jg(b), Tg(b), null;
            case 13:
              return bg(b), null;
            case 12:
              return null;
            case 0:
              A('167');
            default:
              A('156');
          }
        }
        function Xg(a, b) {
          var c = b.source;
          null === b.stack && null !== c && vc(c);
          null !== c && uc(c);
          b = b.value;
          null !== a && 2 === a.tag && uc(a);
          try {
            (b && b.suppressReactErrorLogging) || console.error(b);
          } catch (d) {
            (d && d.suppressReactErrorLogging) || console.error(d);
          }
        }
        function Yg(a) {
          var b = a.ref;
          if (null !== b)
            if ('function' === typeof b)
              try {
                b(null);
              } catch (c) {
                Zg(a, c);
              }
            else b.current = null;
        }
        function $g(a) {
          'function' === typeof Kf && Kf(a);
          switch (a.tag) {
            case 2:
              Yg(a);
              var b = a.stateNode;
              if ('function' === typeof b.componentWillUnmount)
                try {
                  (b.props = a.memoizedProps),
                    (b.state = a.memoizedState),
                    b.componentWillUnmount();
                } catch (c) {
                  Zg(a, c);
                }
              break;
            case 5:
              Yg(a);
              break;
            case 4:
              ah(a);
          }
        }
        function bh(a) {
          return 5 === a.tag || 3 === a.tag || 4 === a.tag;
        }
        function ch(a) {
          a: {
            for (var b = a.return; null !== b; ) {
              if (bh(b)) {
                var c = b;
                break a;
              }
              b = b.return;
            }
            A('160');
            c = void 0;
          }
          var d = (b = void 0);
          switch (c.tag) {
            case 5:
              b = c.stateNode;
              d = !1;
              break;
            case 3:
              b = c.stateNode.containerInfo;
              d = !0;
              break;
            case 4:
              b = c.stateNode.containerInfo;
              d = !0;
              break;
            default:
              A('161');
          }
          c.effectTag & 16 && (Ke(b, ''), (c.effectTag &= -17));
          a: b: for (c = a; ; ) {
            for (; null === c.sibling; ) {
              if (null === c.return || bh(c.return)) {
                c = null;
                break a;
              }
              c = c.return;
            }
            c.sibling.return = c.return;
            for (c = c.sibling; 5 !== c.tag && 6 !== c.tag; ) {
              if (c.effectTag & 2) continue b;
              if (null === c.child || 4 === c.tag) continue b;
              else (c.child.return = c), (c = c.child);
            }
            if (!(c.effectTag & 2)) {
              c = c.stateNode;
              break a;
            }
          }
          for (var e = a; ; ) {
            if (5 === e.tag || 6 === e.tag) {
              if (c) {
                if (d) {
                  var f = b,
                    g = e.stateNode,
                    h = c;
                  8 === f.nodeType
                    ? f.parentNode.insertBefore(g, h)
                    : f.insertBefore(g, h);
                } else b.insertBefore(e.stateNode, c);
              } else
                d
                  ? ((f = b),
                    (g = e.stateNode),
                    8 === f.nodeType
                      ? f.parentNode.insertBefore(g, f)
                      : f.appendChild(g))
                  : b.appendChild(e.stateNode);
            } else if (4 !== e.tag && null !== e.child) {
              e.child.return = e;
              e = e.child;
              continue;
            }
            if (e === a) break;
            for (; null === e.sibling; ) {
              if (null === e.return || e.return === a) return;
              e = e.return;
            }
            e.sibling.return = e.return;
            e = e.sibling;
          }
        }
        function ah(a) {
          for (var b = a, c = !1, d = void 0, e = void 0; ; ) {
            if (!c) {
              c = b.return;
              a: for (;;) {
                null === c ? A('160') : void 0;
                switch (c.tag) {
                  case 5:
                    d = c.stateNode;
                    e = !1;
                    break a;
                  case 3:
                    d = c.stateNode.containerInfo;
                    e = !0;
                    break a;
                  case 4:
                    d = c.stateNode.containerInfo;
                    e = !0;
                    break a;
                }
                c = c.return;
              }
              c = !0;
            }
            if (5 === b.tag || 6 === b.tag) {
              a: for (var f = b, g = f; ; )
                if (($g(g), null !== g.child && 4 !== g.tag))
                  (g.child.return = g), (g = g.child);
                else {
                  if (g === f) break;
                  for (; null === g.sibling; ) {
                    if (null === g.return || g.return === f) break a;
                    g = g.return;
                  }
                  g.sibling.return = g.return;
                  g = g.sibling;
                }
              e
                ? ((f = d),
                  (g = b.stateNode),
                  8 === f.nodeType
                    ? f.parentNode.removeChild(g)
                    : f.removeChild(g))
                : d.removeChild(b.stateNode);
            } else if (
              (4 === b.tag ? (d = b.stateNode.containerInfo) : $g(b),
              null !== b.child)
            ) {
              b.child.return = b;
              b = b.child;
              continue;
            }
            if (b === a) break;
            for (; null === b.sibling; ) {
              if (null === b.return || b.return === a) return;
              b = b.return;
              4 === b.tag && (c = !1);
            }
            b.sibling.return = b.return;
            b = b.sibling;
          }
        }
        function dh(a, b) {
          switch (b.tag) {
            case 2:
              break;
            case 5:
              var c = b.stateNode;
              if (null != c) {
                var d = b.memoizedProps;
                a = null !== a ? a.memoizedProps : d;
                var e = b.type,
                  f = b.updateQueue;
                b.updateQueue = null;
                null !== f && ((c[Ma] = d), Xe(c, f, e, a, d));
              }
              break;
            case 6:
              null === b.stateNode ? A('162') : void 0;
              b.stateNode.nodeValue = b.memoizedProps;
              break;
            case 3:
              break;
            case 15:
              break;
            case 16:
              break;
            default:
              A('163');
          }
        }
        function eh(a, b, c) {
          c = Of(c);
          c.tag = 3;
          c.payload = { element: null };
          var d = b.value;
          c.callback = function() {
            fh(d);
            Xg(a, b);
          };
          return c;
        }
        function gh(a, b, c) {
          c = Of(c);
          c.tag = 3;
          var d = a.stateNode;
          null !== d &&
            'function' === typeof d.componentDidCatch &&
            (c.callback = function() {
              null === hh ? (hh = new Set([this])) : hh.add(this);
              var c = b.value,
                d = b.stack;
              Xg(a, b);
              this.componentDidCatch(c, {
                componentStack: null !== d ? d : '',
              });
            });
          return c;
        }
        function ih(a, b, c, d, e, f) {
          c.effectTag |= 512;
          c.firstEffect = c.lastEffect = null;
          d = Xf(d, c);
          a = b;
          do {
            switch (a.tag) {
              case 3:
                a.effectTag |= 1024;
                d = eh(a, d, f);
                Rf(a, d, f);
                return;
              case 2:
                if (
                  ((b = d),
                  (c = a.stateNode),
                  0 === (a.effectTag & 64) &&
                    null !== c &&
                    'function' === typeof c.componentDidCatch &&
                    (null === hh || !hh.has(c)))
                ) {
                  a.effectTag |= 1024;
                  d = gh(a, b, f);
                  Rf(a, d, f);
                  return;
                }
            }
            a = a.return;
          } while (null !== a);
        }
        function jh(a) {
          switch (a.tag) {
            case 2:
              sf(a);
              var b = a.effectTag;
              return b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null;
            case 3:
              return (
                jg(a),
                tf(a),
                (b = a.effectTag),
                b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null
              );
            case 5:
              return kg(a), null;
            case 16:
              return (
                (b = a.effectTag),
                b & 1024 ? ((a.effectTag = (b & -1025) | 64), a) : null
              );
            case 4:
              return jg(a), null;
            case 13:
              return bg(a), null;
            default:
              return null;
          }
        }
        var kh = ef(),
          lh = 2,
          mh = kh,
          nh = 0,
          oh = 0,
          ph = !1,
          S = null,
          qh = null,
          T = 0,
          rh = -1,
          sh = !1,
          U = null,
          th = !1,
          uh = !1,
          hh = null;
        function vh() {
          if (null !== S)
            for (var a = S.return; null !== a; ) {
              var b = a;
              switch (b.tag) {
                case 2:
                  sf(b);
                  break;
                case 3:
                  jg(b);
                  tf(b);
                  break;
                case 5:
                  kg(b);
                  break;
                case 4:
                  jg(b);
                  break;
                case 13:
                  bg(b);
              }
              a = a.return;
            }
          qh = null;
          T = 0;
          rh = -1;
          sh = !1;
          S = null;
          uh = !1;
        }
        function wh(a) {
          for (;;) {
            var b = a.alternate,
              c = a.return,
              d = a.sibling;
            if (0 === (a.effectTag & 512)) {
              b = Wg(b, a, T);
              var e = a;
              if (1073741823 === T || 1073741823 !== e.expirationTime) {
                var f = 0;
                switch (e.tag) {
                  case 3:
                  case 2:
                    var g = e.updateQueue;
                    null !== g && (f = g.expirationTime);
                }
                for (g = e.child; null !== g; )
                  0 !== g.expirationTime &&
                    (0 === f || f > g.expirationTime) &&
                    (f = g.expirationTime),
                    (g = g.sibling);
                e.expirationTime = f;
              }
              if (null !== b) return b;
              null !== c &&
                0 === (c.effectTag & 512) &&
                (null === c.firstEffect && (c.firstEffect = a.firstEffect),
                null !== a.lastEffect &&
                  (null !== c.lastEffect &&
                    (c.lastEffect.nextEffect = a.firstEffect),
                  (c.lastEffect = a.lastEffect)),
                1 < a.effectTag &&
                  (null !== c.lastEffect
                    ? (c.lastEffect.nextEffect = a)
                    : (c.firstEffect = a),
                  (c.lastEffect = a)));
              if (null !== d) return d;
              if (null !== c) a = c;
              else {
                uh = !0;
                break;
              }
            } else {
              a = jh(a, sh, T);
              if (null !== a) return (a.effectTag &= 511), a;
              null !== c &&
                ((c.firstEffect = c.lastEffect = null), (c.effectTag |= 512));
              if (null !== d) return d;
              if (null !== c) a = c;
              else break;
            }
          }
          return null;
        }
        function xh(a) {
          var b = Rg(a.alternate, a, T);
          null === b && (b = wh(a));
          ec.current = null;
          return b;
        }
        function yh(a, b, c) {
          ph ? A('243') : void 0;
          ph = !0;
          if (b !== T || a !== qh || null === S)
            vh(),
              (qh = a),
              (T = b),
              (rh = -1),
              (S = zf(qh.current, null, T)),
              (a.pendingCommitExpirationTime = 0);
          var d = !1;
          sh = !c || T <= lh;
          do {
            try {
              if (c) for (; null !== S && !zh(); ) S = xh(S);
              else for (; null !== S; ) S = xh(S);
            } catch (f) {
              if (null === S) (d = !0), fh(f);
              else {
                null === S ? A('271') : void 0;
                c = S;
                var e = c.return;
                if (null === e) {
                  d = !0;
                  fh(f);
                  break;
                }
                ih(a, e, c, f, sh, T, mh);
                S = wh(c);
              }
            }
            break;
          } while (1);
          ph = !1;
          if (d) return null;
          if (null === S) {
            if (uh)
              return (a.pendingCommitExpirationTime = b), a.current.alternate;
            sh ? A('262') : void 0;
            0 <= rh &&
              setTimeout(function() {
                var b = a.current.expirationTime;
                0 !== b &&
                  (0 === a.remainingExpirationTime ||
                    a.remainingExpirationTime < b) &&
                  Ah(a, b);
              }, rh);
            Bh(a.current.expirationTime);
          }
          return null;
        }
        function Zg(a, b) {
          var c;
          a: {
            ph && !th ? A('263') : void 0;
            for (c = a.return; null !== c; ) {
              switch (c.tag) {
                case 2:
                  var d = c.stateNode;
                  if (
                    'function' === typeof c.type.getDerivedStateFromCatch ||
                    ('function' === typeof d.componentDidCatch &&
                      (null === hh || !hh.has(d)))
                  ) {
                    a = Xf(b, a);
                    a = gh(c, a, 1);
                    Qf(c, a, 1);
                    og(c, 1);
                    c = void 0;
                    break a;
                  }
                  break;
                case 3:
                  a = Xf(b, a);
                  a = eh(c, a, 1);
                  Qf(c, a, 1);
                  og(c, 1);
                  c = void 0;
                  break a;
              }
              c = c.return;
            }
            3 === a.tag &&
              ((c = Xf(b, a)), (c = eh(a, c, 1)), Qf(a, c, 1), og(a, 1));
            c = void 0;
          }
          return c;
        }
        function Ch() {
          var a = 2 + 25 * ((((mg() - 2 + 500) / 25) | 0) + 1);
          a <= nh && (a = nh + 1);
          return (nh = a);
        }
        function ng(a, b) {
          a =
            0 !== oh
              ? oh
              : ph
                ? th
                  ? 1
                  : T
                : b.mode & 1
                  ? Dh
                    ? 2 + 10 * ((((a - 2 + 15) / 10) | 0) + 1)
                    : 2 + 25 * ((((a - 2 + 500) / 25) | 0) + 1)
                  : 1;
          Dh && (0 === Eh || a > Eh) && (Eh = a);
          return a;
        }
        function og(a, b) {
          for (; null !== a; ) {
            if (0 === a.expirationTime || a.expirationTime > b)
              a.expirationTime = b;
            null !== a.alternate &&
              (0 === a.alternate.expirationTime ||
                a.alternate.expirationTime > b) &&
              (a.alternate.expirationTime = b);
            if (null === a.return)
              if (3 === a.tag) {
                var c = a.stateNode;
                !ph && 0 !== T && b < T && vh();
                var d = c.current.expirationTime;
                (ph && !th && qh === c) || Ah(c, d);
                Fh > Gh && A('185');
              } else break;
            a = a.return;
          }
        }
        function mg() {
          mh = ef() - kh;
          return (lh = ((mh / 10) | 0) + 2);
        }
        function Hh(a) {
          var b = oh;
          oh = 2 + 25 * ((((mg() - 2 + 500) / 25) | 0) + 1);
          try {
            return a();
          } finally {
            oh = b;
          }
        }
        function Ih(a, b, c, d, e) {
          var f = oh;
          oh = 1;
          try {
            return a(b, c, d, e);
          } finally {
            oh = f;
          }
        }
        var Jh = null,
          V = null,
          Kh = 0,
          Lh = void 0,
          W = !1,
          X = null,
          Y = 0,
          Eh = 0,
          Mh = !1,
          Nh = !1,
          Oh = null,
          Ph = null,
          Z = !1,
          Qh = !1,
          Dh = !1,
          Rh = null,
          Gh = 1e3,
          Fh = 0,
          Sh = 1;
        function Th(a) {
          if (0 !== Kh) {
            if (a > Kh) return;
            null !== Lh && gf(Lh);
          }
          var b = ef() - kh;
          Kh = a;
          Lh = ff(Uh, { timeout: 10 * (a - 2) - b });
        }
        function Ah(a, b) {
          if (null === a.nextScheduledRoot)
            (a.remainingExpirationTime = b),
              null === V
                ? ((Jh = V = a), (a.nextScheduledRoot = a))
                : ((V = V.nextScheduledRoot = a), (V.nextScheduledRoot = Jh));
          else {
            var c = a.remainingExpirationTime;
            if (0 === c || b < c) a.remainingExpirationTime = b;
          }
          W ||
            (Z
              ? Qh && ((X = a), (Y = 1), Vh(a, 1, !1))
              : 1 === b
                ? Wh()
                : Th(b));
        }
        function Xh() {
          var a = 0,
            b = null;
          if (null !== V)
            for (var c = V, d = Jh; null !== d; ) {
              var e = d.remainingExpirationTime;
              if (0 === e) {
                null === c || null === V ? A('244') : void 0;
                if (d === d.nextScheduledRoot) {
                  Jh = V = d.nextScheduledRoot = null;
                  break;
                } else if (d === Jh)
                  (Jh = e = d.nextScheduledRoot),
                    (V.nextScheduledRoot = e),
                    (d.nextScheduledRoot = null);
                else if (d === V) {
                  V = c;
                  V.nextScheduledRoot = Jh;
                  d.nextScheduledRoot = null;
                  break;
                } else
                  (c.nextScheduledRoot = d.nextScheduledRoot),
                    (d.nextScheduledRoot = null);
                d = c.nextScheduledRoot;
              } else {
                if (0 === a || e < a) (a = e), (b = d);
                if (d === V) break;
                c = d;
                d = d.nextScheduledRoot;
              }
            }
          c = X;
          null !== c && c === b && 1 === a ? Fh++ : (Fh = 0);
          X = b;
          Y = a;
        }
        function Uh(a) {
          Yh(0, !0, a);
        }
        function Wh() {
          Yh(1, !1, null);
        }
        function Yh(a, b, c) {
          Ph = c;
          Xh();
          if (b)
            for (
              ;
              null !== X &&
              0 !== Y &&
              (0 === a || a >= Y) &&
              (!Mh || mg() >= Y);

            )
              mg(), Vh(X, Y, !Mh), Xh();
          else
            for (; null !== X && 0 !== Y && (0 === a || a >= Y); )
              Vh(X, Y, !1), Xh();
          null !== Ph && ((Kh = 0), (Lh = null));
          0 !== Y && Th(Y);
          Ph = null;
          Mh = !1;
          Zh();
        }
        function $h(a, b) {
          W ? A('253') : void 0;
          X = a;
          Y = b;
          Vh(a, b, !1);
          Wh();
          Zh();
        }
        function Zh() {
          Fh = 0;
          if (null !== Rh) {
            var a = Rh;
            Rh = null;
            for (var b = 0; b < a.length; b++) {
              var c = a[b];
              try {
                c._onComplete();
              } catch (d) {
                Nh || ((Nh = !0), (Oh = d));
              }
            }
          }
          if (Nh) throw ((a = Oh), (Oh = null), (Nh = !1), a);
        }
        function Vh(a, b, c) {
          W ? A('245') : void 0;
          W = !0;
          c
            ? ((c = a.finishedWork),
              null !== c
                ? ai(a, c, b)
                : ((c = yh(a, b, !0)),
                  null !== c && (zh() ? (a.finishedWork = c) : ai(a, c, b))))
            : ((c = a.finishedWork),
              null !== c
                ? ai(a, c, b)
                : ((c = yh(a, b, !1)), null !== c && ai(a, c, b)));
          W = !1;
        }
        function ai(a, b, c) {
          var d = a.firstBatch;
          if (
            null !== d &&
            d._expirationTime <= c &&
            (null === Rh ? (Rh = [d]) : Rh.push(d), d._defer)
          ) {
            a.finishedWork = b;
            a.remainingExpirationTime = 0;
            return;
          }
          a.finishedWork = null;
          th = ph = !0;
          c = b.stateNode;
          c.current === b ? A('177') : void 0;
          d = c.pendingCommitExpirationTime;
          0 === d ? A('261') : void 0;
          c.pendingCommitExpirationTime = 0;
          mg();
          ec.current = null;
          if (1 < b.effectTag) {
            if (null !== b.lastEffect) {
              b.lastEffect.nextEffect = b;
              var e = b.firstEffect;
            } else e = b;
          } else e = b.firstEffect;
          af = Hd;
          var f = da();
          if (Ud(f)) {
            if ('selectionStart' in f)
              var g = { start: f.selectionStart, end: f.selectionEnd };
            else
              a: {
                var h = window.getSelection && window.getSelection();
                if (h && 0 !== h.rangeCount) {
                  g = h.anchorNode;
                  var k = h.anchorOffset,
                    n = h.focusNode;
                  h = h.focusOffset;
                  try {
                    g.nodeType, n.nodeType;
                  } catch (Wa) {
                    g = null;
                    break a;
                  }
                  var r = 0,
                    w = -1,
                    P = -1,
                    nc = 0,
                    Jd = 0,
                    E = f,
                    t = null;
                  b: for (;;) {
                    for (var x; ; ) {
                      E !== g || (0 !== k && 3 !== E.nodeType) || (w = r + k);
                      E !== n || (0 !== h && 3 !== E.nodeType) || (P = r + h);
                      3 === E.nodeType && (r += E.nodeValue.length);
                      if (null === (x = E.firstChild)) break;
                      t = E;
                      E = x;
                    }
                    for (;;) {
                      if (E === f) break b;
                      t === g && ++nc === k && (w = r);
                      t === n && ++Jd === h && (P = r);
                      if (null !== (x = E.nextSibling)) break;
                      E = t;
                      t = E.parentNode;
                    }
                    E = x;
                  }
                  g = -1 === w || -1 === P ? null : { start: w, end: P };
                } else g = null;
              }
            g = g || { start: 0, end: 0 };
          } else g = null;
          bf = { focusedElem: f, selectionRange: g };
          Id(!1);
          for (U = e; null !== U; ) {
            f = !1;
            g = void 0;
            try {
              for (; null !== U; ) {
                if (U.effectTag & 256) {
                  var u = U.alternate;
                  k = U;
                  switch (k.tag) {
                    case 2:
                      if (k.effectTag & 256 && null !== u) {
                        var y = u.memoizedProps,
                          D = u.memoizedState,
                          ja = k.stateNode;
                        ja.props = k.memoizedProps;
                        ja.state = k.memoizedState;
                        var mi = ja.getSnapshotBeforeUpdate(y, D);
                        ja.__reactInternalSnapshotBeforeUpdate = mi;
                      }
                      break;
                    case 3:
                    case 5:
                    case 6:
                    case 4:
                      break;
                    default:
                      A('163');
                  }
                }
                U = U.nextEffect;
              }
            } catch (Wa) {
              (f = !0), (g = Wa);
            }
            f &&
              (null === U ? A('178') : void 0,
              Zg(U, g),
              null !== U && (U = U.nextEffect));
          }
          for (U = e; null !== U; ) {
            u = !1;
            y = void 0;
            try {
              for (; null !== U; ) {
                var q = U.effectTag;
                q & 16 && Ke(U.stateNode, '');
                if (q & 128) {
                  var z = U.alternate;
                  if (null !== z) {
                    var l = z.ref;
                    null !== l &&
                      ('function' === typeof l ? l(null) : (l.current = null));
                  }
                }
                switch (q & 14) {
                  case 2:
                    ch(U);
                    U.effectTag &= -3;
                    break;
                  case 6:
                    ch(U);
                    U.effectTag &= -3;
                    dh(U.alternate, U);
                    break;
                  case 4:
                    dh(U.alternate, U);
                    break;
                  case 8:
                    (D = U),
                      ah(D),
                      (D.return = null),
                      (D.child = null),
                      D.alternate &&
                        ((D.alternate.child = null),
                        (D.alternate.return = null));
                }
                U = U.nextEffect;
              }
            } catch (Wa) {
              (u = !0), (y = Wa);
            }
            u &&
              (null === U ? A('178') : void 0,
              Zg(U, y),
              null !== U && (U = U.nextEffect));
          }
          l = bf;
          z = da();
          q = l.focusedElem;
          u = l.selectionRange;
          if (z !== q && fa(document.documentElement, q)) {
            null !== u &&
              Ud(q) &&
              ((z = u.start),
              (l = u.end),
              void 0 === l && (l = z),
              'selectionStart' in q
                ? ((q.selectionStart = z),
                  (q.selectionEnd = Math.min(l, q.value.length)))
                : window.getSelection &&
                  ((z = window.getSelection()),
                  (y = q[lb()].length),
                  (l = Math.min(u.start, y)),
                  (u = void 0 === u.end ? l : Math.min(u.end, y)),
                  !z.extend && l > u && ((y = u), (u = l), (l = y)),
                  (y = Td(q, l)),
                  (D = Td(q, u)),
                  y &&
                    D &&
                    (1 !== z.rangeCount ||
                      z.anchorNode !== y.node ||
                      z.anchorOffset !== y.offset ||
                      z.focusNode !== D.node ||
                      z.focusOffset !== D.offset) &&
                    ((ja = document.createRange()),
                    ja.setStart(y.node, y.offset),
                    z.removeAllRanges(),
                    l > u
                      ? (z.addRange(ja), z.extend(D.node, D.offset))
                      : (ja.setEnd(D.node, D.offset), z.addRange(ja)))));
            z = [];
            for (l = q; (l = l.parentNode); )
              1 === l.nodeType &&
                z.push({
                  element: l,
                  left: l.scrollLeft,
                  top: l.scrollTop,
                });
            'function' === typeof q.focus && q.focus();
            for (q = 0; q < z.length; q++)
              (l = z[q]),
                (l.element.scrollLeft = l.left),
                (l.element.scrollTop = l.top);
          }
          bf = null;
          Id(af);
          af = null;
          c.current = b;
          for (U = e; null !== U; ) {
            e = !1;
            q = void 0;
            try {
              for (z = d; null !== U; ) {
                var hg = U.effectTag;
                if (hg & 36) {
                  var oc = U.alternate;
                  l = U;
                  u = z;
                  switch (l.tag) {
                    case 2:
                      var ca = l.stateNode;
                      if (l.effectTag & 4)
                        if (null === oc)
                          (ca.props = l.memoizedProps),
                            (ca.state = l.memoizedState),
                            ca.componentDidMount();
                        else {
                          var wi = oc.memoizedProps,
                            xi = oc.memoizedState;
                          ca.props = l.memoizedProps;
                          ca.state = l.memoizedState;
                          ca.componentDidUpdate(
                            wi,
                            xi,
                            ca.__reactInternalSnapshotBeforeUpdate
                          );
                        }
                      var Ng = l.updateQueue;
                      null !== Ng &&
                        ((ca.props = l.memoizedProps),
                        (ca.state = l.memoizedState),
                        Wf(l, Ng, ca, u));
                      break;
                    case 3:
                      var Og = l.updateQueue;
                      if (null !== Og) {
                        y = null;
                        if (null !== l.child)
                          switch (l.child.tag) {
                            case 5:
                              y = l.child.stateNode;
                              break;
                            case 2:
                              y = l.child.stateNode;
                          }
                        Wf(l, Og, y, u);
                      }
                      break;
                    case 5:
                      var yi = l.stateNode;
                      null === oc &&
                        l.effectTag & 4 &&
                        cf(l.type, l.memoizedProps) &&
                        yi.focus();
                      break;
                    case 6:
                      break;
                    case 4:
                      break;
                    case 15:
                      break;
                    case 16:
                      break;
                    default:
                      A('163');
                  }
                }
                if (hg & 128) {
                  l = void 0;
                  var yc = U.ref;
                  if (null !== yc) {
                    var Pg = U.stateNode;
                    switch (U.tag) {
                      case 5:
                        l = Pg;
                        break;
                      default:
                        l = Pg;
                    }
                    'function' === typeof yc ? yc(l) : (yc.current = l);
                  }
                }
                var zi = U.nextEffect;
                U.nextEffect = null;
                U = zi;
              }
            } catch (Wa) {
              (e = !0), (q = Wa);
            }
            e &&
              (null === U ? A('178') : void 0,
              Zg(U, q),
              null !== U && (U = U.nextEffect));
          }
          ph = th = !1;
          'function' === typeof Jf && Jf(b.stateNode);
          b = c.current.expirationTime;
          0 === b && (hh = null);
          a.remainingExpirationTime = b;
        }
        function zh() {
          return null === Ph || Ph.timeRemaining() > Sh ? !1 : (Mh = !0);
        }
        function fh(a) {
          null === X ? A('246') : void 0;
          X.remainingExpirationTime = 0;
          Nh || ((Nh = !0), (Oh = a));
        }
        function Bh(a) {
          null === X ? A('246') : void 0;
          X.remainingExpirationTime = a;
        }
        function bi(a, b) {
          var c = Z;
          Z = !0;
          try {
            return a(b);
          } finally {
            (Z = c) || W || Wh();
          }
        }
        function ci(a, b) {
          if (Z && !Qh) {
            Qh = !0;
            try {
              return a(b);
            } finally {
              Qh = !1;
            }
          }
          return a(b);
        }
        function di(a, b) {
          W ? A('187') : void 0;
          var c = Z;
          Z = !0;
          try {
            return Ih(a, b);
          } finally {
            (Z = c), Wh();
          }
        }
        function ei(a, b, c) {
          if (Dh) return a(b, c);
          Z || W || 0 === Eh || (Yh(Eh, !1, null), (Eh = 0));
          var d = Dh,
            e = Z;
          Z = Dh = !0;
          try {
            return a(b, c);
          } finally {
            (Dh = d), (Z = e) || W || Wh();
          }
        }
        function fi(a) {
          var b = Z;
          Z = !0;
          try {
            Ih(a);
          } finally {
            (Z = b) || W || Yh(1, !1, null);
          }
        }
        function gi(a, b, c, d, e) {
          var f = b.current;
          if (c) {
            c = c._reactInternalFiber;
            var g;
            b: {
              2 === jd(c) && 2 === c.tag ? void 0 : A('170');
              for (g = c; 3 !== g.tag; ) {
                if (qf(g)) {
                  g = g.stateNode.__reactInternalMemoizedMergedChildContext;
                  break b;
                }
                (g = g.return) ? void 0 : A('171');
              }
              g = g.stateNode.context;
            }
            c = qf(c) ? vf(c, g) : g;
          } else c = ha;
          null === b.context ? (b.context = c) : (b.pendingContext = c);
          b = e;
          e = Of(d);
          e.payload = { element: a };
          b = void 0 === b ? null : b;
          null !== b && (e.callback = b);
          Qf(f, e, d);
          og(f, d);
          return d;
        }
        function hi(a) {
          var b = a._reactInternalFiber;
          void 0 === b &&
            ('function' === typeof a.render
              ? A('188')
              : A('268', Object.keys(a)));
          a = md(b);
          return null === a ? null : a.stateNode;
        }
        function ii(a, b, c, d) {
          var e = b.current,
            f = mg();
          e = ng(f, e);
          return gi(a, b, c, e, d);
        }
        function ji(a) {
          a = a.current;
          if (!a.child) return null;
          switch (a.child.tag) {
            case 5:
              return a.child.stateNode;
            default:
              return a.child.stateNode;
          }
        }
        function ki(a) {
          var b = a.findFiberByHostInstance;
          return If(
            p({}, a, {
              findHostInstanceByFiber: function(a) {
                a = md(a);
                return null === a ? null : a.stateNode;
              },
              findFiberByHostInstance: function(a) {
                return b ? b(a) : null;
              },
            })
          );
        }
        var li = {
          updateContainerAtExpirationTime: gi,
          createContainer: function(a, b, c) {
            return Ef(a, b, c);
          },
          updateContainer: ii,
          flushRoot: $h,
          requestWork: Ah,
          computeUniqueAsyncExpiration: Ch,
          batchedUpdates: bi,
          unbatchedUpdates: ci,
          deferredUpdates: Hh,
          syncUpdates: Ih,
          interactiveUpdates: ei,
          flushInteractiveUpdates: function() {
            W || 0 === Eh || (Yh(Eh, !1, null), (Eh = 0));
          },
          flushControlled: fi,
          flushSync: di,
          getPublicRootInstance: ji,
          findHostInstance: hi,
          findHostInstanceWithNoPortals: function(a) {
            a = nd(a);
            return null === a ? null : a.stateNode;
          },
          injectIntoDevTools: ki,
        };
        function ni(a, b, c) {
          var d =
            3 < arguments.length && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          return {
            $$typeof: hc,
            key: null == d ? null : '' + d,
            children: a,
            containerInfo: b,
            implementation: c,
          };
        }
        Kb.injectFiberControlledHostComponent($e);
        function oi(a) {
          this._expirationTime = Ch();
          this._root = a;
          this._callbacks = this._next = null;
          this._hasChildren = this._didComplete = !1;
          this._children = null;
          this._defer = !0;
        }
        oi.prototype.render = function(a) {
          this._defer ? void 0 : A('250');
          this._hasChildren = !0;
          this._children = a;
          var b = this._root._internalRoot,
            c = this._expirationTime,
            d = new pi();
          gi(a, b, null, c, d._onCommit);
          return d;
        };
        oi.prototype.then = function(a) {
          if (this._didComplete) a();
          else {
            var b = this._callbacks;
            null === b && (b = this._callbacks = []);
            b.push(a);
          }
        };
        oi.prototype.commit = function() {
          var a = this._root._internalRoot,
            b = a.firstBatch;
          this._defer && null !== b ? void 0 : A('251');
          if (this._hasChildren) {
            var c = this._expirationTime;
            if (b !== this) {
              this._hasChildren &&
                ((c = this._expirationTime = b._expirationTime),
                this.render(this._children));
              for (var d = null, e = b; e !== this; ) (d = e), (e = e._next);
              null === d ? A('251') : void 0;
              d._next = e._next;
              this._next = b;
              a.firstBatch = this;
            }
            this._defer = !1;
            $h(a, c);
            b = this._next;
            this._next = null;
            b = a.firstBatch = b;
            null !== b && b._hasChildren && b.render(b._children);
          } else (this._next = null), (this._defer = !1);
        };
        oi.prototype._onComplete = function() {
          if (!this._didComplete) {
            this._didComplete = !0;
            var a = this._callbacks;
            if (null !== a) for (var b = 0; b < a.length; b++) (0, a[b])();
          }
        };
        function pi() {
          this._callbacks = null;
          this._didCommit = !1;
          this._onCommit = this._onCommit.bind(this);
        }
        pi.prototype.then = function(a) {
          if (this._didCommit) a();
          else {
            var b = this._callbacks;
            null === b && (b = this._callbacks = []);
            b.push(a);
          }
        };
        pi.prototype._onCommit = function() {
          if (!this._didCommit) {
            this._didCommit = !0;
            var a = this._callbacks;
            if (null !== a)
              for (var b = 0; b < a.length; b++) {
                var c = a[b];
                'function' !== typeof c ? A('191', c) : void 0;
                c();
              }
          }
        };
        function qi(a, b, c) {
          this._internalRoot = Ef(a, b, c);
        }
        qi.prototype.render = function(a, b) {
          var c = this._internalRoot,
            d = new pi();
          b = void 0 === b ? null : b;
          null !== b && d.then(b);
          ii(a, c, null, d._onCommit);
          return d;
        };
        qi.prototype.unmount = function(a) {
          var b = this._internalRoot,
            c = new pi();
          a = void 0 === a ? null : a;
          null !== a && c.then(a);
          ii(null, b, null, c._onCommit);
          return c;
        };
        qi.prototype.legacy_renderSubtreeIntoContainer = function(a, b, c) {
          var d = this._internalRoot,
            e = new pi();
          c = void 0 === c ? null : c;
          null !== c && e.then(c);
          ii(b, d, a, e._onCommit);
          return e;
        };
        qi.prototype.createBatch = function() {
          var a = new oi(this),
            b = a._expirationTime,
            c = this._internalRoot,
            d = c.firstBatch;
          if (null === d) (c.firstBatch = a), (a._next = null);
          else {
            for (c = null; null !== d && d._expirationTime <= b; )
              (c = d), (d = d._next);
            a._next = d;
            null !== c && (c._next = a);
          }
          return a;
        };
        function ri(a) {
          return !(
            !a ||
            (1 !== a.nodeType &&
              9 !== a.nodeType &&
              11 !== a.nodeType &&
              (8 !== a.nodeType ||
                ' react-mount-point-unstable ' !== a.nodeValue))
          );
        }
        Sb = li.batchedUpdates;
        Tb = li.interactiveUpdates;
        Ub = li.flushInteractiveUpdates;
        function si(a, b) {
          b ||
            ((b = a
              ? 9 === a.nodeType
                ? a.documentElement
                : a.firstChild
              : null),
            (b = !(
              !b ||
              1 !== b.nodeType ||
              !b.hasAttribute('data-reactroot')
            )));
          if (!b) for (var c; (c = a.lastChild); ) a.removeChild(c);
          return new qi(a, !1, b);
        }
        function ti(a, b, c, d, e) {
          ri(c) ? void 0 : A('200');
          var f = c._reactRootContainer;
          if (f) {
            if ('function' === typeof e) {
              var g = e;
              e = function() {
                var a = ji(f._internalRoot);
                g.call(a);
              };
            }
            null != a
              ? f.legacy_renderSubtreeIntoContainer(a, b, e)
              : f.render(b, e);
          } else {
            f = c._reactRootContainer = si(c, d);
            if ('function' === typeof e) {
              var h = e;
              e = function() {
                var a = ji(f._internalRoot);
                h.call(a);
              };
            }
            ci(function() {
              null != a
                ? f.legacy_renderSubtreeIntoContainer(a, b, e)
                : f.render(b, e);
            });
          }
          return ji(f._internalRoot);
        }
        function ui(a, b) {
          var c =
            2 < arguments.length && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          ri(b) ? void 0 : A('200');
          return ni(a, b, null, c);
        }
        var vi = {
          createPortal: ui,
          findDOMNode: function(a) {
            return null == a ? null : 1 === a.nodeType ? a : hi(a);
          },
          hydrate: function(a, b, c) {
            return ti(null, a, b, !0, c);
          },
          render: function(a, b, c) {
            return ti(null, a, b, !1, c);
          },
          unstable_renderSubtreeIntoContainer: function(a, b, c, d) {
            null == a || void 0 === a._reactInternalFiber ? A('38') : void 0;
            return ti(a, b, c, !1, d);
          },
          unmountComponentAtNode: function(a) {
            ri(a) ? void 0 : A('40');
            return a._reactRootContainer
              ? (ci(function() {
                  ti(null, null, a, !1, function() {
                    a._reactRootContainer = null;
                  });
                }),
                !0)
              : !1;
          },
          unstable_createPortal: function() {
            return ui.apply(void 0, arguments);
          },
          unstable_batchedUpdates: bi,
          unstable_deferredUpdates: Hh,
          unstable_interactiveUpdates: ei,
          flushSync: di,
          unstable_flushControlled: fi,
          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            EventPluginHub: Ka,
            EventPluginRegistry: va,
            EventPropagators: $a,
            ReactControlledComponent: Rb,
            ReactDOMComponentTree: Qa,
            ReactDOMEventListener: Nd,
          },
          unstable_createRoot: function(a, b) {
            return new qi(a, !0, null != b && !0 === b.hydrate);
          },
        };
        ki({
          findFiberByHostInstance: Na,
          bundleType: 0,
          version: '16.4.1',
          rendererPackageName: 'react-dom',
        });
        var Ai = { default: vi },
          Bi = (Ai && vi) || Ai;
        module.exports = Bi.default ? Bi.default : Bi;

        /***/
      },
      /* 107 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var canUseDOM = !!(
          typeof window !== 'undefined' &&
          window.document &&
          window.document.createElement
        );

        /**
         * Simple, lightweight module assisting with the detection and context of
         * Worker. Helps avoid circular dependencies and allows code to reason about
         * whether or not they are in a Worker, even if they never include the main
         * `ReactWorker` dependency.
         */
        var ExecutionEnvironment = {
          canUseDOM: canUseDOM,

          canUseWorkers: typeof Worker !== 'undefined',

          canUseEventListeners:
            canUseDOM && !!(window.addEventListener || window.attachEvent),

          canUseViewport: canUseDOM && !!window.screen,

          isInWorker: !canUseDOM, // For now, this is true - might change in the future.
        };

        module.exports = ExecutionEnvironment;

        /***/
      },
      /* 108 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /* eslint-disable fb-www/typeof-undefined */

        /**
         * Same as document.activeElement but wraps in a try-catch block. In IE it is
         * not safe to call document.activeElement if there is nothing focused.
         *
         * The activeElement will be null only if the document or document body is not
         * yet defined.
         *
         * @param {?DOMDocument} doc Defaults to current document.
         * @return {?DOMElement}
         */

        function getActiveElement(doc) /*?DOMElement*/ {
          doc = doc || (typeof document !== 'undefined' ? document : undefined);
          if (typeof doc === 'undefined') {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }

        module.exports = getActiveElement;

        /***/
      },
      /* 109 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         *
         */

        /*eslint-disable no-self-compare */

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        /**
         * inlined Object.is polyfill to avoid requiring consumers ship their own
         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
         */
        function is(x, y) {
          // SameValue algorithm
          if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            // Added the nonzero y check to make Flow happy, but it is redundant
            return x !== 0 || y !== 0 || 1 / x === 1 / y;
          } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
          }
        }

        /**
         * Performs equality by iterating through keys on an object and returning false
         * when any key has values which are not strictly equal between the arguments.
         * Returns true when the values of all keys are strictly equal.
         */
        function shallowEqual(objA, objB) {
          if (is(objA, objB)) {
            return true;
          }

          if (
            typeof objA !== 'object' ||
            objA === null ||
            typeof objB !== 'object' ||
            objB === null
          ) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) {
            return false;
          }

          // Test for A's keys different from B.
          for (var i = 0; i < keysA.length; i++) {
            if (
              !hasOwnProperty.call(objB, keysA[i]) ||
              !is(objA[keysA[i]], objB[keysA[i]])
            ) {
              return false;
            }
          }

          return true;
        }

        module.exports = shallowEqual;

        /***/
      },
      /* 110 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         */

        var isTextNode = __webpack_require__(111);

        /*eslint-disable no-bitwise */

        /**
         * Checks if a given DOM node contains or is another DOM node.
         */
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ('contains' in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }

        module.exports = containsNode;

        /***/
      },
      /* 111 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var isNode = __webpack_require__(112);

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM text node.
         */
        function isTextNode(object) {
          return isNode(object) && object.nodeType == 3;
        }

        module.exports = isTextNode;

        /***/
      },
      /* 112 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        /**
         * @param {*} object The object to check.
         * @return {boolean} Whether or not the object is a DOM node.
         */

        function isNode(object) {
          var doc = object ? object.ownerDocument || object : document;
          var defaultView = doc.defaultView || window;
          return !!(
            object &&
            (typeof defaultView.Node === 'function'
              ? object instanceof defaultView.Node
              : typeof object === 'object' &&
                typeof object.nodeType === 'number' &&
                typeof object.nodeName === 'string')
          );
        }

        module.exports = isNode;

        /***/
      },
      /* 113 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _App = __webpack_require__(114);

        Object.defineProperty(exports, 'default', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_App).default;
          },
        });

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /***/
      },
      /* 114 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function(module) {
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });

          var _react = __webpack_require__(0);

          var _react2 = _interopRequireDefault(_react);

          var _reactRedux = __webpack_require__(24);

          var _reactStatic = __webpack_require__(7);

          var _reactHotLoader = __webpack_require__(214);

          var _reactStaticRoutes = __webpack_require__(216);

          var _reactStaticRoutes2 = _interopRequireDefault(_reactStaticRoutes);

          var _Layout = __webpack_require__(323);

          var _Layout2 = _interopRequireDefault(_Layout);

          var _store = __webpack_require__(345);

          var _store2 = _interopRequireDefault(_store);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }

          // hot reloader
          var App = (0, _reactStatic.withSiteData)(function(props) {
            return _react2.default.createElement(
              _reactRedux.Provider,
              { store: _store2.default },
              _react2.default.createElement(
                _reactStatic.Router,
                null,
                _react2.default.createElement(
                  _Layout2.default,
                  props,
                  _react2.default.createElement(
                    _reactStaticRoutes2.default,
                    null
                  )
                )
              )
            );
          });
          // redux

          // static routes
          exports.default = (0, _reactHotLoader.hot)(module)(App);
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(18)(module)));

        /***/
      },
      /* 115 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = createProvider;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__ = __webpack_require__(
          49
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_warning__ = __webpack_require__(
          25
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var didWarnAboutReceivingStore = false;
        function warnAboutReceivingStore() {
          if (didWarnAboutReceivingStore) {
            return;
          }
          didWarnAboutReceivingStore = true;

          Object(
            __WEBPACK_IMPORTED_MODULE_3__utils_warning__['a' /* default */]
          )(
            '<Provider> does not support changing `store` on the fly. ' +
              'It is most likely that you see this error because you updated to ' +
              'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' +
              'automatically. See https://github.com/reactjs/react-redux/releases/' +
              'tag/v2.0.0 for the migration instructions.'
          );
        }

        function createProvider() {
          var _Provider$childContex;

          var storeKey =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 'store';
          var subKey = arguments[1];

          var subscriptionKey = subKey || storeKey + 'Subscription';

          var Provider = (function(_Component) {
            _inherits(Provider, _Component);

            Provider.prototype.getChildContext = function getChildContext() {
              var _ref;

              return (
                (_ref = {}),
                (_ref[storeKey] = this[storeKey]),
                (_ref[subscriptionKey] = null),
                _ref
              );
            };

            function Provider(props, context) {
              _classCallCheck(this, Provider);

              var _this = _possibleConstructorReturn(
                this,
                _Component.call(this, props, context)
              );

              _this[storeKey] = props.store;
              return _this;
            }

            Provider.prototype.render = function render() {
              return __WEBPACK_IMPORTED_MODULE_0_react__['Children'].only(
                this.props.children
              );
            };

            return Provider;
          })(__WEBPACK_IMPORTED_MODULE_0_react__['Component']);

          if (false) {
            Provider.prototype.componentWillReceiveProps = function(nextProps) {
              if (this[storeKey] !== nextProps.store) {
                warnAboutReceivingStore();
              }
            };
          }

          Provider.propTypes = {
            store:
              __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[
                'a' /* storeShape */
              ].isRequired,
            children:
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.element
                .isRequired,
          };
          Provider.childContextTypes = ((_Provider$childContex = {}),
          (_Provider$childContex[storeKey] =
            __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[
              'a' /* storeShape */
            ].isRequired),
          (_Provider$childContex[subscriptionKey] =
            __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__[
              'b' /* subscriptionShape */
            ]),
          _Provider$childContex);

          return Provider;
        }

        /* harmony default export */ __webpack_exports__[
          'b'
        ] = createProvider();

        /***/
      },
      /* 116 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret = __webpack_require__(117);

        function emptyFunction() {}

        module.exports = function() {
          function shim(
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            if (secret === ReactPropTypesSecret) {
              // It is still safe when called from React.
              return;
            }
            var err = new Error(
              'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                'Use PropTypes.checkPropTypes() to call them. ' +
                'Read more at http://fb.me/use-check-prop-types'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          shim.isRequired = shim;
          function getShim() {
            return shim;
          }
          // Important!
          // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
          var ReactPropTypes = {
            array: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            symbol: shim,

            any: shim,
            arrayOf: getShim,
            element: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,
          };

          ReactPropTypes.checkPropTypes = emptyFunction;
          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /***/
      },
      /* 117 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret =
          'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

        module.exports = ReactPropTypesSecret;

        /***/
      },
      /* 118 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return Subscription;
          }
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        // encapsulates the subscription logic for connecting a component to the redux store, as
        // well as nesting subscriptions of descendant components, so that we can ensure the
        // ancestor components re-render before descendants

        var CLEARED = null;
        var nullListeners = {
          notify: function notify() {},
        };

        function createListenerCollection() {
          // the current/next pattern is copied from redux's createStore code.
          // TODO: refactor+expose that code to be reusable here?
          var current = [];
          var next = [];

          return {
            clear: function clear() {
              next = CLEARED;
              current = CLEARED;
            },
            notify: function notify() {
              var listeners = (current = next);
              for (var i = 0; i < listeners.length; i++) {
                listeners[i]();
              }
            },
            get: function get() {
              return next;
            },
            subscribe: function subscribe(listener) {
              var isSubscribed = true;
              if (next === current) next = current.slice();
              next.push(listener);

              return function unsubscribe() {
                if (!isSubscribed || current === CLEARED) return;
                isSubscribed = false;

                if (next === current) next = current.slice();
                next.splice(next.indexOf(listener), 1);
              };
            },
          };
        }

        var Subscription = (function() {
          function Subscription(store, parentSub, onStateChange) {
            _classCallCheck(this, Subscription);

            this.store = store;
            this.parentSub = parentSub;
            this.onStateChange = onStateChange;
            this.unsubscribe = null;
            this.listeners = nullListeners;
          }

          Subscription.prototype.addNestedSub = function addNestedSub(
            listener
          ) {
            this.trySubscribe();
            return this.listeners.subscribe(listener);
          };

          Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
            this.listeners.notify();
          };

          Subscription.prototype.isSubscribed = function isSubscribed() {
            return Boolean(this.unsubscribe);
          };

          Subscription.prototype.trySubscribe = function trySubscribe() {
            if (!this.unsubscribe) {
              this.unsubscribe = this.parentSub
                ? this.parentSub.addNestedSub(this.onStateChange)
                : this.store.subscribe(this.onStateChange);

              this.listeners = createListenerCollection();
            }
          };

          Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
            if (this.unsubscribe) {
              this.unsubscribe();
              this.unsubscribe = null;
              this.listeners.clear();
              this.listeners = nullListeners;
            }
          };

          return Subscription;
        })();

        /***/
      },
      /* 119 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export createConnect */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__ = __webpack_require__(
          50
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__ = __webpack_require__(
          120
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__ = __webpack_require__(
          121
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__ = __webpack_require__(
          136
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mergeProps__ = __webpack_require__(
          137
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__selectorFactory__ = __webpack_require__(
          138
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        /*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

        function match(arg, factories, name) {
          for (var i = factories.length - 1; i >= 0; i--) {
            var result = factories[i](arg);
            if (result) return result;
          }

          return function(dispatch, options) {
            throw new Error(
              'Invalid value of type ' +
                typeof arg +
                ' for ' +
                name +
                ' argument when connecting component ' +
                options.wrappedComponentName +
                '.'
            );
          };
        }

        function strictEqual(a, b) {
          return a === b;
        }

        // createConnect with default args builds the 'official' connect behavior. Calling it with
        // different options opens up some testing and extensibility scenarios
        function createConnect() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            _ref$connectHOC = _ref.connectHOC,
            connectHOC =
              _ref$connectHOC === undefined
                ? __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__[
                    'a' /* default */
                  ]
                : _ref$connectHOC,
            _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
            mapStateToPropsFactories =
              _ref$mapStateToPropsF === undefined
                ? __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__[
                    'a' /* default */
                  ]
                : _ref$mapStateToPropsF,
            _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
            mapDispatchToPropsFactories =
              _ref$mapDispatchToPro === undefined
                ? __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__[
                    'a' /* default */
                  ]
                : _ref$mapDispatchToPro,
            _ref$mergePropsFactor = _ref.mergePropsFactories,
            mergePropsFactories =
              _ref$mergePropsFactor === undefined
                ? __WEBPACK_IMPORTED_MODULE_4__mergeProps__['a' /* default */]
                : _ref$mergePropsFactor,
            _ref$selectorFactory = _ref.selectorFactory,
            selectorFactory =
              _ref$selectorFactory === undefined
                ? __WEBPACK_IMPORTED_MODULE_5__selectorFactory__[
                    'a' /* default */
                  ]
                : _ref$selectorFactory;

          return function connect(
            mapStateToProps,
            mapDispatchToProps,
            mergeProps
          ) {
            var _ref2 =
                arguments.length > 3 && arguments[3] !== undefined
                  ? arguments[3]
                  : {},
              _ref2$pure = _ref2.pure,
              pure = _ref2$pure === undefined ? true : _ref2$pure,
              _ref2$areStatesEqual = _ref2.areStatesEqual,
              areStatesEqual =
                _ref2$areStatesEqual === undefined
                  ? strictEqual
                  : _ref2$areStatesEqual,
              _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
              areOwnPropsEqual =
                _ref2$areOwnPropsEqua === undefined
                  ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[
                      'a' /* default */
                    ]
                  : _ref2$areOwnPropsEqua,
              _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
              areStatePropsEqual =
                _ref2$areStatePropsEq === undefined
                  ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[
                      'a' /* default */
                    ]
                  : _ref2$areStatePropsEq,
              _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
              areMergedPropsEqual =
                _ref2$areMergedPropsE === undefined
                  ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__[
                      'a' /* default */
                    ]
                  : _ref2$areMergedPropsE,
              extraOptions = _objectWithoutProperties(_ref2, [
                'pure',
                'areStatesEqual',
                'areOwnPropsEqual',
                'areStatePropsEqual',
                'areMergedPropsEqual',
              ]);

            var initMapStateToProps = match(
              mapStateToProps,
              mapStateToPropsFactories,
              'mapStateToProps'
            );
            var initMapDispatchToProps = match(
              mapDispatchToProps,
              mapDispatchToPropsFactories,
              'mapDispatchToProps'
            );
            var initMergeProps = match(
              mergeProps,
              mergePropsFactories,
              'mergeProps'
            );

            return connectHOC(
              selectorFactory,
              _extends(
                {
                  // used in error messages
                  methodName: 'connect',

                  // used to compute Connect's displayName from the wrapped component's displayName.
                  getDisplayName: function getDisplayName(name) {
                    return 'Connect(' + name + ')';
                  },

                  // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
                  shouldHandleStateChanges: Boolean(mapStateToProps),

                  // passed through to selectorFactory
                  initMapStateToProps: initMapStateToProps,
                  initMapDispatchToProps: initMapDispatchToProps,
                  initMergeProps: initMergeProps,
                  pure: pure,
                  areStatesEqual: areStatesEqual,
                  areOwnPropsEqual: areOwnPropsEqual,
                  areStatePropsEqual: areStatePropsEqual,
                  areMergedPropsEqual: areMergedPropsEqual,
                },
                extraOptions
              )
            );
          };
        }

        /* harmony default export */ __webpack_exports__['a'] = createConnect();

        /***/
      },
      /* 120 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = shallowEqual;
        var hasOwn = Object.prototype.hasOwnProperty;

        function is(x, y) {
          if (x === y) {
            return x !== 0 || y !== 0 || 1 / x === 1 / y;
          } else {
            return x !== x && y !== y;
          }
        }

        function shallowEqual(objA, objB) {
          if (is(objA, objB)) return true;

          if (
            typeof objA !== 'object' ||
            objA === null ||
            typeof objB !== 'object' ||
            objB === null
          ) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) return false;

          for (var i = 0; i < keysA.length; i++) {
            if (
              !hasOwn.call(objB, keysA[i]) ||
              !is(objA[keysA[i]], objB[keysA[i]])
            ) {
              return false;
            }
          }

          return true;
        }

        /***/
      },
      /* 121 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export whenMapDispatchToPropsIsFunction */
        /* unused harmony export whenMapDispatchToPropsIsMissing */
        /* unused harmony export whenMapDispatchToPropsIsObject */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(
          19
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(
          55
        );

        function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
          return typeof mapDispatchToProps === 'function'
            ? Object(
                __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[
                  'b' /* wrapMapToPropsFunc */
                ]
              )(mapDispatchToProps, 'mapDispatchToProps')
            : undefined;
        }

        function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
          return !mapDispatchToProps
            ? Object(
                __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[
                  'a' /* wrapMapToPropsConstant */
                ]
              )(function(dispatch) {
                return { dispatch: dispatch };
              })
            : undefined;
        }

        function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
          return mapDispatchToProps && typeof mapDispatchToProps === 'object'
            ? Object(
                __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__[
                  'a' /* wrapMapToPropsConstant */
                ]
              )(function(dispatch) {
                return Object(
                  __WEBPACK_IMPORTED_MODULE_0_redux__['bindActionCreators']
                )(mapDispatchToProps, dispatch);
              })
            : undefined;
        }

        /* harmony default export */ __webpack_exports__['a'] = [
          whenMapDispatchToPropsIsFunction,
          whenMapDispatchToPropsIsMissing,
          whenMapDispatchToPropsIsObject,
        ];

        /***/
      },
      /* 122 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(
          52
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(
          125
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(
          126
        );

        /** `Object#toString` result references. */
        var nullTag = '[object Null]',
          undefinedTag = '[object Undefined]';

        /** Built-in value references. */
        var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[
          'a' /* default */
        ]
          ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */]
              .toStringTag
          : undefined;

        /**
         * The base implementation of `getTag` without fallbacks for buggy environments.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object(value)
            ? Object(
                __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__['a' /* default */]
              )(value)
            : Object(
                __WEBPACK_IMPORTED_MODULE_2__objectToString_js__[
                  'a' /* default */
                ]
              )(value);
        }

        /* harmony default export */ __webpack_exports__['a'] = baseGetTag;

        /***/
      },
      /* 123 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(
          124
        );

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root =
          __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__['a' /* default */] ||
          freeSelf ||
          Function('return this')();

        /* harmony default export */ __webpack_exports__['a'] = root;

        /***/
      },
      /* 124 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        /* harmony default export */ __webpack_exports__['a'] = freeGlobal;

        /***/
      },
      /* 125 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(
          52
        );

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[
          'a' /* default */
        ]
          ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__['a' /* default */]
              .toStringTag
          : undefined;

        /**
         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the raw `toStringTag`.
         */
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

          try {
            value[symToStringTag] = undefined;
            var unmasked = true;
          } catch (e) {}

          var result = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result;
        }

        /* harmony default export */ __webpack_exports__['a'] = getRawTag;

        /***/
      },
      /* 126 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /**
         * Converts `value` to a string using `Object.prototype.toString`.
         *
         * @private
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         */
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }

        /* harmony default export */ __webpack_exports__['a'] = objectToString;

        /***/
      },
      /* 127 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(
          128
        );

        /** Built-in value references. */
        var getPrototype = Object(
          __WEBPACK_IMPORTED_MODULE_0__overArg_js__['a' /* default */]
        )(Object.getPrototypeOf, Object);

        /* harmony default export */ __webpack_exports__['a'] = getPrototype;

        /***/
      },
      /* 128 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /**
         * Creates a unary function that invokes `func` with its argument transformed.
         *
         * @private
         * @param {Function} func The function to wrap.
         * @param {Function} transform The argument transform.
         * @returns {Function} Returns the new function.
         */
        function overArg(func, transform) {
          return function(arg) {
            return func(transform(arg));
          };
        }

        /* harmony default export */ __webpack_exports__['a'] = overArg;

        /***/
      },
      /* 129 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return value != null && typeof value == 'object';
        }

        /* harmony default export */ __webpack_exports__['a'] = isObjectLike;

        /***/
      },
      /* 130 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function(module) {
          /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ponyfill_js__ = __webpack_require__(
            132
          );
          /* global window */

          var root;

          if (typeof self !== 'undefined') {
            root = self;
          } else if (typeof window !== 'undefined') {
            root = window;
          } else if (typeof global !== 'undefined') {
            root = global;
          } else if (true) {
            root = module;
          } else {
            root = Function('return this')();
          }

          var result = Object(
            __WEBPACK_IMPORTED_MODULE_0__ponyfill_js__['a' /* default */]
          )(root);
          /* harmony default export */ __webpack_exports__['a'] = result;
          /* WEBPACK VAR INJECTION */
        }.call(__webpack_exports__, __webpack_require__(131)(module)));

        /***/
      },
      /* 131 */
      /***/ function(module, exports) {
        module.exports = function(originalModule) {
          if (!originalModule.webpackPolyfill) {
            var module = Object.create(originalModule);
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, 'loaded', {
              enumerable: true,
              get: function() {
                return module.l;
              },
            });
            Object.defineProperty(module, 'id', {
              enumerable: true,
              get: function() {
                return module.i;
              },
            });
            Object.defineProperty(module, 'exports', {
              enumerable: true,
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },
      /* 132 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = symbolObservablePonyfill;
        function symbolObservablePonyfill(root) {
          var result;
          var Symbol = root.Symbol;

          if (typeof Symbol === 'function') {
            if (Symbol.observable) {
              result = Symbol.observable;
            } else {
              result = Symbol('observable');
              Symbol.observable = result;
            }
          } else {
            result = '@@observable';
          }

          return result;
        }

        /***/
      },
      /* 133 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = combineReducers;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(
          51
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(
          27
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(
          53
        );

        function getUndefinedStateErrorMessage(key, action) {
          var actionType = action && action.type;
          var actionName =
            (actionType && '"' + actionType.toString() + '"') || 'an action';

          return (
            'Given action ' +
            actionName +
            ', reducer "' +
            key +
            '" returned undefined. ' +
            'To ignore an action, you must explicitly return the previous state. ' +
            'If you want this reducer to hold no value, you can return null instead of undefined.'
          );
        }

        function getUnexpectedStateShapeWarningMessage(
          inputState,
          reducers,
          action,
          unexpectedKeyCache
        ) {
          var reducerKeys = Object.keys(reducers);
          var argumentName =
            action &&
            action.type ===
              __WEBPACK_IMPORTED_MODULE_0__createStore__['a' /* ActionTypes */]
                .INIT
              ? 'preloadedState argument passed to createStore'
              : 'previous state received by the reducer';

          if (reducerKeys.length === 0) {
            return (
              'Store does not have a valid reducer. Make sure the argument passed ' +
              'to combineReducers is an object whose values are reducers.'
            );
          }

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__[
                'a' /* default */
              ]
            )(inputState)
          ) {
            return (
              'The ' +
              argumentName +
              ' has unexpected type of "' +
              {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] +
              '". Expected argument to be an object with the following ' +
              ('keys: "' + reducerKeys.join('", "') + '"')
            );
          }

          var unexpectedKeys = Object.keys(inputState).filter(function(key) {
            return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
          });

          unexpectedKeys.forEach(function(key) {
            unexpectedKeyCache[key] = true;
          });

          if (unexpectedKeys.length > 0) {
            return (
              'Unexpected ' +
              (unexpectedKeys.length > 1 ? 'keys' : 'key') +
              ' ' +
              ('"' +
                unexpectedKeys.join('", "') +
                '" found in ' +
                argumentName +
                '. ') +
              'Expected to find one of the known reducer keys instead: ' +
              ('"' +
                reducerKeys.join('", "') +
                '". Unexpected keys will be ignored.')
            );
          }
        }

        function assertReducerShape(reducers) {
          Object.keys(reducers).forEach(function(key) {
            var reducer = reducers[key];
            var initialState = reducer(undefined, {
              type:
                __WEBPACK_IMPORTED_MODULE_0__createStore__[
                  'a' /* ActionTypes */
                ].INIT,
            });

            if (typeof initialState === 'undefined') {
              throw new Error(
                'Reducer "' +
                  key +
                  '" returned undefined during initialization. ' +
                  'If the state passed to the reducer is undefined, you must ' +
                  'explicitly return the initial state. The initial state may ' +
                  "not be undefined. If you don't want to set a value for this reducer, " +
                  'you can use null instead of undefined.'
              );
            }

            var type =
              '@@redux/PROBE_UNKNOWN_ACTION_' +
              Math.random()
                .toString(36)
                .substring(7)
                .split('')
                .join('.');
            if (typeof reducer(undefined, { type: type }) === 'undefined') {
              throw new Error(
                'Reducer "' +
                  key +
                  '" returned undefined when probed with a random type. ' +
                  ("Don't try to handle " +
                    __WEBPACK_IMPORTED_MODULE_0__createStore__[
                      'a' /* ActionTypes */
                    ].INIT +
                    ' or other actions in "redux/*" ') +
                  'namespace. They are considered private. Instead, you must return the ' +
                  'current state for any unknown actions, unless it is undefined, ' +
                  'in which case you must return the initial state, regardless of the ' +
                  'action type. The initial state may not be undefined, but can be null.'
              );
            }
          });
        }

        /**
         * Turns an object whose values are different reducer functions, into a single
         * reducer function. It will call every child reducer, and gather their results
         * into a single state object, whose keys correspond to the keys of the passed
         * reducer functions.
         *
         * @param {Object} reducers An object whose values correspond to different
         * reducer functions that need to be combined into one. One handy way to obtain
         * it is to use ES6 `import * as reducers` syntax. The reducers may never return
         * undefined for any action. Instead, they should return their initial state
         * if the state passed to them was undefined, and the current state for any
         * unrecognized action.
         *
         * @returns {Function} A reducer function that invokes every reducer inside the
         * passed object, and builds a state object with the same shape.
         */
        function combineReducers(reducers) {
          var reducerKeys = Object.keys(reducers);
          var finalReducers = {};
          for (var i = 0; i < reducerKeys.length; i++) {
            var key = reducerKeys[i];

            if (false) {
              if (typeof reducers[key] === 'undefined') {
                warning('No reducer provided for key "' + key + '"');
              }
            }

            if (typeof reducers[key] === 'function') {
              finalReducers[key] = reducers[key];
            }
          }
          var finalReducerKeys = Object.keys(finalReducers);

          var unexpectedKeyCache = void 0;
          if (false) {
            unexpectedKeyCache = {};
          }

          var shapeAssertionError = void 0;
          try {
            assertReducerShape(finalReducers);
          } catch (e) {
            shapeAssertionError = e;
          }

          return function combination() {
            var state =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {};
            var action = arguments[1];

            if (shapeAssertionError) {
              throw shapeAssertionError;
            }

            if (false) {
              var warningMessage = getUnexpectedStateShapeWarningMessage(
                state,
                finalReducers,
                action,
                unexpectedKeyCache
              );
              if (warningMessage) {
                warning(warningMessage);
              }
            }

            var hasChanged = false;
            var nextState = {};
            for (var _i = 0; _i < finalReducerKeys.length; _i++) {
              var _key = finalReducerKeys[_i];
              var reducer = finalReducers[_key];
              var previousStateForKey = state[_key];
              var nextStateForKey = reducer(previousStateForKey, action);
              if (typeof nextStateForKey === 'undefined') {
                var errorMessage = getUndefinedStateErrorMessage(_key, action);
                throw new Error(errorMessage);
              }
              nextState[_key] = nextStateForKey;
              hasChanged =
                hasChanged || nextStateForKey !== previousStateForKey;
            }
            return hasChanged ? nextState : state;
          };
        }

        /***/
      },
      /* 134 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = bindActionCreators;
        function bindActionCreator(actionCreator, dispatch) {
          return function() {
            return dispatch(actionCreator.apply(undefined, arguments));
          };
        }

        /**
         * Turns an object whose values are action creators, into an object with the
         * same keys, but with every function wrapped into a `dispatch` call so they
         * may be invoked directly. This is just a convenience method, as you can call
         * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
         *
         * For convenience, you can also pass a single function as the first argument,
         * and get a function in return.
         *
         * @param {Function|Object} actionCreators An object whose values are action
         * creator functions. One handy way to obtain it is to use ES6 `import * as`
         * syntax. You may also pass a single function.
         *
         * @param {Function} dispatch The `dispatch` function available on your Redux
         * store.
         *
         * @returns {Function|Object} The object mimicking the original object, but with
         * every action creator wrapped into the `dispatch` call. If you passed a
         * function as `actionCreators`, the return value will also be a single
         * function.
         */
        function bindActionCreators(actionCreators, dispatch) {
          if (typeof actionCreators === 'function') {
            return bindActionCreator(actionCreators, dispatch);
          }

          if (typeof actionCreators !== 'object' || actionCreators === null) {
            throw new Error(
              'bindActionCreators expected an object or a function, instead received ' +
                (actionCreators === null ? 'null' : typeof actionCreators) +
                '. ' +
                'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?'
            );
          }

          var keys = Object.keys(actionCreators);
          var boundActionCreators = {};
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            var actionCreator = actionCreators[key];
            if (typeof actionCreator === 'function') {
              boundActionCreators[key] = bindActionCreator(
                actionCreator,
                dispatch
              );
            }
          }
          return boundActionCreators;
        }

        /***/
      },
      /* 135 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = applyMiddleware;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(
          54
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        /**
         * Creates a store enhancer that applies middleware to the dispatch method
         * of the Redux store. This is handy for a variety of tasks, such as expressing
         * asynchronous actions in a concise manner, or logging every action payload.
         *
         * See `redux-thunk` package as an example of the Redux middleware.
         *
         * Because middleware is potentially asynchronous, this should be the first
         * store enhancer in the composition chain.
         *
         * Note that each middleware will be given the `dispatch` and `getState` functions
         * as named arguments.
         *
         * @param {...Function} middlewares The middleware chain to be applied.
         * @returns {Function} A store enhancer applying the middleware.
         */
        function applyMiddleware() {
          for (
            var _len = arguments.length, middlewares = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            middlewares[_key] = arguments[_key];
          }

          return function(createStore) {
            return function(reducer, preloadedState, enhancer) {
              var store = createStore(reducer, preloadedState, enhancer);
              var _dispatch = store.dispatch;
              var chain = [];

              var middlewareAPI = {
                getState: store.getState,
                dispatch: function dispatch(action) {
                  return _dispatch(action);
                },
              };
              chain = middlewares.map(function(middleware) {
                return middleware(middlewareAPI);
              });
              _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__[
                'a' /* default */
              ].apply(undefined, chain)(store.dispatch);

              return _extends({}, store, {
                dispatch: _dispatch,
              });
            };
          };
        }

        /***/
      },
      /* 136 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export whenMapStateToPropsIsFunction */
        /* unused harmony export whenMapStateToPropsIsMissing */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(
          55
        );

        function whenMapStateToPropsIsFunction(mapStateToProps) {
          return typeof mapStateToProps === 'function'
            ? Object(
                __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__[
                  'b' /* wrapMapToPropsFunc */
                ]
              )(mapStateToProps, 'mapStateToProps')
            : undefined;
        }

        function whenMapStateToPropsIsMissing(mapStateToProps) {
          return !mapStateToProps
            ? Object(
                __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__[
                  'a' /* wrapMapToPropsConstant */
                ]
              )(function() {
                return {};
              })
            : undefined;
        }

        /* harmony default export */ __webpack_exports__['a'] = [
          whenMapStateToPropsIsFunction,
          whenMapStateToPropsIsMissing,
        ];

        /***/
      },
      /* 137 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export defaultMergeProps */
        /* unused harmony export wrapMergePropsFunc */
        /* unused harmony export whenMergePropsIsFunction */
        /* unused harmony export whenMergePropsIsOmitted */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(
          56
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function defaultMergeProps(stateProps, dispatchProps, ownProps) {
          return _extends({}, ownProps, stateProps, dispatchProps);
        }

        function wrapMergePropsFunc(mergeProps) {
          return function initMergePropsProxy(dispatch, _ref) {
            var displayName = _ref.displayName,
              pure = _ref.pure,
              areMergedPropsEqual = _ref.areMergedPropsEqual;

            var hasRunOnce = false;
            var mergedProps = void 0;

            return function mergePropsProxy(
              stateProps,
              dispatchProps,
              ownProps
            ) {
              var nextMergedProps = mergeProps(
                stateProps,
                dispatchProps,
                ownProps
              );

              if (hasRunOnce) {
                if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))
                  mergedProps = nextMergedProps;
              } else {
                hasRunOnce = true;
                mergedProps = nextMergedProps;

                if (false)
                  verifyPlainObject(mergedProps, displayName, 'mergeProps');
              }

              return mergedProps;
            };
          };
        }

        function whenMergePropsIsFunction(mergeProps) {
          return typeof mergeProps === 'function'
            ? wrapMergePropsFunc(mergeProps)
            : undefined;
        }

        function whenMergePropsIsOmitted(mergeProps) {
          return !mergeProps
            ? function() {
                return defaultMergeProps;
              }
            : undefined;
        }

        /* harmony default export */ __webpack_exports__['a'] = [
          whenMergePropsIsFunction,
          whenMergePropsIsOmitted,
        ];

        /***/
      },
      /* 138 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export impureFinalPropsSelectorFactory */
        /* unused harmony export pureFinalPropsSelectorFactory */
        /* harmony export (immutable) */ __webpack_exports__[
          'a'
        ] = finalPropsSelectorFactory;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__ = __webpack_require__(
          139
        );
        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function impureFinalPropsSelectorFactory(
          mapStateToProps,
          mapDispatchToProps,
          mergeProps,
          dispatch
        ) {
          return function impureFinalPropsSelector(state, ownProps) {
            return mergeProps(
              mapStateToProps(state, ownProps),
              mapDispatchToProps(dispatch, ownProps),
              ownProps
            );
          };
        }

        function pureFinalPropsSelectorFactory(
          mapStateToProps,
          mapDispatchToProps,
          mergeProps,
          dispatch,
          _ref
        ) {
          var areStatesEqual = _ref.areStatesEqual,
            areOwnPropsEqual = _ref.areOwnPropsEqual,
            areStatePropsEqual = _ref.areStatePropsEqual;

          var hasRunAtLeastOnce = false;
          var state = void 0;
          var ownProps = void 0;
          var stateProps = void 0;
          var dispatchProps = void 0;
          var mergedProps = void 0;

          function handleFirstCall(firstState, firstOwnProps) {
            state = firstState;
            ownProps = firstOwnProps;
            stateProps = mapStateToProps(state, ownProps);
            dispatchProps = mapDispatchToProps(dispatch, ownProps);
            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            hasRunAtLeastOnce = true;
            return mergedProps;
          }

          function handleNewPropsAndNewState() {
            stateProps = mapStateToProps(state, ownProps);

            if (mapDispatchToProps.dependsOnOwnProps)
              dispatchProps = mapDispatchToProps(dispatch, ownProps);

            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            return mergedProps;
          }

          function handleNewProps() {
            if (mapStateToProps.dependsOnOwnProps)
              stateProps = mapStateToProps(state, ownProps);

            if (mapDispatchToProps.dependsOnOwnProps)
              dispatchProps = mapDispatchToProps(dispatch, ownProps);

            mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
            return mergedProps;
          }

          function handleNewState() {
            var nextStateProps = mapStateToProps(state, ownProps);
            var statePropsChanged = !areStatePropsEqual(
              nextStateProps,
              stateProps
            );
            stateProps = nextStateProps;

            if (statePropsChanged)
              mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

            return mergedProps;
          }

          function handleSubsequentCalls(nextState, nextOwnProps) {
            var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
            var stateChanged = !areStatesEqual(nextState, state);
            state = nextState;
            ownProps = nextOwnProps;

            if (propsChanged && stateChanged)
              return handleNewPropsAndNewState();
            if (propsChanged) return handleNewProps();
            if (stateChanged) return handleNewState();
            return mergedProps;
          }

          return function pureFinalPropsSelector(nextState, nextOwnProps) {
            return hasRunAtLeastOnce
              ? handleSubsequentCalls(nextState, nextOwnProps)
              : handleFirstCall(nextState, nextOwnProps);
          };
        }

        // TODO: Add more comments

        // If pure is true, the selector returned by selectorFactory will memoize its results,
        // allowing connectAdvanced's shouldComponentUpdate to return false if final
        // props have not changed. If false, the selector will always return a new
        // object and shouldComponentUpdate will always return true.

        function finalPropsSelectorFactory(dispatch, _ref2) {
          var initMapStateToProps = _ref2.initMapStateToProps,
            initMapDispatchToProps = _ref2.initMapDispatchToProps,
            initMergeProps = _ref2.initMergeProps,
            options = _objectWithoutProperties(_ref2, [
              'initMapStateToProps',
              'initMapDispatchToProps',
              'initMergeProps',
            ]);

          var mapStateToProps = initMapStateToProps(dispatch, options);
          var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
          var mergeProps = initMergeProps(dispatch, options);

          if (false) {
            verifySubselectors(
              mapStateToProps,
              mapDispatchToProps,
              mergeProps,
              options.displayName
            );
          }

          var selectorFactory = options.pure
            ? pureFinalPropsSelectorFactory
            : impureFinalPropsSelectorFactory;

          return selectorFactory(
            mapStateToProps,
            mapDispatchToProps,
            mergeProps,
            dispatch,
            options
          );
        }

        /***/
      },
      /* 139 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(
          25
        );

        function verify(selector, methodName, displayName) {
          if (!selector) {
            throw new Error(
              'Unexpected value for ' + methodName + ' in ' + displayName + '.'
            );
          } else if (
            methodName === 'mapStateToProps' ||
            methodName === 'mapDispatchToProps'
          ) {
            if (!selector.hasOwnProperty('dependsOnOwnProps')) {
              Object(
                __WEBPACK_IMPORTED_MODULE_0__utils_warning__['a' /* default */]
              )(
                'The selector for ' +
                  methodName +
                  ' of ' +
                  displayName +
                  ' did not specify a value for dependsOnOwnProps.'
              );
            }
          }
        }

        function verifySubselectors(
          mapStateToProps,
          mapDispatchToProps,
          mergeProps,
          displayName
        ) {
          verify(mapStateToProps, 'mapStateToProps', displayName);
          verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
          verify(mergeProps, 'mergeProps', displayName);
        }

        /***/
      },
      /* 140 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          57
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(
          12
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(
          29
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for a <Router> that uses HTML5 history.
         */

        var BrowserRouter = (function(_React$Component) {
          _inherits(BrowserRouter, _React$Component);

          function BrowserRouter() {
            var _temp, _this, _ret;

            _classCallCheck(this, BrowserRouter);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.history = Object(
                __WEBPACK_IMPORTED_MODULE_3_history__[
                  'a' /* createBrowserHistory */
                ]
              )(_this.props)),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          BrowserRouter.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !this.props.history,
              '<BrowserRouter> ignores the history prop. To use a custom history, ' +
                'use `import { Router }` instead of `import { BrowserRouter as Router }`.'
            );
          };

          BrowserRouter.prototype.render = function render() {
            return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(
              __WEBPACK_IMPORTED_MODULE_4__Router__['a' /* default */],
              { history: this.history, children: this.props.children }
            );
          };

          return BrowserRouter;
        })(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

        BrowserRouter.propTypes = {
          basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
          forceRefresh: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool,
          getUserConfirmation:
            __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
          keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
          children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
        };

        /* harmony default export */ __webpack_exports__['a'] = BrowserRouter;

        /***/
      },
      /* 141 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          8
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(
          20
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__PathUtils__ = __webpack_require__(
          16
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__ = __webpack_require__(
          28
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__DOMUtils__ = __webpack_require__(
          60
        );
        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var PopStateEvent = 'popstate';
        var HashChangeEvent = 'hashchange';

        var getHistoryState = function getHistoryState() {
          try {
            return window.history.state || {};
          } catch (e) {
            // IE 11 sometimes throws when accessing window.history.state
            // See https://github.com/ReactTraining/history/pull/289
            return {};
          }
        };

        /**
         * Creates a history object that uses the HTML5 history API including
         * pushState, replaceState, and the popstate event.
         */
        var createBrowserHistory = function createBrowserHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};

          __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
            __WEBPACK_IMPORTED_MODULE_5__DOMUtils__['b' /* canUseDOM */],
            'Browser history needs a DOM'
          );

          var globalHistory = window.history;
          var canUseHistory = Object(
            __WEBPACK_IMPORTED_MODULE_5__DOMUtils__['g' /* supportsHistory */]
          )();
          var needsHashChangeListener = !Object(
            __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
              'h' /* supportsPopStateOnHashChange */
            ]
          )();

          var _props$forceRefresh = props.forceRefresh,
            forceRefresh =
              _props$forceRefresh === undefined ? false : _props$forceRefresh,
            _props$getUserConfirm = props.getUserConfirmation,
            getUserConfirmation =
              _props$getUserConfirm === undefined
                ? __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                    'c' /* getConfirmation */
                  ]
                : _props$getUserConfirm,
            _props$keyLength = props.keyLength,
            keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

          var basename = props.basename
            ? Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                  'g' /* stripTrailingSlash */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                    'a' /* addLeadingSlash */
                  ]
                )(props.basename)
              )
            : '';

          var getDOMLocation = function getDOMLocation(historyState) {
            var _ref = historyState || {},
              key = _ref.key,
              state = _ref.state;

            var _window$location = window.location,
              pathname = _window$location.pathname,
              search = _window$location.search,
              hash = _window$location.hash;

            var path = pathname + search + hash;

            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !basename ||
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                    'c' /* hasBasename */
                  ]
                )(path, basename),
              'You are attempting to use a basename on a page whose URL path does not begin ' +
                'with the basename. Expected path "' +
                path +
                '" to begin with "' +
                basename +
                '".'
            );

            if (basename)
              path = Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                  'e' /* stripBasename */
                ]
              )(path, basename);

            return Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, state, key);
          };

          var createKey = function createKey() {
            return Math.random()
              .toString(36)
              .substr(2, keyLength);
          };

          var transitionManager = Object(
            __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__[
              'a' /* default */
            ]
          )();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = globalHistory.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var handlePopState = function handlePopState(event) {
            // Ignore extraneous popstate events in WebKit.
            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                  'd' /* isExtraneousPopstateEvent */
                ]
              )(event)
            )
              return;

            handlePop(getDOMLocation(event.state));
          };

          var handleHashChange = function handleHashChange() {
            handlePop(getDOMLocation(getHistoryState()));
          };

          var forceNextPop = false;

          var handlePop = function handlePop(location) {
            if (forceNextPop) {
              forceNextPop = false;
              setState();
            } else {
              var action = 'POP';

              transitionManager.confirmTransitionTo(
                location,
                action,
                getUserConfirmation,
                function(ok) {
                  if (ok) {
                    setState({ action: action, location: location });
                  } else {
                    revertPop(location);
                  }
                }
              );
            }
          };

          var revertPop = function revertPop(fromLocation) {
            var toLocation = history.location;

            // TODO: We could probably make this more reliable by
            // keeping a list of keys we've seen in sessionStorage.
            // Instead, we just default to 0 for keys we don't know.

            var toIndex = allKeys.indexOf(toLocation.key);

            if (toIndex === -1) toIndex = 0;

            var fromIndex = allKeys.indexOf(fromLocation.key);

            if (fromIndex === -1) fromIndex = 0;

            var delta = toIndex - fromIndex;

            if (delta) {
              forceNextPop = true;
              go(delta);
            }
          };

          var initialLocation = getDOMLocation(getHistoryState());
          var allKeys = [initialLocation.key];

          // Public interface

          var createHref = function createHref(location) {
            return (
              basename +
              Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
              )(location)
            );
          };

          var push = function push(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to push when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'PUSH';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, state, createKey(), history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var href = createHref(location);
                var key = location.key,
                  state = location.state;

                if (canUseHistory) {
                  globalHistory.pushState(
                    { key: key, state: state },
                    null,
                    href
                  );

                  if (forceRefresh) {
                    window.location.href = href;
                  } else {
                    var prevIndex = allKeys.indexOf(history.location.key);
                    var nextKeys = allKeys.slice(
                      0,
                      prevIndex === -1 ? 0 : prevIndex + 1
                    );

                    nextKeys.push(location.key);
                    allKeys = nextKeys;

                    setState({ action: action, location: location });
                  }
                } else {
                  __WEBPACK_IMPORTED_MODULE_0_warning___default()(
                    state === undefined,
                    'Browser history cannot push state in browsers that do not support HTML5 history'
                  );

                  window.location.href = href;
                }
              }
            );
          };

          var replace = function replace(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to replace when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'REPLACE';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, state, createKey(), history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var href = createHref(location);
                var key = location.key,
                  state = location.state;

                if (canUseHistory) {
                  globalHistory.replaceState(
                    { key: key, state: state },
                    null,
                    href
                  );

                  if (forceRefresh) {
                    window.location.replace(href);
                  } else {
                    var prevIndex = allKeys.indexOf(history.location.key);

                    if (prevIndex !== -1) allKeys[prevIndex] = location.key;

                    setState({ action: action, location: location });
                  }
                } else {
                  __WEBPACK_IMPORTED_MODULE_0_warning___default()(
                    state === undefined,
                    'Browser history cannot replace state in browsers that do not support HTML5 history'
                  );

                  window.location.replace(href);
                }
              }
            );
          };

          var go = function go(n) {
            globalHistory.go(n);
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var listenerCount = 0;

          var checkDOMListeners = function checkDOMListeners(delta) {
            listenerCount += delta;

            if (listenerCount === 1) {
              Object(
                __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                  'a' /* addEventListener */
                ]
              )(window, PopStateEvent, handlePopState);

              if (needsHashChangeListener)
                Object(
                  __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                    'a' /* addEventListener */
                  ]
                )(window, HashChangeEvent, handleHashChange);
            } else if (listenerCount === 0) {
              Object(
                __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                  'e' /* removeEventListener */
                ]
              )(window, PopStateEvent, handlePopState);

              if (needsHashChangeListener)
                Object(
                  __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                    'e' /* removeEventListener */
                  ]
                )(window, HashChangeEvent, handleHashChange);
            }
          };

          var isBlocked = false;

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            var unblock = transitionManager.setPrompt(prompt);

            if (!isBlocked) {
              checkDOMListeners(1);
              isBlocked = true;
            }

            return function() {
              if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(-1);
              }

              return unblock();
            };
          };

          var listen = function listen(listener) {
            var unlisten = transitionManager.appendListener(listener);
            checkDOMListeners(1);

            return function() {
              checkDOMListeners(-1);
              unlisten();
            };
          };

          var history = {
            length: globalHistory.length,
            action: 'POP',
            location: initialLocation,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            block: block,
            listen: listen,
          };

          return history;
        };

        /* harmony default export */ __webpack_exports__[
          'a'
        ] = createBrowserHistory;

        /***/
      },
      /* 142 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          8
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(
          20
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__PathUtils__ = __webpack_require__(
          16
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__ = __webpack_require__(
          28
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__DOMUtils__ = __webpack_require__(
          60
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var HashChangeEvent = 'hashchange';

        var HashPathCoders = {
          hashbang: {
            encodePath: function encodePath(path) {
              return path.charAt(0) === '!'
                ? path
                : '!/' +
                    Object(
                      __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                        'f' /* stripLeadingSlash */
                      ]
                    )(path);
            },
            decodePath: function decodePath(path) {
              return path.charAt(0) === '!' ? path.substr(1) : path;
            },
          },
          noslash: {
            encodePath:
              __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                'f' /* stripLeadingSlash */
              ],
            decodePath:
              __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                'a' /* addLeadingSlash */
              ],
          },
          slash: {
            encodePath:
              __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                'a' /* addLeadingSlash */
              ],
            decodePath:
              __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                'a' /* addLeadingSlash */
              ],
          },
        };

        var getHashPath = function getHashPath() {
          // We can't use window.location.hash here because it's not
          // consistent across browsers - Firefox will pre-decode it!
          var href = window.location.href;
          var hashIndex = href.indexOf('#');
          return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
        };

        var pushHashPath = function pushHashPath(path) {
          return (window.location.hash = path);
        };

        var replaceHashPath = function replaceHashPath(path) {
          var hashIndex = window.location.href.indexOf('#');

          window.location.replace(
            window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) +
              '#' +
              path
          );
        };

        var createHashHistory = function createHashHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};

          __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
            __WEBPACK_IMPORTED_MODULE_5__DOMUtils__['b' /* canUseDOM */],
            'Hash history needs a DOM'
          );

          var globalHistory = window.history;
          var canGoWithoutReload = Object(
            __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
              'f' /* supportsGoWithoutReloadUsingHash */
            ]
          )();

          var _props$getUserConfirm = props.getUserConfirmation,
            getUserConfirmation =
              _props$getUserConfirm === undefined
                ? __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                    'c' /* getConfirmation */
                  ]
                : _props$getUserConfirm,
            _props$hashType = props.hashType,
            hashType =
              _props$hashType === undefined ? 'slash' : _props$hashType;

          var basename = props.basename
            ? Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                  'g' /* stripTrailingSlash */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                    'a' /* addLeadingSlash */
                  ]
                )(props.basename)
              )
            : '';

          var _HashPathCoders$hashT = HashPathCoders[hashType],
            encodePath = _HashPathCoders$hashT.encodePath,
            decodePath = _HashPathCoders$hashT.decodePath;

          var getDOMLocation = function getDOMLocation() {
            var path = decodePath(getHashPath());

            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !basename ||
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                    'c' /* hasBasename */
                  ]
                )(path, basename),
              'You are attempting to use a basename on a page whose URL path does not begin ' +
                'with the basename. Expected path "' +
                path +
                '" to begin with "' +
                basename +
                '".'
            );

            if (basename)
              path = Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                  'e' /* stripBasename */
                ]
              )(path, basename);

            return Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path);
          };

          var transitionManager = Object(
            __WEBPACK_IMPORTED_MODULE_4__createTransitionManager__[
              'a' /* default */
            ]
          )();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = globalHistory.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var forceNextPop = false;
          var ignorePath = null;

          var handleHashChange = function handleHashChange() {
            var path = getHashPath();
            var encodedPath = encodePath(path);

            if (path !== encodedPath) {
              // Ensure we always have a properly-encoded hash.
              replaceHashPath(encodedPath);
            } else {
              var location = getDOMLocation();
              var prevLocation = history.location;

              if (
                !forceNextPop &&
                Object(
                  __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                    'b' /* locationsAreEqual */
                  ]
                )(prevLocation, location)
              )
                return; // A hashchange doesn't always == location change.

              if (
                ignorePath ===
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
                )(location)
              )
                return; // Ignore this change; we already setState in push/replace.

              ignorePath = null;

              handlePop(location);
            }
          };

          var handlePop = function handlePop(location) {
            if (forceNextPop) {
              forceNextPop = false;
              setState();
            } else {
              var action = 'POP';

              transitionManager.confirmTransitionTo(
                location,
                action,
                getUserConfirmation,
                function(ok) {
                  if (ok) {
                    setState({ action: action, location: location });
                  } else {
                    revertPop(location);
                  }
                }
              );
            }
          };

          var revertPop = function revertPop(fromLocation) {
            var toLocation = history.location;

            // TODO: We could probably make this more reliable by
            // keeping a list of paths we've seen in sessionStorage.
            // Instead, we just default to 0 for paths we don't know.

            var toIndex = allPaths.lastIndexOf(
              Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
              )(toLocation)
            );

            if (toIndex === -1) toIndex = 0;

            var fromIndex = allPaths.lastIndexOf(
              Object(
                __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
              )(fromLocation)
            );

            if (fromIndex === -1) fromIndex = 0;

            var delta = toIndex - fromIndex;

            if (delta) {
              forceNextPop = true;
              go(delta);
            }
          };

          // Ensure the hash is encoded properly before doing anything else.
          var path = getHashPath();
          var encodedPath = encodePath(path);

          if (path !== encodedPath) replaceHashPath(encodedPath);

          var initialLocation = getDOMLocation();
          var allPaths = [
            Object(
              __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
            )(initialLocation),
          ];

          // Public interface

          var createHref = function createHref(location) {
            return (
              '#' +
              encodePath(
                basename +
                  Object(
                    __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                      'b' /* createPath */
                    ]
                  )(location)
              )
            );
          };

          var push = function push(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              state === undefined,
              'Hash history cannot push state; it is ignored'
            );

            var action = 'PUSH';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, undefined, undefined, history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var path = Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
                )(location);
                var encodedPath = encodePath(basename + path);
                var hashChanged = getHashPath() !== encodedPath;

                if (hashChanged) {
                  // We cannot tell if a hashchange was caused by a PUSH, so we'd
                  // rather setState here and ignore the hashchange. The caveat here
                  // is that other hash histories in the page will consider it a POP.
                  ignorePath = path;
                  pushHashPath(encodedPath);

                  var prevIndex = allPaths.lastIndexOf(
                    Object(
                      __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                        'b' /* createPath */
                      ]
                    )(history.location)
                  );
                  var nextPaths = allPaths.slice(
                    0,
                    prevIndex === -1 ? 0 : prevIndex + 1
                  );

                  nextPaths.push(path);
                  allPaths = nextPaths;

                  setState({ action: action, location: location });
                } else {
                  __WEBPACK_IMPORTED_MODULE_0_warning___default()(
                    false,
                    'Hash history cannot PUSH the same path; a new entry will not be added to the history stack'
                  );

                  setState();
                }
              }
            );
          };

          var replace = function replace(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              state === undefined,
              'Hash history cannot replace state; it is ignored'
            );

            var action = 'REPLACE';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, undefined, undefined, history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var path = Object(
                  __WEBPACK_IMPORTED_MODULE_3__PathUtils__['b' /* createPath */]
                )(location);
                var encodedPath = encodePath(basename + path);
                var hashChanged = getHashPath() !== encodedPath;

                if (hashChanged) {
                  // We cannot tell if a hashchange was caused by a REPLACE, so we'd
                  // rather setState here and ignore the hashchange. The caveat here
                  // is that other hash histories in the page will consider it a POP.
                  ignorePath = path;
                  replaceHashPath(encodedPath);
                }

                var prevIndex = allPaths.indexOf(
                  Object(
                    __WEBPACK_IMPORTED_MODULE_3__PathUtils__[
                      'b' /* createPath */
                    ]
                  )(history.location)
                );

                if (prevIndex !== -1) allPaths[prevIndex] = path;

                setState({ action: action, location: location });
              }
            );
          };

          var go = function go(n) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              canGoWithoutReload,
              'Hash history go(n) causes a full page reload in this browser'
            );

            globalHistory.go(n);
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var listenerCount = 0;

          var checkDOMListeners = function checkDOMListeners(delta) {
            listenerCount += delta;

            if (listenerCount === 1) {
              Object(
                __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                  'a' /* addEventListener */
                ]
              )(window, HashChangeEvent, handleHashChange);
            } else if (listenerCount === 0) {
              Object(
                __WEBPACK_IMPORTED_MODULE_5__DOMUtils__[
                  'e' /* removeEventListener */
                ]
              )(window, HashChangeEvent, handleHashChange);
            }
          };

          var isBlocked = false;

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            var unblock = transitionManager.setPrompt(prompt);

            if (!isBlocked) {
              checkDOMListeners(1);
              isBlocked = true;
            }

            return function() {
              if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(-1);
              }

              return unblock();
            };
          };

          var listen = function listen(listener) {
            var unlisten = transitionManager.appendListener(listener);
            checkDOMListeners(1);

            return function() {
              checkDOMListeners(-1);
              unlisten();
            };
          };

          var history = {
            length: globalHistory.length,
            action: 'POP',
            location: initialLocation,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            block: block,
            listen: listen,
          };

          return history;
        };

        /* harmony default export */ __webpack_exports__[
          'a'
        ] = createHashHistory;

        /***/
      },
      /* 143 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          8
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PathUtils__ = __webpack_require__(
          16
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__LocationUtils__ = __webpack_require__(
          20
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__createTransitionManager__ = __webpack_require__(
          28
        );
        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var clamp = function clamp(n, lowerBound, upperBound) {
          return Math.min(Math.max(n, lowerBound), upperBound);
        };

        /**
         * Creates a history object that stores locations in memory.
         */
        var createMemoryHistory = function createMemoryHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          var getUserConfirmation = props.getUserConfirmation,
            _props$initialEntries = props.initialEntries,
            initialEntries =
              _props$initialEntries === undefined
                ? ['/']
                : _props$initialEntries,
            _props$initialIndex = props.initialIndex,
            initialIndex =
              _props$initialIndex === undefined ? 0 : _props$initialIndex,
            _props$keyLength = props.keyLength,
            keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

          var transitionManager = Object(
            __WEBPACK_IMPORTED_MODULE_3__createTransitionManager__[
              'a' /* default */
            ]
          )();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = history.entries.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var createKey = function createKey() {
            return Math.random()
              .toString(36)
              .substr(2, keyLength);
          };

          var index = clamp(initialIndex, 0, initialEntries.length - 1);
          var entries = initialEntries.map(function(entry) {
            return typeof entry === 'string'
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                    'a' /* createLocation */
                  ]
                )(entry, undefined, createKey())
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                    'a' /* createLocation */
                  ]
                )(entry, undefined, entry.key || createKey());
          });

          // Public interface

          var createHref =
            __WEBPACK_IMPORTED_MODULE_1__PathUtils__['b' /* createPath */];

          var push = function push(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to push when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'PUSH';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, state, createKey(), history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var prevIndex = history.index;
                var nextIndex = prevIndex + 1;

                var nextEntries = history.entries.slice(0);
                if (nextEntries.length > nextIndex) {
                  nextEntries.splice(
                    nextIndex,
                    nextEntries.length - nextIndex,
                    location
                  );
                } else {
                  nextEntries.push(location);
                }

                setState({
                  action: action,
                  location: location,
                  index: nextIndex,
                  entries: nextEntries,
                });
              }
            );
          };

          var replace = function replace(path, state) {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to replace when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'REPLACE';
            var location = Object(
              __WEBPACK_IMPORTED_MODULE_2__LocationUtils__[
                'a' /* createLocation */
              ]
            )(path, state, createKey(), history.location);

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                history.entries[history.index] = location;

                setState({ action: action, location: location });
              }
            );
          };

          var go = function go(n) {
            var nextIndex = clamp(
              history.index + n,
              0,
              history.entries.length - 1
            );

            var action = 'POP';
            var location = history.entries[nextIndex];

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (ok) {
                  setState({
                    action: action,
                    location: location,
                    index: nextIndex,
                  });
                } else {
                  // Mimic the behavior of DOM histories by
                  // causing a render after a cancelled POP.
                  setState();
                }
              }
            );
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var canGo = function canGo(n) {
            var nextIndex = history.index + n;
            return nextIndex >= 0 && nextIndex < history.entries.length;
          };

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;
            return transitionManager.setPrompt(prompt);
          };

          var listen = function listen(listener) {
            return transitionManager.appendListener(listener);
          };

          var history = {
            length: entries.length,
            action: 'POP',
            location: entries[index],
            index: index,
            entries: entries,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            canGo: canGo,
            block: block,
            listen: listen,
          };

          return history;
        };

        /* harmony default export */ __webpack_exports__[
          'a'
        ] = createMemoryHistory;

        /***/
      },
      /* 144 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          57
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(
          12
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(
          29
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for a <Router> that uses window.location.hash.
         */

        var HashRouter = (function(_React$Component) {
          _inherits(HashRouter, _React$Component);

          function HashRouter() {
            var _temp, _this, _ret;

            _classCallCheck(this, HashRouter);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.history = Object(
                __WEBPACK_IMPORTED_MODULE_3_history__[
                  'b' /* createHashHistory */
                ]
              )(_this.props)),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          HashRouter.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !this.props.history,
              '<HashRouter> ignores the history prop. To use a custom history, ' +
                'use `import { Router }` instead of `import { HashRouter as Router }`.'
            );
          };

          HashRouter.prototype.render = function render() {
            return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(
              __WEBPACK_IMPORTED_MODULE_4__Router__['a' /* default */],
              { history: this.history, children: this.props.children }
            );
          };

          return HashRouter;
        })(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

        HashRouter.propTypes = {
          basename: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string,
          getUserConfirmation:
            __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
          hashType: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOf([
            'hashbang',
            'noslash',
            'slash',
          ]),
          children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
        };

        /* harmony default export */ __webpack_exports__['a'] = HashRouter;

        /***/
      },
      /* 145 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__ = __webpack_require__(
          146
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_MemoryRouter__[
            'a' /* default */
          ];

        /***/
      },
      /* 146 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_history__ = __webpack_require__(
          12
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Router__ = __webpack_require__(
          30
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for a <Router> that stores location in memory.
         */

        var MemoryRouter = (function(_React$Component) {
          _inherits(MemoryRouter, _React$Component);

          function MemoryRouter() {
            var _temp, _this, _ret;

            _classCallCheck(this, MemoryRouter);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.history = Object(
                __WEBPACK_IMPORTED_MODULE_3_history__[
                  'd' /* createMemoryHistory */
                ]
              )(_this.props)),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          MemoryRouter.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !this.props.history,
              '<MemoryRouter> ignores the history prop. To use a custom history, ' +
                'use `import { Router }` instead of `import { MemoryRouter as Router }`.'
            );
          };

          MemoryRouter.prototype.render = function render() {
            return __WEBPACK_IMPORTED_MODULE_1_react___default.a.createElement(
              __WEBPACK_IMPORTED_MODULE_4__Router__['a' /* default */],
              { history: this.history, children: this.props.children }
            );
          };

          return MemoryRouter;
        })(__WEBPACK_IMPORTED_MODULE_1_react___default.a.Component);

        MemoryRouter.propTypes = {
          initialEntries:
            __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.array,
          initialIndex:
            __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
          getUserConfirmation:
            __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func,
          keyLength: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.number,
          children: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.node,
        };

        /* harmony default export */ __webpack_exports__['a'] = MemoryRouter;

        /***/
      },
      /* 147 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Route__ = __webpack_require__(
          62
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Link__ = __webpack_require__(
          61
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        /**
         * A <Link> wrapper that knows if it's "active" or not.
         */
        var NavLink = function NavLink(_ref) {
          var to = _ref.to,
            exact = _ref.exact,
            strict = _ref.strict,
            location = _ref.location,
            activeClassName = _ref.activeClassName,
            className = _ref.className,
            activeStyle = _ref.activeStyle,
            style = _ref.style,
            getIsActive = _ref.isActive,
            ariaCurrent = _ref['aria-current'],
            rest = _objectWithoutProperties(_ref, [
              'to',
              'exact',
              'strict',
              'location',
              'activeClassName',
              'className',
              'activeStyle',
              'style',
              'isActive',
              'aria-current',
            ]);

          var path =
            (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object'
              ? to.pathname
              : to;

          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202
          var escapedPath =
            path && path.replace(/([.+*?=^!:${}()[\]|/\\])/g, '\\$1');

          return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
            __WEBPACK_IMPORTED_MODULE_2__Route__['a' /* default */],
            {
              path: escapedPath,
              exact: exact,
              strict: strict,
              location: location,
              children: function children(_ref2) {
                var location = _ref2.location,
                  match = _ref2.match;

                var isActive = !!(getIsActive
                  ? getIsActive(match, location)
                  : match);

                return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                  __WEBPACK_IMPORTED_MODULE_3__Link__['a' /* default */],
                  _extends(
                    {
                      to: to,
                      className: isActive
                        ? [className, activeClassName]
                            .filter(function(i) {
                              return i;
                            })
                            .join(' ')
                        : className,
                      style: isActive
                        ? _extends({}, style, activeStyle)
                        : style,
                      'aria-current': (isActive && ariaCurrent) || null,
                    },
                    rest
                  )
                );
              },
            }
          );
        };

        NavLink.propTypes = {
          to:
            __WEBPACK_IMPORTED_MODULE_3__Link__['a' /* default */].propTypes.to,
          exact: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
          strict: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
          location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          activeClassName:
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
          className: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
          activeStyle:
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          style: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          isActive: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
          'aria-current': __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOf(
            ['page', 'step', 'location', 'date', 'time', 'true']
          ),
        };

        NavLink.defaultProps = {
          activeClassName: 'active',
          'aria-current': 'page',
        };

        /* harmony default export */ __webpack_exports__['a'] = NavLink;

        /***/
      },
      /* 148 */
      /***/ function(module, exports) {
        module.exports =
          Array.isArray ||
          function(arr) {
            return Object.prototype.toString.call(arr) == '[object Array]';
          };

        /***/
      },
      /* 149 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__ = __webpack_require__(
          150
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_Prompt__[
            'a' /* default */
          ];

        /***/
      },
      /* 150 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_invariant__
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for prompting the user before navigating away
         * from a screen with a component.
         */

        var Prompt = (function(_React$Component) {
          _inherits(Prompt, _React$Component);

          function Prompt() {
            _classCallCheck(this, Prompt);

            return _possibleConstructorReturn(
              this,
              _React$Component.apply(this, arguments)
            );
          }

          Prompt.prototype.enable = function enable(message) {
            if (this.unblock) this.unblock();

            this.unblock = this.context.router.history.block(message);
          };

          Prompt.prototype.disable = function disable() {
            if (this.unblock) {
              this.unblock();
              this.unblock = null;
            }
          };

          Prompt.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_2_invariant___default()(
              this.context.router,
              'You should not use <Prompt> outside a <Router>'
            );

            if (this.props.when) this.enable(this.props.message);
          };

          Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps
          ) {
            if (nextProps.when) {
              if (!this.props.when || this.props.message !== nextProps.message)
                this.enable(nextProps.message);
            } else {
              this.disable();
            }
          };

          Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
            this.disable();
          };

          Prompt.prototype.render = function render() {
            return null;
          };

          return Prompt;
        })(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        Prompt.propTypes = {
          when: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
          message: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType(
            [
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
            ]
          ).isRequired,
        };
        Prompt.defaultProps = {
          when: true,
        };
        Prompt.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
            history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
              block:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
            }).isRequired,
          }).isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = Prompt;

        /***/
      },
      /* 151 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__ = __webpack_require__(
          152
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_Redirect__[
            'a' /* default */
          ];

        /***/
      },
      /* 152 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history__ = __webpack_require__(
          12
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__generatePath__ = __webpack_require__(
          65
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for updating the location programmatically
         * with a component.
         */

        var Redirect = (function(_React$Component) {
          _inherits(Redirect, _React$Component);

          function Redirect() {
            _classCallCheck(this, Redirect);

            return _possibleConstructorReturn(
              this,
              _React$Component.apply(this, arguments)
            );
          }

          Redirect.prototype.isStatic = function isStatic() {
            return this.context.router && this.context.router.staticContext;
          };

          Redirect.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_3_invariant___default()(
              this.context.router,
              'You should not use <Redirect> outside a <Router>'
            );

            if (this.isStatic()) this.perform();
          };

          Redirect.prototype.componentDidMount = function componentDidMount() {
            if (!this.isStatic()) this.perform();
          };

          Redirect.prototype.componentDidUpdate = function componentDidUpdate(
            prevProps
          ) {
            var prevTo = Object(
              __WEBPACK_IMPORTED_MODULE_4_history__['c' /* createLocation */]
            )(prevProps.to);
            var nextTo = Object(
              __WEBPACK_IMPORTED_MODULE_4_history__['c' /* createLocation */]
            )(this.props.to);

            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_4_history__[
                  'f' /* locationsAreEqual */
                ]
              )(prevTo, nextTo)
            ) {
              __WEBPACK_IMPORTED_MODULE_2_warning___default()(
                false,
                "You tried to redirect to the same route you're currently on: " +
                  ('"' + nextTo.pathname + nextTo.search + '"')
              );
              return;
            }

            this.perform();
          };

          Redirect.prototype.computeTo = function computeTo(_ref) {
            var computedMatch = _ref.computedMatch,
              to = _ref.to;

            if (computedMatch) {
              if (typeof to === 'string') {
                return Object(
                  __WEBPACK_IMPORTED_MODULE_5__generatePath__['a' /* default */]
                )(to, computedMatch.params);
              } else {
                return _extends({}, to, {
                  pathname: Object(
                    __WEBPACK_IMPORTED_MODULE_5__generatePath__[
                      'a' /* default */
                    ]
                  )(to.pathname, computedMatch.params),
                });
              }
            }

            return to;
          };

          Redirect.prototype.perform = function perform() {
            var history = this.context.router.history;
            var push = this.props.push;

            var to = this.computeTo(this.props);

            if (push) {
              history.push(to);
            } else {
              history.replace(to);
            }
          };

          Redirect.prototype.render = function render() {
            return null;
          };

          return Redirect;
        })(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        Redirect.propTypes = {
          computedMatch:
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object, // private, from <Switch>
          push: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,
          from: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
          to: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string,
            __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          ]).isRequired,
        };
        Redirect.defaultProps = {
          push: false,
        };
        Redirect.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
            history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
              push:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
              replace:
                __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func
                  .isRequired,
            }).isRequired,
            staticContext:
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
          }).isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = Redirect;

        /***/
      },
      /* 153 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__ = __webpack_require__(
          154
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_StaticRouter__[
            'a' /* default */
          ];

        /***/
      },
      /* 154 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_history__ = __webpack_require__(
          12
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Router__ = __webpack_require__(
          30
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var addLeadingSlash = function addLeadingSlash(path) {
          return path.charAt(0) === '/' ? path : '/' + path;
        };

        var addBasename = function addBasename(basename, location) {
          if (!basename) return location;

          return _extends({}, location, {
            pathname: addLeadingSlash(basename) + location.pathname,
          });
        };

        var stripBasename = function stripBasename(basename, location) {
          if (!basename) return location;

          var base = addLeadingSlash(basename);

          if (location.pathname.indexOf(base) !== 0) return location;

          return _extends({}, location, {
            pathname: location.pathname.substr(base.length),
          });
        };

        var createURL = function createURL(location) {
          return typeof location === 'string'
            ? location
            : Object(
                __WEBPACK_IMPORTED_MODULE_4_history__['e' /* createPath */]
              )(location);
        };

        var staticHandler = function staticHandler(methodName) {
          return function() {
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(
              false,
              'You cannot %s with <StaticRouter>',
              methodName
            );
          };
        };

        var noop = function noop() {};

        /**
         * The public top-level API for a "static" <Router>, so-called because it
         * can't actually change the current location. Instead, it just records
         * location changes in a context object. Useful mainly in testing and
         * server-rendering scenarios.
         */

        var StaticRouter = (function(_React$Component) {
          _inherits(StaticRouter, _React$Component);

          function StaticRouter() {
            var _temp, _this, _ret;

            _classCallCheck(this, StaticRouter);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.createHref = function(path) {
                return addLeadingSlash(_this.props.basename + createURL(path));
              }),
              (_this.handlePush = function(location) {
                var _this$props = _this.props,
                  basename = _this$props.basename,
                  context = _this$props.context;

                context.action = 'PUSH';
                context.location = addBasename(
                  basename,
                  Object(
                    __WEBPACK_IMPORTED_MODULE_4_history__[
                      'c' /* createLocation */
                    ]
                  )(location)
                );
                context.url = createURL(context.location);
              }),
              (_this.handleReplace = function(location) {
                var _this$props2 = _this.props,
                  basename = _this$props2.basename,
                  context = _this$props2.context;

                context.action = 'REPLACE';
                context.location = addBasename(
                  basename,
                  Object(
                    __WEBPACK_IMPORTED_MODULE_4_history__[
                      'c' /* createLocation */
                    ]
                  )(location)
                );
                context.url = createURL(context.location);
              }),
              (_this.handleListen = function() {
                return noop;
              }),
              (_this.handleBlock = function() {
                return noop;
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          StaticRouter.prototype.getChildContext = function getChildContext() {
            return {
              router: {
                staticContext: this.props.context,
              },
            };
          };

          StaticRouter.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_0_warning___default()(
              !this.props.history,
              '<StaticRouter> ignores the history prop. To use a custom history, ' +
                'use `import { Router }` instead of `import { StaticRouter as Router }`.'
            );
          };

          StaticRouter.prototype.render = function render() {
            var _props = this.props,
              basename = _props.basename,
              context = _props.context,
              location = _props.location,
              props = _objectWithoutProperties(_props, [
                'basename',
                'context',
                'location',
              ]);

            var history = {
              createHref: this.createHref,
              action: 'POP',
              location: stripBasename(
                basename,
                Object(
                  __WEBPACK_IMPORTED_MODULE_4_history__[
                    'c' /* createLocation */
                  ]
                )(location)
              ),
              push: this.handlePush,
              replace: this.handleReplace,
              go: staticHandler('go'),
              goBack: staticHandler('goBack'),
              goForward: staticHandler('goForward'),
              listen: this.handleListen,
              block: this.handleBlock,
            };

            return __WEBPACK_IMPORTED_MODULE_2_react___default.a.createElement(
              __WEBPACK_IMPORTED_MODULE_5__Router__['a' /* default */],
              _extends({}, props, { history: history })
            );
          };

          return StaticRouter;
        })(__WEBPACK_IMPORTED_MODULE_2_react___default.a.Component);

        StaticRouter.propTypes = {
          basename: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,
          context:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
              .isRequired,
          location: __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.oneOfType(
            [
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.string,
              __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object,
            ]
          ),
        };
        StaticRouter.defaultProps = {
          basename: '',
          location: '/',
        };
        StaticRouter.childContextTypes = {
          router:
            __WEBPACK_IMPORTED_MODULE_3_prop_types___default.a.object
              .isRequired,
        };

        /* harmony default export */ __webpack_exports__['a'] = StaticRouter;

        /***/
      },
      /* 155 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__ = __webpack_require__(
          156
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_Switch__[
            'a' /* default */
          ];

        /***/
      },
      /* 156 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning__ = __webpack_require__(
          13
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_warning___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_warning__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(
          2
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_3_invariant__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__matchPath__ = __webpack_require__(
          31
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        /**
         * The public API for rendering the first <Route> that matches.
         */

        var Switch = (function(_React$Component) {
          _inherits(Switch, _React$Component);

          function Switch() {
            _classCallCheck(this, Switch);

            return _possibleConstructorReturn(
              this,
              _React$Component.apply(this, arguments)
            );
          }

          Switch.prototype.componentWillMount = function componentWillMount() {
            __WEBPACK_IMPORTED_MODULE_3_invariant___default()(
              this.context.router,
              'You should not use <Switch> outside a <Router>'
            );
          };

          Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps
          ) {
            __WEBPACK_IMPORTED_MODULE_2_warning___default()(
              !(nextProps.location && !this.props.location),
              '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.'
            );

            __WEBPACK_IMPORTED_MODULE_2_warning___default()(
              !(!nextProps.location && this.props.location),
              '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.'
            );
          };

          Switch.prototype.render = function render() {
            var route = this.context.router.route;
            var children = this.props.children;

            var location = this.props.location || route.location;

            var match = void 0,
              child = void 0;
            __WEBPACK_IMPORTED_MODULE_0_react___default.a.Children.forEach(
              children,
              function(element) {
                if (
                  match == null &&
                  __WEBPACK_IMPORTED_MODULE_0_react___default.a.isValidElement(
                    element
                  )
                ) {
                  var _element$props = element.props,
                    pathProp = _element$props.path,
                    exact = _element$props.exact,
                    strict = _element$props.strict,
                    sensitive = _element$props.sensitive,
                    from = _element$props.from;

                  var path = pathProp || from;

                  child = element;
                  match = Object(
                    __WEBPACK_IMPORTED_MODULE_4__matchPath__['a' /* default */]
                  )(
                    location.pathname,
                    {
                      path: path,
                      exact: exact,
                      strict: strict,
                      sensitive: sensitive,
                    },
                    route.match
                  );
                }
              }
            );

            return match
              ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.cloneElement(
                  child,
                  { location: location, computedMatch: match }
                )
              : null;
          };

          return Switch;
        })(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        Switch.contextTypes = {
          router: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.shape({
            route:
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
                .isRequired,
          }).isRequired,
        };
        Switch.propTypes = {
          children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.node,
          location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
        };

        /* harmony default export */ __webpack_exports__['a'] = Switch;

        /***/
      },
      /* 157 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_generatePath__ = __webpack_require__(
          65
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_generatePath__[
            'a' /* default */
          ];

        /***/
      },
      /* 158 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__ = __webpack_require__(
          31
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_matchPath__[
            'a' /* default */
          ];

        /***/
      },
      /* 159 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__ = __webpack_require__(
          160
        );
        // Written in this round about way for babel-transform-imports

        /* harmony default export */ __webpack_exports__['a'] =
          __WEBPACK_IMPORTED_MODULE_0_react_router_es_withRouter__[
            'a' /* default */
          ];

        /***/
      },
      /* 160 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(
          0
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_react__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(
          1
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_1_prop_types__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__ = __webpack_require__(
          26
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Route__ = __webpack_require__(
          63
        );
        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        /**
         * A public higher-order component to access the imperative API
         */
        var withRouter = function withRouter(Component) {
          var C = function C(props) {
            var wrappedComponentRef = props.wrappedComponentRef,
              remainingProps = _objectWithoutProperties(props, [
                'wrappedComponentRef',
              ]);

            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
              __WEBPACK_IMPORTED_MODULE_3__Route__['a' /* default */],
              {
                children: function children(routeComponentProps) {
                  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
                    Component,
                    _extends({}, remainingProps, routeComponentProps, {
                      ref: wrappedComponentRef,
                    })
                  );
                },
              }
            );
          };

          C.displayName =
            'withRouter(' + (Component.displayName || Component.name) + ')';
          C.WrappedComponent = Component;
          C.propTypes = {
            wrappedComponentRef:
              __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
          };

          return __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default()(
            C,
            Component
          );
        };

        /* harmony default export */ __webpack_exports__['a'] = withRouter;

        /***/
      },
      /* 161 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        function _interopDefault(ex) {
          return ex && typeof ex === 'object' && 'default' in ex
            ? ex['default']
            : ex;
        }

        var React = __webpack_require__(0);
        var React__default = _interopDefault(React);
        var ExecutionEnvironment = _interopDefault(__webpack_require__(162));
        var shallowEqual = _interopDefault(__webpack_require__(163));

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        function withSideEffect(
          reducePropsToState,
          handleStateChangeOnClient,
          mapStateOnServer
        ) {
          if (typeof reducePropsToState !== 'function') {
            throw new Error('Expected reducePropsToState to be a function.');
          }
          if (typeof handleStateChangeOnClient !== 'function') {
            throw new Error(
              'Expected handleStateChangeOnClient to be a function.'
            );
          }
          if (
            typeof mapStateOnServer !== 'undefined' &&
            typeof mapStateOnServer !== 'function'
          ) {
            throw new Error(
              'Expected mapStateOnServer to either be undefined or a function.'
            );
          }

          function getDisplayName(WrappedComponent) {
            return (
              WrappedComponent.displayName ||
              WrappedComponent.name ||
              'Component'
            );
          }

          return function wrap(WrappedComponent) {
            if (typeof WrappedComponent !== 'function') {
              throw new Error(
                'Expected WrappedComponent to be a React component.'
              );
            }

            var mountedInstances = [];
            var state = void 0;

            function emitChange() {
              state = reducePropsToState(
                mountedInstances.map(function(instance) {
                  return instance.props;
                })
              );

              if (SideEffect.canUseDOM) {
                handleStateChangeOnClient(state);
              } else if (mapStateOnServer) {
                state = mapStateOnServer(state);
              }
            }

            var SideEffect = (function(_Component) {
              _inherits(SideEffect, _Component);

              function SideEffect() {
                _classCallCheck(this, SideEffect);

                return _possibleConstructorReturn(
                  this,
                  _Component.apply(this, arguments)
                );
              }

              // Try to use displayName of wrapped component
              SideEffect.peek = function peek() {
                return state;
              };

              // Expose canUseDOM so tests can monkeypatch it

              SideEffect.rewind = function rewind() {
                if (SideEffect.canUseDOM) {
                  throw new Error(
                    'You may only call rewind() on the server. Call peek() to read the current state.'
                  );
                }

                var recordedState = state;
                state = undefined;
                mountedInstances = [];
                return recordedState;
              };

              SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(
                nextProps
              ) {
                return !shallowEqual(nextProps, this.props);
              };

              SideEffect.prototype.componentWillMount = function componentWillMount() {
                mountedInstances.push(this);
                emitChange();
              };

              SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {
                emitChange();
              };

              SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {
                var index = mountedInstances.indexOf(this);
                mountedInstances.splice(index, 1);
                emitChange();
              };

              SideEffect.prototype.render = function render() {
                return React__default.createElement(
                  WrappedComponent,
                  this.props
                );
              };

              return SideEffect;
            })(React.Component);

            SideEffect.displayName =
              'SideEffect(' + getDisplayName(WrappedComponent) + ')';
            SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;

            return SideEffect;
          };
        }

        module.exports = withSideEffect;

        /***/
      },
      /* 162 */
      /***/ function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_RESULT__; /*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/
        /* global define */

        (function() {
          'use strict';

          var canUseDOM = !!(
            typeof window !== 'undefined' &&
            window.document &&
            window.document.createElement
          );

          var ExecutionEnvironment = {
            canUseDOM: canUseDOM,

            canUseWorkers: typeof Worker !== 'undefined',

            canUseEventListeners:
              canUseDOM && !!(window.addEventListener || window.attachEvent),

            canUseViewport: canUseDOM && !!window.screen,
          };

          if (true) {
            !((__WEBPACK_AMD_DEFINE_RESULT__ = function() {
              return ExecutionEnvironment;
            }.call(exports, __webpack_require__, exports, module)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else if (typeof module !== 'undefined' && module.exports) {
            module.exports = ExecutionEnvironment;
          } else {
            window.ExecutionEnvironment = ExecutionEnvironment;
          }
        })();

        /***/
      },
      /* 163 */
      /***/ function(module, exports) {
        //

        module.exports = function shallowEqual(
          objA,
          objB,
          compare,
          compareContext
        ) {
          var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

          if (ret !== void 0) {
            return !!ret;
          }

          if (objA === objB) {
            return true;
          }

          if (
            typeof objA !== 'object' ||
            !objA ||
            typeof objB !== 'object' ||
            !objB
          ) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) {
            return false;
          }

          var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

          // Test for A's keys different from B.
          for (var idx = 0; idx < keysA.length; idx++) {
            var key = keysA[idx];

            if (!bHasOwnProperty(key)) {
              return false;
            }

            var valueA = objA[key];
            var valueB = objB[key];

            ret = compare
              ? compare.call(compareContext, valueA, valueB, key)
              : void 0;

            if (ret === false || (ret === void 0 && valueA !== valueB)) {
              return false;
            }
          }

          return true;
        };

        /***/
      },
      /* 164 */
      /***/ function(module, exports, __webpack_require__) {
        var pSlice = Array.prototype.slice;
        var objectKeys = __webpack_require__(165);
        var isArguments = __webpack_require__(166);

        var deepEqual = (module.exports = function(actual, expected, opts) {
          if (!opts) opts = {};
          // 7.1. All identical values are equivalent, as determined by ===.
          if (actual === expected) {
            return true;
          } else if (actual instanceof Date && expected instanceof Date) {
            return actual.getTime() === expected.getTime();

            // 7.3. Other pairs that do not both pass typeof value == 'object',
            // equivalence is determined by ==.
          } else if (
            !actual ||
            !expected ||
            (typeof actual != 'object' && typeof expected != 'object')
          ) {
            return opts.strict ? actual === expected : actual == expected;

            // 7.4. For all other Object pairs, including Array objects, equivalence is
            // determined by having the same number of owned properties (as verified
            // with Object.prototype.hasOwnProperty.call), the same set of keys
            // (although not necessarily the same order), equivalent values for every
            // corresponding key, and an identical 'prototype' property. Note: this
            // accounts for both named and indexed properties on Arrays.
          } else {
            return objEquiv(actual, expected, opts);
          }
        });

        function isUndefinedOrNull(value) {
          return value === null || value === undefined;
        }

        function isBuffer(x) {
          if (!x || typeof x !== 'object' || typeof x.length !== 'number')
            return false;
          if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
            return false;
          }
          if (x.length > 0 && typeof x[0] !== 'number') return false;
          return true;
        }

        function objEquiv(a, b, opts) {
          var i, key;
          if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
          // an identical 'prototype' property.
          if (a.prototype !== b.prototype) return false;
          //~~~I've managed to break Object.keys through screwy arguments passing.
          //   Converting to array solves the problem.
          if (isArguments(a)) {
            if (!isArguments(b)) {
              return false;
            }
            a = pSlice.call(a);
            b = pSlice.call(b);
            return deepEqual(a, b, opts);
          }
          if (isBuffer(a)) {
            if (!isBuffer(b)) {
              return false;
            }
            if (a.length !== b.length) return false;
            for (i = 0; i < a.length; i++) {
              if (a[i] !== b[i]) return false;
            }
            return true;
          }
          try {
            var ka = objectKeys(a),
              kb = objectKeys(b);
          } catch (e) {
            //happens when one is a string literal and the other isn't
            return false;
          }
          // having the same number of owned properties (keys incorporates
          // hasOwnProperty)
          if (ka.length != kb.length) return false;
          //the same set of keys (although not necessarily the same order),
          ka.sort();
          kb.sort();
          //~~~cheap key test
          for (i = ka.length - 1; i >= 0; i--) {
            if (ka[i] != kb[i]) return false;
          }
          //equivalent values for every corresponding key, and
          //~~~possibly expensive deep test
          for (i = ka.length - 1; i >= 0; i--) {
            key = ka[i];
            if (!deepEqual(a[key], b[key], opts)) return false;
          }
          return typeof a === typeof b;
        }

        /***/
      },
      /* 165 */
      /***/ function(module, exports) {
        exports = module.exports =
          typeof Object.keys === 'function' ? Object.keys : shim;

        exports.shim = shim;
        function shim(obj) {
          var keys = [];
          for (var key in obj) keys.push(key);
          return keys;
        }

        /***/
      },
      /* 166 */
      /***/ function(module, exports) {
        var supportsArgumentsClass =
          (function() {
            return Object.prototype.toString.call(arguments);
          })() == '[object Arguments]';

        exports = module.exports = supportsArgumentsClass
          ? supported
          : unsupported;

        exports.supported = supported;
        function supported(object) {
          return Object.prototype.toString.call(object) == '[object Arguments]';
        }

        exports.unsupported = unsupported;
        function unsupported(object) {
          return (
            (object &&
              typeof object == 'object' &&
              typeof object.length == 'number' &&
              Object.prototype.hasOwnProperty.call(object, 'callee') &&
              !Object.prototype.propertyIsEnumerable.call(object, 'callee')) ||
            false
          );
        }

        /***/
      },
      /* 167 */
      /***/ function(module, exports, __webpack_require__) {
        exports.__esModule = true;
        exports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _objectAssign = __webpack_require__(17);

        var _objectAssign2 = _interopRequireDefault(_objectAssign);

        var _HelmetConstants = __webpack_require__(66);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var encodeSpecialCharacters = function encodeSpecialCharacters(str) {
          var encode =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : true;

          if (encode === false) {
            return String(str);
          }

          return String(str)
            .replace(/&/g, '&amp;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#x27;');
        };

        var getTitleFromPropsList = function getTitleFromPropsList(propsList) {
          var innermostTitle = getInnermostProperty(
            propsList,
            _HelmetConstants.TAG_NAMES.TITLE
          );
          var innermostTemplate = getInnermostProperty(
            propsList,
            _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE
          );

          if (innermostTemplate && innermostTitle) {
            // use function arg to avoid need to escape $ characters
            return innermostTemplate.replace(/%s/g, function() {
              return innermostTitle;
            });
          }

          var innermostDefaultTitle = getInnermostProperty(
            propsList,
            _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE
          );

          return innermostTitle || innermostDefaultTitle || undefined;
        };

        var getOnChangeClientState = function getOnChangeClientState(
          propsList
        ) {
          return (
            getInnermostProperty(
              propsList,
              _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE
            ) || function() {}
          );
        };

        var getAttributesFromPropsList = function getAttributesFromPropsList(
          tagType,
          propsList
        ) {
          return propsList
            .filter(function(props) {
              return typeof props[tagType] !== 'undefined';
            })
            .map(function(props) {
              return props[tagType];
            })
            .reduce(function(tagAttrs, current) {
              return _extends({}, tagAttrs, current);
            }, {});
        };

        var getBaseTagFromPropsList = function getBaseTagFromPropsList(
          primaryAttributes,
          propsList
        ) {
          return propsList
            .filter(function(props) {
              return (
                typeof props[_HelmetConstants.TAG_NAMES.BASE] !== 'undefined'
              );
            })
            .map(function(props) {
              return props[_HelmetConstants.TAG_NAMES.BASE];
            })
            .reverse()
            .reduce(function(innermostBaseTag, tag) {
              if (!innermostBaseTag.length) {
                var keys = Object.keys(tag);

                for (var i = 0; i < keys.length; i++) {
                  var attributeKey = keys[i];
                  var lowerCaseAttributeKey = attributeKey.toLowerCase();

                  if (
                    primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&
                    tag[lowerCaseAttributeKey]
                  ) {
                    return innermostBaseTag.concat(tag);
                  }
                }
              }

              return innermostBaseTag;
            }, []);
        };

        var getTagsFromPropsList = function getTagsFromPropsList(
          tagName,
          primaryAttributes,
          propsList
        ) {
          // Calculate list of tags, giving priority innermost component (end of the propslist)
          var approvedSeenTags = {};

          return propsList
            .filter(function(props) {
              if (Array.isArray(props[tagName])) {
                return true;
              }
              if (typeof props[tagName] !== 'undefined') {
                warn(
                  'Helmet: ' +
                    tagName +
                    ' should be of type "Array". Instead found type "' +
                    _typeof(props[tagName]) +
                    '"'
                );
              }
              return false;
            })
            .map(function(props) {
              return props[tagName];
            })
            .reverse()
            .reduce(function(approvedTags, instanceTags) {
              var instanceSeenTags = {};

              instanceTags
                .filter(function(tag) {
                  var primaryAttributeKey = void 0;
                  var keys = Object.keys(tag);
                  for (var i = 0; i < keys.length; i++) {
                    var attributeKey = keys[i];
                    var lowerCaseAttributeKey = attributeKey.toLowerCase();

                    // Special rule with link tags, since rel and href are both primary tags, rel takes priority
                    if (
                      primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 &&
                      !(
                        primaryAttributeKey ===
                          _HelmetConstants.TAG_PROPERTIES.REL &&
                        tag[primaryAttributeKey].toLowerCase() === 'canonical'
                      ) &&
                      !(
                        lowerCaseAttributeKey ===
                          _HelmetConstants.TAG_PROPERTIES.REL &&
                        tag[lowerCaseAttributeKey].toLowerCase() ===
                          'stylesheet'
                      )
                    ) {
                      primaryAttributeKey = lowerCaseAttributeKey;
                    }
                    // Special case for innerHTML which doesn't work lowercased
                    if (
                      primaryAttributes.indexOf(attributeKey) !== -1 &&
                      (attributeKey ===
                        _HelmetConstants.TAG_PROPERTIES.INNER_HTML ||
                        attributeKey ===
                          _HelmetConstants.TAG_PROPERTIES.CSS_TEXT ||
                        attributeKey ===
                          _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)
                    ) {
                      primaryAttributeKey = attributeKey;
                    }
                  }

                  if (!primaryAttributeKey || !tag[primaryAttributeKey]) {
                    return false;
                  }

                  var value = tag[primaryAttributeKey].toLowerCase();

                  if (!approvedSeenTags[primaryAttributeKey]) {
                    approvedSeenTags[primaryAttributeKey] = {};
                  }

                  if (!instanceSeenTags[primaryAttributeKey]) {
                    instanceSeenTags[primaryAttributeKey] = {};
                  }

                  if (!approvedSeenTags[primaryAttributeKey][value]) {
                    instanceSeenTags[primaryAttributeKey][value] = true;
                    return true;
                  }

                  return false;
                })
                .reverse()
                .forEach(function(tag) {
                  return approvedTags.push(tag);
                });

              // Update seen tags with tags from this instance
              var keys = Object.keys(instanceSeenTags);
              for (var i = 0; i < keys.length; i++) {
                var attributeKey = keys[i];
                var tagUnion = (0, _objectAssign2.default)(
                  {},
                  approvedSeenTags[attributeKey],
                  instanceSeenTags[attributeKey]
                );

                approvedSeenTags[attributeKey] = tagUnion;
              }

              return approvedTags;
            }, [])
            .reverse();
        };

        var getInnermostProperty = function getInnermostProperty(
          propsList,
          property
        ) {
          for (var i = propsList.length - 1; i >= 0; i--) {
            var props = propsList[i];

            if (props.hasOwnProperty(property)) {
              return props[property];
            }
          }

          return null;
        };

        var reducePropsToState = function reducePropsToState(propsList) {
          return {
            baseTag: getBaseTagFromPropsList(
              [_HelmetConstants.TAG_PROPERTIES.HREF],
              propsList
            ),
            bodyAttributes: getAttributesFromPropsList(
              _HelmetConstants.ATTRIBUTE_NAMES.BODY,
              propsList
            ),
            defer: getInnermostProperty(
              propsList,
              _HelmetConstants.HELMET_PROPS.DEFER
            ),
            encode: getInnermostProperty(
              propsList,
              _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS
            ),
            htmlAttributes: getAttributesFromPropsList(
              _HelmetConstants.ATTRIBUTE_NAMES.HTML,
              propsList
            ),
            linkTags: getTagsFromPropsList(
              _HelmetConstants.TAG_NAMES.LINK,
              [
                _HelmetConstants.TAG_PROPERTIES.REL,
                _HelmetConstants.TAG_PROPERTIES.HREF,
              ],
              propsList
            ),
            metaTags: getTagsFromPropsList(
              _HelmetConstants.TAG_NAMES.META,
              [
                _HelmetConstants.TAG_PROPERTIES.NAME,
                _HelmetConstants.TAG_PROPERTIES.CHARSET,
                _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV,
                _HelmetConstants.TAG_PROPERTIES.PROPERTY,
                _HelmetConstants.TAG_PROPERTIES.ITEM_PROP,
              ],
              propsList
            ),
            noscriptTags: getTagsFromPropsList(
              _HelmetConstants.TAG_NAMES.NOSCRIPT,
              [_HelmetConstants.TAG_PROPERTIES.INNER_HTML],
              propsList
            ),
            onChangeClientState: getOnChangeClientState(propsList),
            scriptTags: getTagsFromPropsList(
              _HelmetConstants.TAG_NAMES.SCRIPT,
              [
                _HelmetConstants.TAG_PROPERTIES.SRC,
                _HelmetConstants.TAG_PROPERTIES.INNER_HTML,
              ],
              propsList
            ),
            styleTags: getTagsFromPropsList(
              _HelmetConstants.TAG_NAMES.STYLE,
              [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT],
              propsList
            ),
            title: getTitleFromPropsList(propsList),
            titleAttributes: getAttributesFromPropsList(
              _HelmetConstants.ATTRIBUTE_NAMES.TITLE,
              propsList
            ),
          };
        };

        var rafPolyfill = (function() {
          var clock = Date.now();

          return function(callback) {
            var currentTime = Date.now();

            if (currentTime - clock > 16) {
              clock = currentTime;
              callback(currentTime);
            } else {
              setTimeout(function() {
                rafPolyfill(callback);
              }, 0);
            }
          };
        })();

        var cafPolyfill = function cafPolyfill(id) {
          return clearTimeout(id);
        };

        var requestAnimationFrame =
          typeof window !== 'undefined'
            ? window.requestAnimationFrame ||
              window.webkitRequestAnimationFrame ||
              window.mozRequestAnimationFrame ||
              rafPolyfill
            : global.requestAnimationFrame || rafPolyfill;

        var cancelAnimationFrame =
          typeof window !== 'undefined'
            ? window.cancelAnimationFrame ||
              window.webkitCancelAnimationFrame ||
              window.mozCancelAnimationFrame ||
              cafPolyfill
            : global.cancelAnimationFrame || cafPolyfill;

        var warn = function warn(msg) {
          return (
            console && typeof console.warn === 'function' && console.warn(msg)
          );
        };

        var _helmetCallback = null;

        var handleClientStateChange = function handleClientStateChange(
          newState
        ) {
          if (_helmetCallback) {
            cancelAnimationFrame(_helmetCallback);
          }

          if (newState.defer) {
            _helmetCallback = requestAnimationFrame(function() {
              commitTagChanges(newState, function() {
                _helmetCallback = null;
              });
            });
          } else {
            commitTagChanges(newState);
            _helmetCallback = null;
          }
        };

        var commitTagChanges = function commitTagChanges(newState, cb) {
          var baseTag = newState.baseTag,
            bodyAttributes = newState.bodyAttributes,
            htmlAttributes = newState.htmlAttributes,
            linkTags = newState.linkTags,
            metaTags = newState.metaTags,
            noscriptTags = newState.noscriptTags,
            onChangeClientState = newState.onChangeClientState,
            scriptTags = newState.scriptTags,
            styleTags = newState.styleTags,
            title = newState.title,
            titleAttributes = newState.titleAttributes;

          updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);
          updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);

          updateTitle(title, titleAttributes);

          var tagUpdates = {
            baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),
            linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),
            metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),
            noscriptTags: updateTags(
              _HelmetConstants.TAG_NAMES.NOSCRIPT,
              noscriptTags
            ),
            scriptTags: updateTags(
              _HelmetConstants.TAG_NAMES.SCRIPT,
              scriptTags
            ),
            styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags),
          };

          var addedTags = {};
          var removedTags = {};

          Object.keys(tagUpdates).forEach(function(tagType) {
            var _tagUpdates$tagType = tagUpdates[tagType],
              newTags = _tagUpdates$tagType.newTags,
              oldTags = _tagUpdates$tagType.oldTags;

            if (newTags.length) {
              addedTags[tagType] = newTags;
            }
            if (oldTags.length) {
              removedTags[tagType] = tagUpdates[tagType].oldTags;
            }
          });

          cb && cb();

          onChangeClientState(newState, addedTags, removedTags);
        };

        var flattenArray = function flattenArray(possibleArray) {
          return Array.isArray(possibleArray)
            ? possibleArray.join('')
            : possibleArray;
        };

        var updateTitle = function updateTitle(title, attributes) {
          if (typeof title !== 'undefined' && document.title !== title) {
            document.title = flattenArray(title);
          }

          updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);
        };

        var updateAttributes = function updateAttributes(tagName, attributes) {
          var elementTag = document.getElementsByTagName(tagName)[0];

          if (!elementTag) {
            return;
          }

          var helmetAttributeString = elementTag.getAttribute(
            _HelmetConstants.HELMET_ATTRIBUTE
          );
          var helmetAttributes = helmetAttributeString
            ? helmetAttributeString.split(',')
            : [];
          var attributesToRemove = [].concat(helmetAttributes);
          var attributeKeys = Object.keys(attributes);

          for (var i = 0; i < attributeKeys.length; i++) {
            var attribute = attributeKeys[i];
            var value = attributes[attribute] || '';

            if (elementTag.getAttribute(attribute) !== value) {
              elementTag.setAttribute(attribute, value);
            }

            if (helmetAttributes.indexOf(attribute) === -1) {
              helmetAttributes.push(attribute);
            }

            var indexToSave = attributesToRemove.indexOf(attribute);
            if (indexToSave !== -1) {
              attributesToRemove.splice(indexToSave, 1);
            }
          }

          for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {
            elementTag.removeAttribute(attributesToRemove[_i]);
          }

          if (helmetAttributes.length === attributesToRemove.length) {
            elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);
          } else if (
            elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !==
            attributeKeys.join(',')
          ) {
            elementTag.setAttribute(
              _HelmetConstants.HELMET_ATTRIBUTE,
              attributeKeys.join(',')
            );
          }
        };

        var updateTags = function updateTags(type, tags) {
          var headElement =
            document.head ||
            document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);
          var tagNodes = headElement.querySelectorAll(
            type + '[' + _HelmetConstants.HELMET_ATTRIBUTE + ']'
          );
          var oldTags = Array.prototype.slice.call(tagNodes);
          var newTags = [];
          var indexToDelete = void 0;

          if (tags && tags.length) {
            tags.forEach(function(tag) {
              var newElement = document.createElement(type);

              for (var attribute in tag) {
                if (tag.hasOwnProperty(attribute)) {
                  if (
                    attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML
                  ) {
                    newElement.innerHTML = tag.innerHTML;
                  } else if (
                    attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT
                  ) {
                    if (newElement.styleSheet) {
                      newElement.styleSheet.cssText = tag.cssText;
                    } else {
                      newElement.appendChild(
                        document.createTextNode(tag.cssText)
                      );
                    }
                  } else {
                    var value =
                      typeof tag[attribute] === 'undefined'
                        ? ''
                        : tag[attribute];
                    newElement.setAttribute(attribute, value);
                  }
                }
              }

              newElement.setAttribute(
                _HelmetConstants.HELMET_ATTRIBUTE,
                'true'
              );

              // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.
              if (
                oldTags.some(function(existingTag, index) {
                  indexToDelete = index;
                  return newElement.isEqualNode(existingTag);
                })
              ) {
                oldTags.splice(indexToDelete, 1);
              } else {
                newTags.push(newElement);
              }
            });
          }

          oldTags.forEach(function(tag) {
            return tag.parentNode.removeChild(tag);
          });
          newTags.forEach(function(tag) {
            return headElement.appendChild(tag);
          });

          return {
            oldTags: oldTags,
            newTags: newTags,
          };
        };

        var generateElementAttributesAsString = function generateElementAttributesAsString(
          attributes
        ) {
          return Object.keys(attributes).reduce(function(str, key) {
            var attr =
              typeof attributes[key] !== 'undefined'
                ? key + '="' + attributes[key] + '"'
                : '' + key;
            return str ? str + ' ' + attr : attr;
          }, '');
        };

        var generateTitleAsString = function generateTitleAsString(
          type,
          title,
          attributes,
          encode
        ) {
          var attributeString = generateElementAttributesAsString(attributes);
          var flattenedTitle = flattenArray(title);
          return attributeString
            ? '<' +
                type +
                ' ' +
                _HelmetConstants.HELMET_ATTRIBUTE +
                '="true" ' +
                attributeString +
                '>' +
                encodeSpecialCharacters(flattenedTitle, encode) +
                '</' +
                type +
                '>'
            : '<' +
                type +
                ' ' +
                _HelmetConstants.HELMET_ATTRIBUTE +
                '="true">' +
                encodeSpecialCharacters(flattenedTitle, encode) +
                '</' +
                type +
                '>';
        };

        var generateTagsAsString = function generateTagsAsString(
          type,
          tags,
          encode
        ) {
          return tags.reduce(function(str, tag) {
            var attributeHtml = Object.keys(tag)
              .filter(function(attribute) {
                return !(
                  attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML ||
                  attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT
                );
              })
              .reduce(function(string, attribute) {
                var attr =
                  typeof tag[attribute] === 'undefined'
                    ? attribute
                    : attribute +
                      '="' +
                      encodeSpecialCharacters(tag[attribute], encode) +
                      '"';
                return string ? string + ' ' + attr : attr;
              }, '');

            var tagContent = tag.innerHTML || tag.cssText || '';

            var isSelfClosing =
              _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;

            return (
              str +
              '<' +
              type +
              ' ' +
              _HelmetConstants.HELMET_ATTRIBUTE +
              '="true" ' +
              attributeHtml +
              (isSelfClosing ? '/>' : '>' + tagContent + '</' + type + '>')
            );
          }, '');
        };

        var convertElementAttributestoReactProps = function convertElementAttributestoReactProps(
          attributes
        ) {
          var initProps =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};

          return Object.keys(attributes).reduce(function(obj, key) {
            obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];
            return obj;
          }, initProps);
        };

        var convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(
          props
        ) {
          var initAttributes =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};

          return Object.keys(props).reduce(function(obj, key) {
            obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];
            return obj;
          }, initAttributes);
        };

        var generateTitleAsReactComponent = function generateTitleAsReactComponent(
          type,
          title,
          attributes
        ) {
          var _initProps;

          // assigning into an array to define toString function on it
          var initProps = ((_initProps = {
            key: title,
          }),
          (_initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true),
          _initProps);
          var props = convertElementAttributestoReactProps(
            attributes,
            initProps
          );

          return [
            _react2.default.createElement(
              _HelmetConstants.TAG_NAMES.TITLE,
              props,
              title
            ),
          ];
        };

        var generateTagsAsReactComponent = function generateTagsAsReactComponent(
          type,
          tags
        ) {
          return tags.map(function(tag, i) {
            var _mappedTag;

            var mappedTag = ((_mappedTag = {
              key: i,
            }),
            (_mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true),
            _mappedTag);

            Object.keys(tag).forEach(function(attribute) {
              var mappedAttribute =
                _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;

              if (
                mappedAttribute ===
                  _HelmetConstants.TAG_PROPERTIES.INNER_HTML ||
                mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT
              ) {
                var content = tag.innerHTML || tag.cssText;
                mappedTag.dangerouslySetInnerHTML = { __html: content };
              } else {
                mappedTag[mappedAttribute] = tag[attribute];
              }
            });

            return _react2.default.createElement(type, mappedTag);
          });
        };

        var getMethodsForTag = function getMethodsForTag(type, tags, encode) {
          switch (type) {
            case _HelmetConstants.TAG_NAMES.TITLE:
              return {
                toComponent: function toComponent() {
                  return generateTitleAsReactComponent(
                    type,
                    tags.title,
                    tags.titleAttributes,
                    encode
                  );
                },
                toString: function toString() {
                  return generateTitleAsString(
                    type,
                    tags.title,
                    tags.titleAttributes,
                    encode
                  );
                },
              };
            case _HelmetConstants.ATTRIBUTE_NAMES.BODY:
            case _HelmetConstants.ATTRIBUTE_NAMES.HTML:
              return {
                toComponent: function toComponent() {
                  return convertElementAttributestoReactProps(tags);
                },
                toString: function toString() {
                  return generateElementAttributesAsString(tags);
                },
              };
            default:
              return {
                toComponent: function toComponent() {
                  return generateTagsAsReactComponent(type, tags);
                },
                toString: function toString() {
                  return generateTagsAsString(type, tags, encode);
                },
              };
          }
        };

        var mapStateOnServer = function mapStateOnServer(_ref) {
          var baseTag = _ref.baseTag,
            bodyAttributes = _ref.bodyAttributes,
            encode = _ref.encode,
            htmlAttributes = _ref.htmlAttributes,
            linkTags = _ref.linkTags,
            metaTags = _ref.metaTags,
            noscriptTags = _ref.noscriptTags,
            scriptTags = _ref.scriptTags,
            styleTags = _ref.styleTags,
            _ref$title = _ref.title,
            title = _ref$title === undefined ? '' : _ref$title,
            titleAttributes = _ref.titleAttributes;
          return {
            base: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.BASE,
              baseTag,
              encode
            ),
            bodyAttributes: getMethodsForTag(
              _HelmetConstants.ATTRIBUTE_NAMES.BODY,
              bodyAttributes,
              encode
            ),
            htmlAttributes: getMethodsForTag(
              _HelmetConstants.ATTRIBUTE_NAMES.HTML,
              htmlAttributes,
              encode
            ),
            link: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.LINK,
              linkTags,
              encode
            ),
            meta: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.META,
              metaTags,
              encode
            ),
            noscript: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.NOSCRIPT,
              noscriptTags,
              encode
            ),
            script: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.SCRIPT,
              scriptTags,
              encode
            ),
            style: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.STYLE,
              styleTags,
              encode
            ),
            title: getMethodsForTag(
              _HelmetConstants.TAG_NAMES.TITLE,
              { title: title, titleAttributes: titleAttributes },
              encode
            ),
          };
        };

        exports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;
        exports.handleClientStateChange = handleClientStateChange;
        exports.mapStateOnServer = mapStateOnServer;
        exports.reducePropsToState = reducePropsToState;
        exports.requestAnimationFrame = requestAnimationFrame;
        exports.warn = warn;

        /***/
      },
      /* 168 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _class, _temp2;

        exports.withRouteData = withRouteData;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactRouterDom = __webpack_require__(10);

        var _methods = __webpack_require__(14);

        var _shared = __webpack_require__(9);

        var _DevSpinner = __webpack_require__(35);

        var _DevSpinner2 = _interopRequireDefault(_DevSpinner);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var warnedPaths = {};
        var instances = [];

        global.reloadAll = function() {
          instances.forEach(function(instance) {
            return instance.reloadRouteData();
          });
        };

        var RouteData = (0, _reactRouterDom.withRouter)(
          ((_temp2 = _class = (function(_React$Component) {
            _inherits(RouteData, _React$Component);

            function RouteData() {
              var _ref,
                _this2 = this;

              var _temp, _this, _ret;

              _classCallCheck(this, RouteData);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                  this,
                  (_ref =
                    RouteData.__proto__ ||
                    Object.getPrototypeOf(RouteData)).call.apply(
                    _ref,
                    [this].concat(args)
                  )
                )),
                _this)),
                (_this.state = {
                  loaded: false,
                }),
                (_this.reloadRouteData = function() {
                  return _asyncToGenerator(
                    /*#__PURE__*/ _regenerator2.default.mark(
                      function _callee() {
                        return _regenerator2.default.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  _context.next = 2;
                                  return _this.loadRouteData();

                                case 2:
                                  _this.forceUpdate();

                                case 3:
                                case 'end':
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          _this2
                        );
                      }
                    )
                  )();
                }),
                (_this.loadRouteData = function() {
                  return _asyncToGenerator(
                    /*#__PURE__*/ _regenerator2.default.mark(
                      function _callee2() {
                        var _this$props, is404, pathname, path;

                        return _regenerator2.default.wrap(
                          function _callee2$(_context2) {
                            while (1) {
                              switch ((_context2.prev = _context2.next)) {
                                case 0:
                                  (_this$props = _this.props),
                                    (is404 = _this$props.is404),
                                    (pathname = _this$props.location.pathname);
                                  path = (0, _shared.cleanPath)(
                                    is404 ? '404' : pathname
                                  );
                                  _context2.prev = 2;
                                  _context2.next = 5;
                                  return (0, _methods.prefetch)(path);

                                case 5:
                                  return _context2.abrupt(
                                    'return',
                                    new Promise(function(resolve) {
                                      _this.setState({ loaded: true }, resolve);
                                    })
                                  );

                                case 8:
                                  _context2.prev = 8;
                                  _context2.t0 = _context2['catch'](2);
                                  return _context2.abrupt(
                                    'return',
                                    new Promise(function(resolve) {
                                      _this.setState({ loaded: true }, resolve);
                                    })
                                  );

                                case 11:
                                case 'end':
                                  return _context2.stop();
                              }
                            }
                          },
                          _callee2,
                          _this2,
                          [[2, 8]]
                        );
                      }
                    )
                  )();
                }),
                _temp)),
                _possibleConstructorReturn(_this, _ret)
              );
            }

            _createClass(RouteData, [
              {
                key: 'componentWillMount',
                value: function componentWillMount() {
                  if (false) {
                    this.loadRouteData();
                  }
                },
              },
              {
                key: 'componentDidMount',
                value: function componentDidMount() {
                  instances.push(this);
                },
              },
              {
                key: 'componentWillReceiveProps',
                value: function componentWillReceiveProps(nextProps) {
                  if (false) {
                    if (
                      this.props.location.pathname !==
                      nextProps.location.pathname
                    ) {
                      this.setState({ loaded: false }, this.loadRouteData);
                    }
                  }
                },
              },
              {
                key: 'componentWillUnmount',
                value: function componentWillUnmount() {
                  var _this3 = this;

                  instances = instances.filter(function(d) {
                    return d !== _this3;
                  });
                  this.unmounting = true;
                },
              },
              {
                key: 'render',
                value: function render() {
                  var _props = this.props,
                    component = _props.component,
                    render = _props.render,
                    children = _props.children,
                    pathname = _props.location.pathname,
                    rest = _objectWithoutProperties(_props, [
                      'component',
                      'render',
                      'children',
                      'location',
                    ]);

                  var loaded = this.state.loaded;

                  var path = (0, _shared.cleanPath)(
                    rest.is404 ? '404' : pathname
                  );

                  var allProps = void 0;

                  // Attempt to get routeInfo from window (first-load on client)
                  if (
                    typeof window !== 'undefined' &&
                    window.__routeInfo &&
                    (window.__routeInfo.path === path ||
                      window.__routeInfo.path === '404')
                  ) {
                    loaded = true; // Since these are synchronous, override loading to true
                    allProps = window.__routeInfo.allProps;
                  }

                  // Attempt to get routeInfo from context (SSR)
                  if (
                    !allProps &&
                    this.context.routeInfo &&
                    this.context.routeInfo.allProps
                  ) {
                    loaded = true; // Override loaded to true
                    allProps =
                      this.context.routeInfo && this.context.routeInfo.allProps;
                  } else if (_methods.routeInfoByPath[path]) {
                    // Otherwise, get it from the routeInfoByPath (subsequent client side)
                    loaded = true; // Override loaded to true
                    allProps = _methods.routeInfoByPath[path].allProps;
                  }

                  if (!allProps && !rest.is404 && !warnedPaths[path]) {
                    warnedPaths[path] = true;
                    console.warn(
                      "RouteData or withRouteData couldn't find any props for path: " +
                        path +
                        ". You are either missing a route.getData function or you are relying on RouteData/withRouteData where you don't need to."
                    );
                  }

                  if (!loaded) {
                    if (false) {
                      return _react2.default.createElement(
                        _DevSpinner2.default,
                        null
                      );
                    }
                    return null;
                  }

                  var finalProps = _extends({}, rest, allProps);
                  if (component) {
                    return _react2.default.createElement(
                      component,
                      finalProps,
                      children
                    );
                  }
                  if (render) {
                    return render(finalProps);
                  }
                  return children(finalProps);
                },
              },
            ]);

            return RouteData;
          })(_react2.default.Component)),
          (_class.contextTypes = {
            routeInfo: _propTypes2.default.object,
          }),
          _temp2)
        );

        exports.default = RouteData;
        function withRouteData(Comp) {
          return function ConnectedRouteData(props) {
            return _react2.default.createElement(
              RouteData,
              _extends({ component: Comp }, props)
            );
          };
        }

        /***/
      },
      /* 169 */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // This method of obtaining a reference to the global object needs to be
        // kept identical to the way it is obtained in runtime.js
        var g =
          (function() {
            return this;
          })() || Function('return this')();

        // Use `getOwnPropertyNames` because not all browsers support calling
        // `hasOwnProperty` on the global `self` object in a worker. See #183.
        var hadRuntime =
          g.regeneratorRuntime &&
          Object.getOwnPropertyNames(g).indexOf('regeneratorRuntime') >= 0;

        // Save the old regeneratorRuntime in case it needs to be restored later.
        var oldRuntime = hadRuntime && g.regeneratorRuntime;

        // Force reevalutation of runtime.js.
        g.regeneratorRuntime = undefined;

        module.exports = __webpack_require__(170);

        if (hadRuntime) {
          // Restore the original runtime.
          g.regeneratorRuntime = oldRuntime;
        } else {
          // Remove the global property added by runtime.js.
          try {
            delete g.regeneratorRuntime;
          } catch (e) {
            g.regeneratorRuntime = undefined;
          }
        }

        /***/
      },
      /* 170 */
      /***/ function(module, exports) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        !(function(global) {
          'use strict';

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === 'function' ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || '@@iterator';
          var asyncIteratorSymbol = $Symbol.asyncIterator || '@@asyncIterator';
          var toStringTagSymbol = $Symbol.toStringTag || '@@toStringTag';

          var inModule = typeof module === 'object';
          var runtime = global.regeneratorRuntime;
          if (runtime) {
            if (inModule) {
              // If regeneratorRuntime is defined globally and we're in a module,
              // make the exports object identical to regeneratorRuntime.
              module.exports = runtime;
            }
            // Don't bother evaluating the rest of this file if the runtime was
            // already defined globally.
            return;
          }

          // Define the runtime globally (as expected by generated code) as either
          // module.exports (if we're in a module) or a new, empty object.
          runtime = global.regeneratorRuntime = inModule ? module.exports : {};

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          runtime.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: 'normal', arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: 'throw', arg: err };
            }
          }

          var GenStateSuspendedStart = 'suspendedStart';
          var GenStateSuspendedYield = 'suspendedYield';
          var GenStateExecuting = 'executing';
          var GenStateCompleted = 'completed';

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function() {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[
            toStringTagSymbol
          ] = GeneratorFunction.displayName = 'GeneratorFunction';

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ['next', 'throw', 'return'].forEach(function(method) {
              prototype[method] = function(arg) {
                return this._invoke(method, arg);
              };
            });
          }

          runtime.isGeneratorFunction = function(genFun) {
            var ctor = typeof genFun === 'function' && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === 'GeneratorFunction'
              : false;
          };

          runtime.mark = function(genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = 'GeneratorFunction';
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          runtime.awrap = function(arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === 'throw') {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === 'object' &&
                  hasOwn.call(value, '__await')
                ) {
                  return Promise.resolve(value.__await).then(
                    function(value) {
                      invoke('next', value, resolve, reject);
                    },
                    function(err) {
                      invoke('throw', err, resolve, reject);
                    }
                  );
                }

                return Promise.resolve(value).then(function(unwrapped) {
                  // When a yielded Promise is resolved, its final value becomes
                  // the .value of the Promise<{value,done}> result for the
                  // current iteration. If the Promise is rejected, however, the
                  // result for this iteration will be rejected with the same
                  // reason. Note that rejections of yielded Promises are not
                  // thrown back into the generator function, as is the case
                  // when an awaited Promise is rejected. This difference in
                  // behavior between yield and await is important, because it
                  // allows the consumer to decide what to do with the yielded
                  // rejection (swallow it and continue, manually .throw it back
                  // into the generator, abandon iteration, whatever). With
                  // await, by contrast, there is no opportunity to examine the
                  // rejection reason outside the generator function, so the
                  // only option is to throw it from the await expression, and
                  // let the generator function handle the exception.
                  result.value = unwrapped;
                  resolve(result);
                }, reject);
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new Promise(function(resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function() {
            return this;
          };
          runtime.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          runtime.async = function(innerFn, outerFn, self, tryLocsList) {
            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList)
            );

            return runtime.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function(result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error('Generator is already running');
              }

              if (state === GenStateCompleted) {
                if (method === 'throw') {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === 'next') {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === 'throw') {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === 'return') {
                  context.abrupt('return', context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === 'normal') {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  };
                } else if (record.type === 'throw') {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = 'throw';
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === 'throw') {
                if (delegate.iterator.return) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = 'return';
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === 'throw') {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = 'throw';
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === 'throw') {
              context.method = 'throw';
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = 'throw';
              context.arg = new TypeError('iterator result is not an object');
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== 'return') {
                context.method = 'next';
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = 'Generator';

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function() {
            return this;
          };

          Gp.toString = function() {
            return '[object Generator]';
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = 'normal';
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: 'root' }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          runtime.keys = function(object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === 'function') {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          runtime.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function(skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = 'next';
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === 't' &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function() {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === 'throw') {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function(exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = 'throw';
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = 'next';
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === 'root') {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle('end');
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, 'catchLoc');
                  var hasFinally = hasOwn.call(entry, 'finallyLoc');

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error('try statement without catch or finally');
                  }
                }
              }
            },

            abrupt: function(type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, 'finallyLoc') &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === 'break' || type === 'continue') &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = 'next';
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function(record, afterLoc) {
              if (record.type === 'throw') {
                throw record.arg;
              }

              if (record.type === 'break' || record.type === 'continue') {
                this.next = record.arg;
              } else if (record.type === 'return') {
                this.rval = this.arg = record.arg;
                this.method = 'return';
                this.next = 'end';
              } else if (record.type === 'normal' && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function(finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function(tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === 'throw') {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error('illegal catch attempt');
            },

            delegateYield: function(iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              if (this.method === 'next') {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            },
          };
        })(
          // In sloppy mode, unbound `this` refers to the global object, fallback to
          // Function constructor if we're in global strict mode. That is sadly a form
          // of indirect eval which violates Content Security Policy.
          (function() {
            return this;
          })() || Function('return this')()
        );

        /***/
      },
      /* 171 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);
        var bind = __webpack_require__(68);
        var Axios = __webpack_require__(172);
        var defaults = __webpack_require__(33);

        /**
         * Create an instance of Axios
         *
         * @param {Object} defaultConfig The default config for the instance
         * @return {Axios} A new instance of Axios
         */
        function createInstance(defaultConfig) {
          var context = new Axios(defaultConfig);
          var instance = bind(Axios.prototype.request, context);

          // Copy axios.prototype to instance
          utils.extend(instance, Axios.prototype, context);

          // Copy context to instance
          utils.extend(instance, context);

          return instance;
        }

        // Create the default instance to be exported
        var axios = createInstance(defaults);

        // Expose Axios class to allow class inheritance
        axios.Axios = Axios;

        // Factory for creating new instances
        axios.create = function create(instanceConfig) {
          return createInstance(utils.merge(defaults, instanceConfig));
        };

        // Expose Cancel & CancelToken
        axios.Cancel = __webpack_require__(80);
        axios.CancelToken = __webpack_require__(197);
        axios.isCancel = __webpack_require__(79);

        // Expose all/spread
        axios.all = function all(promises) {
          return Promise.all(promises);
        };
        axios.spread = __webpack_require__(198);

        module.exports = axios;

        // Allow use of default import syntax in TypeScript
        module.exports.default = axios;

        /***/
      },
      /* 172 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var defaults = __webpack_require__(33);
        var utils = __webpack_require__(3);
        var InterceptorManager = __webpack_require__(192);
        var dispatchRequest = __webpack_require__(193);
        var isAbsoluteURL = __webpack_require__(195);
        var combineURLs = __webpack_require__(196);

        /**
         * Create a new instance of Axios
         *
         * @param {Object} instanceConfig The default config for the instance
         */
        function Axios(instanceConfig) {
          this.defaults = instanceConfig;
          this.interceptors = {
            request: new InterceptorManager(),
            response: new InterceptorManager(),
          };
        }

        /**
         * Dispatch a request
         *
         * @param {Object} config The config specific for this request (merged with this.defaults)
         */
        Axios.prototype.request = function request(config) {
          /*eslint no-param-reassign:0*/
          // Allow for axios('example/url'[, config]) a la fetch API
          if (typeof config === 'string') {
            config = utils.merge(
              {
                url: arguments[0],
              },
              arguments[1]
            );
          }

          config = utils.merge(
            defaults,
            this.defaults,
            { method: 'get' },
            config
          );
          config.method = config.method.toLowerCase();

          // Support baseURL config
          if (config.baseURL && !isAbsoluteURL(config.url)) {
            config.url = combineURLs(config.baseURL, config.url);
          }

          // Hook up interceptors middleware
          var chain = [dispatchRequest, undefined];
          var promise = Promise.resolve(config);

          this.interceptors.request.forEach(function unshiftRequestInterceptors(
            interceptor
          ) {
            chain.unshift(interceptor.fulfilled, interceptor.rejected);
          });

          this.interceptors.response.forEach(function pushResponseInterceptors(
            interceptor
          ) {
            chain.push(interceptor.fulfilled, interceptor.rejected);
          });

          while (chain.length) {
            promise = promise.then(chain.shift(), chain.shift());
          }

          return promise;
        };

        // Provide aliases for supported request methods
        utils.forEach(
          ['delete', 'get', 'head', 'options'],
          function forEachMethodNoData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function(url, config) {
              return this.request(
                utils.merge(config || {}, {
                  method: method,
                  url: url,
                })
              );
            };
          }
        );

        utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(
          method
        ) {
          /*eslint func-names:0*/
          Axios.prototype[method] = function(url, data, config) {
            return this.request(
              utils.merge(config || {}, {
                method: method,
                url: url,
                data: data,
              })
            );
          };
        });

        module.exports = Axios;

        /***/
      },
      /* 173 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        module.exports = function normalizeHeaderName(headers, normalizedName) {
          utils.forEach(headers, function processHeader(value, name) {
            if (
              name !== normalizedName &&
              name.toUpperCase() === normalizedName.toUpperCase()
            ) {
              headers[normalizedName] = value;
              delete headers[name];
            }
          });
        };

        /***/
      },
      /* 174 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);
        var settle = __webpack_require__(70);
        var buildURL = __webpack_require__(72);
        var parseHeaders = __webpack_require__(175);
        var isURLSameOrigin = __webpack_require__(176);
        var createError = __webpack_require__(34);
        var btoa =
          (typeof window !== 'undefined' &&
            window.btoa &&
            window.btoa.bind(window)) ||
          __webpack_require__(177);

        module.exports = function xhrAdapter(config) {
          return new Promise(function dispatchXhrRequest(resolve, reject) {
            var requestData = config.data;
            var requestHeaders = config.headers;

            if (utils.isFormData(requestData)) {
              delete requestHeaders['Content-Type']; // Let the browser set it
            }

            var request = new XMLHttpRequest();
            var loadEvent = 'onreadystatechange';
            var xDomain = false;

            // For IE 8/9 CORS support
            // Only supports POST and GET calls and doesn't returns the response headers.
            // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
            if (
              'production' !== 'test' &&
              typeof window !== 'undefined' &&
              window.XDomainRequest &&
              !('withCredentials' in request) &&
              !isURLSameOrigin(config.url)
            ) {
              request = new window.XDomainRequest();
              loadEvent = 'onload';
              xDomain = true;
              request.onprogress = function handleProgress() {};
              request.ontimeout = function handleTimeout() {};
            }

            // HTTP basic authentication
            if (config.auth) {
              var username = config.auth.username || '';
              var password = config.auth.password || '';
              requestHeaders.Authorization =
                'Basic ' + btoa(username + ':' + password);
            }

            request.open(
              config.method.toUpperCase(),
              buildURL(config.url, config.params, config.paramsSerializer),
              true
            );

            // Set the request timeout in MS
            request.timeout = config.timeout;

            // Listen for ready state
            request[loadEvent] = function handleLoad() {
              if (!request || (request.readyState !== 4 && !xDomain)) {
                return;
              }

              // The request errored out and we didn't get a response, this will be
              // handled by onerror instead
              // With one exception: request that using file: protocol, most browsers
              // will return status as 0 even though it's a successful request
              if (
                request.status === 0 &&
                !(
                  request.responseURL &&
                  request.responseURL.indexOf('file:') === 0
                )
              ) {
                return;
              }

              // Prepare the response
              var responseHeaders =
                'getAllResponseHeaders' in request
                  ? parseHeaders(request.getAllResponseHeaders())
                  : null;
              var responseData =
                !config.responseType || config.responseType === 'text'
                  ? request.responseText
                  : request.response;
              var response = {
                data: responseData,
                // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
                status: request.status === 1223 ? 204 : request.status,
                statusText:
                  request.status === 1223 ? 'No Content' : request.statusText,
                headers: responseHeaders,
                config: config,
                request: request,
              };

              settle(resolve, reject, response);

              // Clean up request
              request = null;
            };

            // Handle low level network errors
            request.onerror = function handleError() {
              // Real errors are hidden from us by the browser
              // onerror should only fire if it's a network error
              reject(createError('Network Error', config, null, request));

              // Clean up request
              request = null;
            };

            // Handle timeout
            request.ontimeout = function handleTimeout() {
              reject(
                createError(
                  'timeout of ' + config.timeout + 'ms exceeded',
                  config,
                  'ECONNABORTED',
                  request
                )
              );

              // Clean up request
              request = null;
            };

            // Add xsrf header
            // This is only done if running in a standard browser environment.
            // Specifically not if we're in a web worker, or react-native.
            if (utils.isStandardBrowserEnv()) {
              var cookies = __webpack_require__(178);

              // Add xsrf header
              var xsrfValue =
                (config.withCredentials || isURLSameOrigin(config.url)) &&
                config.xsrfCookieName
                  ? cookies.read(config.xsrfCookieName)
                  : undefined;

              if (xsrfValue) {
                requestHeaders[config.xsrfHeaderName] = xsrfValue;
              }
            }

            // Add headers to the request
            if ('setRequestHeader' in request) {
              utils.forEach(requestHeaders, function setRequestHeader(
                val,
                key
              ) {
                if (
                  typeof requestData === 'undefined' &&
                  key.toLowerCase() === 'content-type'
                ) {
                  // Remove Content-Type if data is undefined
                  delete requestHeaders[key];
                } else {
                  // Otherwise add header to the request
                  request.setRequestHeader(key, val);
                }
              });
            }

            // Add withCredentials to request if needed
            if (config.withCredentials) {
              request.withCredentials = true;
            }

            // Add responseType to request if needed
            if (config.responseType) {
              try {
                request.responseType = config.responseType;
              } catch (e) {
                // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                if (config.responseType !== 'json') {
                  throw e;
                }
              }
            }

            // Handle progress if needed
            if (typeof config.onDownloadProgress === 'function') {
              request.addEventListener('progress', config.onDownloadProgress);
            }

            // Not all browsers support upload events
            if (
              typeof config.onUploadProgress === 'function' &&
              request.upload
            ) {
              request.upload.addEventListener(
                'progress',
                config.onUploadProgress
              );
            }

            if (config.cancelToken) {
              // Handle cancellation
              config.cancelToken.promise.then(function onCanceled(cancel) {
                if (!request) {
                  return;
                }

                request.abort();
                reject(cancel);
                // Clean up request
                request = null;
              });
            }

            if (requestData === undefined) {
              requestData = null;
            }

            // Send the request
            request.send(requestData);
          });
        };

        /***/
      },
      /* 175 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        /**
         * Parse headers into an object
         *
         * ```
         * Date: Wed, 27 Aug 2014 08:58:49 GMT
         * Content-Type: application/json
         * Connection: keep-alive
         * Transfer-Encoding: chunked
         * ```
         *
         * @param {String} headers Headers needing to be parsed
         * @returns {Object} Headers parsed into an object
         */
        module.exports = function parseHeaders(headers) {
          var parsed = {};
          var key;
          var val;
          var i;

          if (!headers) {
            return parsed;
          }

          utils.forEach(headers.split('\n'), function parser(line) {
            i = line.indexOf(':');
            key = utils.trim(line.substr(0, i)).toLowerCase();
            val = utils.trim(line.substr(i + 1));

            if (key) {
              parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
            }
          });

          return parsed;
        };

        /***/
      },
      /* 176 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs have full support of the APIs needed to test
            // whether the request URL is of the same origin as current location.
            (function standardBrowserEnv() {
              var msie = /(msie|trident)/i.test(navigator.userAgent);
              var urlParsingNode = document.createElement('a');
              var originURL;

              /**
               * Parse a URL to discover it's components
               *
               * @param {String} url The URL to be parsed
               * @returns {Object}
               */
              function resolveURL(url) {
                var href = url;

                if (msie) {
                  // IE needs attribute set twice to normalize properties
                  urlParsingNode.setAttribute('href', href);
                  href = urlParsingNode.href;
                }

                urlParsingNode.setAttribute('href', href);

                // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                return {
                  href: urlParsingNode.href,
                  protocol: urlParsingNode.protocol
                    ? urlParsingNode.protocol.replace(/:$/, '')
                    : '',
                  host: urlParsingNode.host,
                  search: urlParsingNode.search
                    ? urlParsingNode.search.replace(/^\?/, '')
                    : '',
                  hash: urlParsingNode.hash
                    ? urlParsingNode.hash.replace(/^#/, '')
                    : '',
                  hostname: urlParsingNode.hostname,
                  port: urlParsingNode.port,
                  pathname:
                    urlParsingNode.pathname.charAt(0) === '/'
                      ? urlParsingNode.pathname
                      : '/' + urlParsingNode.pathname,
                };
              }

              originURL = resolveURL(window.location.href);

              /**
               * Determine if a URL shares the same origin as the current location
               *
               * @param {String} requestURL The URL to test
               * @returns {boolean} True if URL shares the same origin, otherwise false
               */
              return function isURLSameOrigin(requestURL) {
                var parsed = utils.isString(requestURL)
                  ? resolveURL(requestURL)
                  : requestURL;
                return (
                  parsed.protocol === originURL.protocol &&
                  parsed.host === originURL.host
                );
              };
            })()
          : // Non standard browser envs (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return function isURLSameOrigin() {
                return true;
              };
            })();

        /***/
      },
      /* 177 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

        var chars =
          'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

        function E() {
          this.message = 'String contains an invalid character';
        }
        E.prototype = new Error();
        E.prototype.code = 5;
        E.prototype.name = 'InvalidCharacterError';

        function btoa(input) {
          var str = String(input);
          var output = '';
          for (
            // initialize result and counter
            var block, charCode, idx = 0, map = chars;
            // if the next str index does not exist:
            //   change the mapping table to "="
            //   check if d has no fractional digits
            str.charAt(idx | 0) || ((map = '='), idx % 1);
            // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
            output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))
          ) {
            charCode = str.charCodeAt((idx += 3 / 4));
            if (charCode > 0xff) {
              throw new E();
            }
            block = (block << 8) | charCode;
          }
          return output;
        }

        module.exports = btoa;

        /***/
      },
      /* 178 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        module.exports = utils.isStandardBrowserEnv()
          ? // Standard browser envs support document.cookie
            (function standardBrowserEnv() {
              return {
                write: function write(
                  name,
                  value,
                  expires,
                  path,
                  domain,
                  secure
                ) {
                  var cookie = [];
                  cookie.push(name + '=' + encodeURIComponent(value));

                  if (utils.isNumber(expires)) {
                    cookie.push('expires=' + new Date(expires).toGMTString());
                  }

                  if (utils.isString(path)) {
                    cookie.push('path=' + path);
                  }

                  if (utils.isString(domain)) {
                    cookie.push('domain=' + domain);
                  }

                  if (secure === true) {
                    cookie.push('secure');
                  }

                  document.cookie = cookie.join('; ');
                },

                read: function read(name) {
                  var match = document.cookie.match(
                    new RegExp('(^|;\\s*)(' + name + ')=([^;]*)')
                  );
                  return match ? decodeURIComponent(match[3]) : null;
                },

                remove: function remove(name) {
                  this.write(name, '', Date.now() - 86400000);
                },
              };
            })()
          : // Non standard browser env (web workers, react-native) lack needed support.
            (function nonStandardBrowserEnv() {
              return {
                write: function write() {},
                read: function read() {
                  return null;
                },
                remove: function remove() {},
              };
            })();

        /***/
      },
      /* 179 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);
        var settle = __webpack_require__(70);
        var buildURL = __webpack_require__(72);
        var http = __webpack_require__(73);
        var https = __webpack_require__(74);
        var httpFollow = __webpack_require__(75).http;
        var httpsFollow = __webpack_require__(75).https;
        var url = __webpack_require__(76);
        var zlib = __webpack_require__(190);
        var pkg = __webpack_require__(191);
        var createError = __webpack_require__(34);
        var enhanceError = __webpack_require__(71);

        /*eslint consistent-return:0*/
        module.exports = function httpAdapter(config) {
          return new Promise(function dispatchHttpRequest(resolve, reject) {
            var data = config.data;
            var headers = config.headers;
            var timer;
            var aborted = false;

            // Set User-Agent (required by some servers)
            // Only set header if it hasn't been set in config
            // See https://github.com/mzabriskie/axios/issues/69
            if (!headers['User-Agent'] && !headers['user-agent']) {
              headers['User-Agent'] = 'axios/' + pkg.version;
            }

            if (data && !utils.isStream(data)) {
              if (Buffer.isBuffer(data)) {
                // Nothing to do...
              } else if (utils.isArrayBuffer(data)) {
                data = new Buffer(new Uint8Array(data));
              } else if (utils.isString(data)) {
                data = new Buffer(data, 'utf-8');
              } else {
                return reject(
                  createError(
                    'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',
                    config
                  )
                );
              }

              // Add Content-Length header if data exists
              headers['Content-Length'] = data.length;
            }

            // HTTP basic authentication
            var auth = undefined;
            if (config.auth) {
              var username = config.auth.username || '';
              var password = config.auth.password || '';
              auth = username + ':' + password;
            }

            // Parse url
            var parsed = url.parse(config.url);
            var protocol = parsed.protocol || 'http:';

            if (!auth && parsed.auth) {
              var urlAuth = parsed.auth.split(':');
              var urlUsername = urlAuth[0] || '';
              var urlPassword = urlAuth[1] || '';
              auth = urlUsername + ':' + urlPassword;
            }

            if (auth) {
              delete headers.Authorization;
            }

            var isHttps = protocol === 'https:';
            var agent = isHttps ? config.httpsAgent : config.httpAgent;

            var options = {
              hostname: parsed.hostname,
              port: parsed.port,
              path: buildURL(
                parsed.path,
                config.params,
                config.paramsSerializer
              ).replace(/^\?/, ''),
              method: config.method,
              headers: headers,
              agent: agent,
              auth: auth,
            };

            var proxy = config.proxy;
            if (!proxy) {
              var proxyEnv = protocol.slice(0, -1) + '_proxy';
              var proxyUrl =
                process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
              if (proxyUrl) {
                var parsedProxyUrl = url.parse(proxyUrl);
                proxy = {
                  host: parsedProxyUrl.hostname,
                  port: parsedProxyUrl.port,
                };

                if (parsedProxyUrl.auth) {
                  var proxyUrlAuth = parsedProxyUrl.auth.split(':');
                  proxy.auth = {
                    username: proxyUrlAuth[0],
                    password: proxyUrlAuth[1],
                  };
                }
              }
            }

            if (proxy) {
              options.hostname = proxy.host;
              options.host = proxy.host;
              options.headers.host =
                parsed.hostname + (parsed.port ? ':' + parsed.port : '');
              options.port = proxy.port;
              options.path =
                protocol +
                '//' +
                parsed.hostname +
                (parsed.port ? ':' + parsed.port : '') +
                options.path;

              // Basic proxy authorization
              if (proxy.auth) {
                var base64 = new Buffer(
                  proxy.auth.username + ':' + proxy.auth.password,
                  'utf8'
                ).toString('base64');
                options.headers['Proxy-Authorization'] = 'Basic ' + base64;
              }
            }

            var transport;
            if (config.maxRedirects === 0) {
              transport = isHttps ? https : http;
            } else {
              if (config.maxRedirects) {
                options.maxRedirects = config.maxRedirects;
              }
              transport = isHttps ? httpsFollow : httpFollow;
            }

            // Create the request
            var req = transport.request(options, function handleResponse(res) {
              if (aborted) return;

              // Response has been received so kill timer that handles request timeout
              clearTimeout(timer);
              timer = null;

              // uncompress the response body transparently if required
              var stream = res;
              switch (res.headers['content-encoding']) {
                /*eslint default-case:0*/
                case 'gzip':
                case 'compress':
                case 'deflate':
                  // add the unzipper to the body stream processing pipeline
                  stream = stream.pipe(zlib.createUnzip());

                  // remove the content-encoding in order to not confuse downstream operations
                  delete res.headers['content-encoding'];
                  break;
              }

              // return the last request in case of redirects
              var lastRequest = res.req || req;

              var response = {
                status: res.statusCode,
                statusText: res.statusMessage,
                headers: res.headers,
                config: config,
                request: lastRequest,
              };

              if (config.responseType === 'stream') {
                response.data = stream;
                settle(resolve, reject, response);
              } else {
                var responseBuffer = [];
                stream.on('data', function handleStreamData(chunk) {
                  responseBuffer.push(chunk);

                  // make sure the content length is not over the maxContentLength if specified
                  if (
                    config.maxContentLength > -1 &&
                    Buffer.concat(responseBuffer).length >
                      config.maxContentLength
                  ) {
                    reject(
                      createError(
                        'maxContentLength size of ' +
                          config.maxContentLength +
                          ' exceeded',
                        config,
                        null,
                        lastRequest
                      )
                    );
                  }
                });

                stream.on('error', function handleStreamError(err) {
                  if (aborted) return;
                  reject(enhanceError(err, config, null, lastRequest));
                });

                stream.on('end', function handleStreamEnd() {
                  var responseData = Buffer.concat(responseBuffer);
                  if (config.responseType !== 'arraybuffer') {
                    responseData = responseData.toString('utf8');
                  }

                  response.data = responseData;
                  settle(resolve, reject, response);
                });
              }
            });

            // Handle errors
            req.on('error', function handleRequestError(err) {
              if (aborted) return;
              reject(enhanceError(err, config, null, req));
            });

            // Handle request timeout
            if (config.timeout && !timer) {
              timer = setTimeout(function handleRequestTimeout() {
                req.abort();
                reject(
                  createError(
                    'timeout of ' + config.timeout + 'ms exceeded',
                    config,
                    'ECONNABORTED',
                    req
                  )
                );
                aborted = true;
              }, config.timeout);
            }

            if (config.cancelToken) {
              // Handle cancellation
              config.cancelToken.promise.then(function onCanceled(cancel) {
                if (aborted) {
                  return;
                }

                req.abort();
                reject(cancel);
                aborted = true;
              });
            }

            // Send the request
            if (utils.isStream(data)) {
              data.pipe(req);
            } else {
              req.end(data);
            }
          });
        };

        /***/
      },
      /* 180 */
      /***/ function(module, exports) {
        module.exports = require('assert');

        /***/
      },
      /* 181 */
      /***/ function(module, exports) {
        module.exports = require('stream');

        /***/
      },
      /* 182 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Detect Electron renderer process, which is node, but we should
         * treat as a browser.
         */

        if (typeof process === 'undefined' || process.type === 'renderer') {
          module.exports = __webpack_require__(183);
        } else {
          module.exports = __webpack_require__(185);
        }

        /***/
      },
      /* 183 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        /**
         * This is the web browser implementation of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = __webpack_require__(77);
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage =
          'undefined' != typeof chrome && 'undefined' != typeof chrome.storage
            ? chrome.storage.local
            : localstorage();

        /**
         * Colors.
         */

        exports.colors = [
          '#0000CC',
          '#0000FF',
          '#0033CC',
          '#0033FF',
          '#0066CC',
          '#0066FF',
          '#0099CC',
          '#0099FF',
          '#00CC00',
          '#00CC33',
          '#00CC66',
          '#00CC99',
          '#00CCCC',
          '#00CCFF',
          '#3300CC',
          '#3300FF',
          '#3333CC',
          '#3333FF',
          '#3366CC',
          '#3366FF',
          '#3399CC',
          '#3399FF',
          '#33CC00',
          '#33CC33',
          '#33CC66',
          '#33CC99',
          '#33CCCC',
          '#33CCFF',
          '#6600CC',
          '#6600FF',
          '#6633CC',
          '#6633FF',
          '#66CC00',
          '#66CC33',
          '#9900CC',
          '#9900FF',
          '#9933CC',
          '#9933FF',
          '#99CC00',
          '#99CC33',
          '#CC0000',
          '#CC0033',
          '#CC0066',
          '#CC0099',
          '#CC00CC',
          '#CC00FF',
          '#CC3300',
          '#CC3333',
          '#CC3366',
          '#CC3399',
          '#CC33CC',
          '#CC33FF',
          '#CC6600',
          '#CC6633',
          '#CC9900',
          '#CC9933',
          '#CCCC00',
          '#CCCC33',
          '#FF0000',
          '#FF0033',
          '#FF0066',
          '#FF0099',
          '#FF00CC',
          '#FF00FF',
          '#FF3300',
          '#FF3333',
          '#FF3366',
          '#FF3399',
          '#FF33CC',
          '#FF33FF',
          '#FF6600',
          '#FF6633',
          '#FF9900',
          '#FF9933',
          '#FFCC00',
          '#FFCC33',
        ];

        /**
         * Currently only WebKit-based Web Inspectors, Firefox >= v31,
         * and the Firebug extension (any Firefox version) are known
         * to support "%c" CSS customizations.
         *
         * TODO: add a `localStorage` variable to explicitly enable/disable colors
         */

        function useColors() {
          // NB: In an Electron preload script, document will be defined but not fully
          // initialized. Since we know we're in Chrome, we'll just detect this case
          // explicitly
          if (
            typeof window !== 'undefined' &&
            window.process &&
            window.process.type === 'renderer'
          ) {
            return true;
          }

          // Internet Explorer and Edge do not support colors.
          if (
            typeof navigator !== 'undefined' &&
            navigator.userAgent &&
            navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)
          ) {
            return false;
          }

          // is webkit? http://stackoverflow.com/a/16459606/376773
          // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
          return (
            (typeof document !== 'undefined' &&
              document.documentElement &&
              document.documentElement.style &&
              document.documentElement.style.WebkitAppearance) ||
            // is firebug? http://stackoverflow.com/a/398120/376773
            (typeof window !== 'undefined' &&
              window.console &&
              (window.console.firebug ||
                (window.console.exception && window.console.table))) ||
            // is firefox >= v31?
            // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
            (typeof navigator !== 'undefined' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
              parseInt(RegExp.$1, 10) >= 31) ||
            // double check webkit in userAgent just in case we are in a worker
            (typeof navigator !== 'undefined' &&
              navigator.userAgent &&
              navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
          );
        }

        /**
         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
         */

        exports.formatters.j = function(v) {
          try {
            return JSON.stringify(v);
          } catch (err) {
            return '[UnexpectedJSONParseError]: ' + err.message;
          }
        };

        /**
         * Colorize log arguments if enabled.
         *
         * @api public
         */

        function formatArgs(args) {
          var useColors = this.useColors;

          args[0] =
            (useColors ? '%c' : '') +
            this.namespace +
            (useColors ? ' %c' : ' ') +
            args[0] +
            (useColors ? '%c ' : ' ') +
            '+' +
            exports.humanize(this.diff);

          if (!useColors) return;

          var c = 'color: ' + this.color;
          args.splice(1, 0, c, 'color: inherit');

          // the final "%c" is somewhat tricky, because there could be other
          // arguments passed either before or after the %c, so we need to
          // figure out the correct index to insert the CSS into
          var index = 0;
          var lastC = 0;
          args[0].replace(/%[a-zA-Z%]/g, function(match) {
            if ('%%' === match) return;
            index++;
            if ('%c' === match) {
              // we only are interested in the *last* %c
              // (the user may have provided their own)
              lastC = index;
            }
          });

          args.splice(lastC, 0, c);
        }

        /**
         * Invokes `console.log()` when available.
         * No-op when `console.log` is not a "function".
         *
         * @api public
         */

        function log() {
          // this hackery is required for IE8/9, where
          // the `console.log` function doesn't have 'apply'
          return (
            'object' ===
              (typeof console === 'undefined'
                ? 'undefined'
                : _typeof(console)) &&
            console.log &&
            Function.prototype.apply.call(console.log, console, arguments)
          );
        }

        /**
         * Save `namespaces`.
         *
         * @param {String} namespaces
         * @api private
         */

        function save(namespaces) {
          try {
            if (null == namespaces) {
              exports.storage.removeItem('debug');
            } else {
              exports.storage.debug = namespaces;
            }
          } catch (e) {}
        }

        /**
         * Load `namespaces`.
         *
         * @return {String} returns the previously persisted debug modes
         * @api private
         */

        function load() {
          var r;
          try {
            r = exports.storage.debug;
          } catch (e) {}

          // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
          if (!r && typeof process !== 'undefined' && 'env' in process) {
            r = process.env.DEBUG;
          }

          return r;
        }

        /**
         * Enable namespaces listed in `localStorage.debug` initially.
         */

        exports.enable(load());

        /**
         * Localstorage attempts to return the localstorage.
         *
         * This is necessary because safari throws
         * when a user disables cookies/localstorage
         * and you attempt to access it.
         *
         * @return {LocalStorage}
         * @api private
         */

        function localstorage() {
          try {
            return window.localStorage;
          } catch (e) {}
        }

        /***/
      },
      /* 184 */
      /***/ function(module, exports) {
        /**
         * Helpers.
         */

        var s = 1000;
        var m = s * 60;
        var h = m * 60;
        var d = h * 24;
        var y = d * 365.25;

        /**
         * Parse or format the given `val`.
         *
         * Options:
         *
         *  - `long` verbose formatting [false]
         *
         * @param {String|Number} val
         * @param {Object} [options]
         * @throws {Error} throw an error if val is not a non-empty string or a number
         * @return {String|Number}
         * @api public
         */

        module.exports = function(val, options) {
          options = options || {};
          var type = typeof val;
          if (type === 'string' && val.length > 0) {
            return parse(val);
          } else if (type === 'number' && isNaN(val) === false) {
            return options.long ? fmtLong(val) : fmtShort(val);
          }
          throw new Error(
            'val is not a non-empty string or a valid number. val=' +
              JSON.stringify(val)
          );
        };

        /**
         * Parse the given `str` and return milliseconds.
         *
         * @param {String} str
         * @return {Number}
         * @api private
         */

        function parse(str) {
          str = String(str);
          if (str.length > 100) {
            return;
          }
          var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
            str
          );
          if (!match) {
            return;
          }
          var n = parseFloat(match[1]);
          var type = (match[2] || 'ms').toLowerCase();
          switch (type) {
            case 'years':
            case 'year':
            case 'yrs':
            case 'yr':
            case 'y':
              return n * y;
            case 'days':
            case 'day':
            case 'd':
              return n * d;
            case 'hours':
            case 'hour':
            case 'hrs':
            case 'hr':
            case 'h':
              return n * h;
            case 'minutes':
            case 'minute':
            case 'mins':
            case 'min':
            case 'm':
              return n * m;
            case 'seconds':
            case 'second':
            case 'secs':
            case 'sec':
            case 's':
              return n * s;
            case 'milliseconds':
            case 'millisecond':
            case 'msecs':
            case 'msec':
            case 'ms':
              return n;
            default:
              return undefined;
          }
        }

        /**
         * Short format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function fmtShort(ms) {
          if (ms >= d) {
            return Math.round(ms / d) + 'd';
          }
          if (ms >= h) {
            return Math.round(ms / h) + 'h';
          }
          if (ms >= m) {
            return Math.round(ms / m) + 'm';
          }
          if (ms >= s) {
            return Math.round(ms / s) + 's';
          }
          return ms + 'ms';
        }

        /**
         * Long format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function fmtLong(ms) {
          return (
            plural(ms, d, 'day') ||
            plural(ms, h, 'hour') ||
            plural(ms, m, 'minute') ||
            plural(ms, s, 'second') ||
            ms + ' ms'
          );
        }

        /**
         * Pluralization helper.
         */

        function plural(ms, n, name) {
          if (ms < n) {
            return;
          }
          if (ms < n * 1.5) {
            return Math.floor(ms / n) + ' ' + name;
          }
          return Math.ceil(ms / n) + ' ' + name + 's';
        }

        /***/
      },
      /* 185 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Module dependencies.
         */

        var tty = __webpack_require__(186);
        var util = __webpack_require__(78);

        /**
         * This is the Node.js implementation of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = __webpack_require__(77);
        exports.init = init;
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;

        /**
         * Colors.
         */

        exports.colors = [6, 2, 3, 4, 5, 1];

        try {
          var supportsColor = __webpack_require__(187);
          if (supportsColor && supportsColor.level >= 2) {
            exports.colors = [
              20,
              21,
              26,
              27,
              32,
              33,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              56,
              57,
              62,
              63,
              68,
              69,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              92,
              93,
              98,
              99,
              112,
              113,
              128,
              129,
              134,
              135,
              148,
              149,
              160,
              161,
              162,
              163,
              164,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              178,
              179,
              184,
              185,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              207,
              208,
              209,
              214,
              215,
              220,
              221,
            ];
          }
        } catch (err) {}
        // swallow - we only care if `supports-color` is available; it doesn't have to be.

        /**
         * Build up the default `inspectOpts` object from the environment variables.
         *
         *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
         */

        exports.inspectOpts = Object.keys(process.env)
          .filter(function(key) {
            return /^debug_/i.test(key);
          })
          .reduce(function(obj, key) {
            // camel-case
            var prop = key
              .substring(6)
              .toLowerCase()
              .replace(/_([a-z])/g, function(_, k) {
                return k.toUpperCase();
              });

            // coerce string value into JS value
            var val = process.env[key];
            if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
            else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
            else if (val === 'null') val = null;
            else val = Number(val);

            obj[prop] = val;
            return obj;
          }, {});

        /**
         * Is stdout a TTY? Colored output is enabled when `true`.
         */

        function useColors() {
          return 'colors' in exports.inspectOpts
            ? Boolean(exports.inspectOpts.colors)
            : tty.isatty(process.stderr.fd);
        }

        /**
         * Map %o to `util.inspect()`, all on a single line.
         */

        exports.formatters.o = function(v) {
          this.inspectOpts.colors = this.useColors;
          return util
            .inspect(v, this.inspectOpts)
            .split('\n')
            .map(function(str) {
              return str.trim();
            })
            .join(' ');
        };

        /**
         * Map %o to `util.inspect()`, allowing multiple lines if needed.
         */

        exports.formatters.O = function(v) {
          this.inspectOpts.colors = this.useColors;
          return util.inspect(v, this.inspectOpts);
        };

        /**
         * Adds ANSI color escape codes if enabled.
         *
         * @api public
         */

        function formatArgs(args) {
          var name = this.namespace;
          var useColors = this.useColors;

          if (useColors) {
            var c = this.color;
            var colorCode = '\x1B[3' + (c < 8 ? c : '8;5;' + c);
            var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\x1B[0m';

            args[0] = prefix + args[0].split('\n').join('\n' + prefix);
            args.push(
              colorCode + 'm+' + exports.humanize(this.diff) + '\x1B[0m'
            );
          } else {
            args[0] = getDate() + name + ' ' + args[0];
          }
        }

        function getDate() {
          if (exports.inspectOpts.hideDate) {
            return '';
          } else {
            return new Date().toISOString() + ' ';
          }
        }

        /**
         * Invokes `util.format()` with the specified arguments and writes to stderr.
         */

        function log() {
          return process.stderr.write(
            util.format.apply(util, arguments) + '\n'
          );
        }

        /**
         * Save `namespaces`.
         *
         * @param {String} namespaces
         * @api private
         */

        function save(namespaces) {
          if (null == namespaces) {
            // If you set a process.env field to null or undefined, it gets cast to the
            // string 'null' or 'undefined'. Just delete instead.
            delete process.env.DEBUG;
          } else {
            process.env.DEBUG = namespaces;
          }
        }

        /**
         * Load `namespaces`.
         *
         * @return {String} returns the previously persisted debug modes
         * @api private
         */

        function load() {
          return process.env.DEBUG;
        }

        /**
         * Init logic for `debug` instances.
         *
         * Create a new `inspectOpts` object in case `useColors` is set
         * differently for a particular `debug` instance.
         */

        function init(debug) {
          debug.inspectOpts = {};

          var keys = Object.keys(exports.inspectOpts);
          for (var i = 0; i < keys.length; i++) {
            debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
          }
        }

        /**
         * Enable namespaces listed in `process.env.DEBUG` initially.
         */

        exports.enable(load());

        /***/
      },
      /* 186 */
      /***/ function(module, exports) {
        module.exports = require('tty');

        /***/
      },
      /* 187 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        const os = __webpack_require__(188);
        const hasFlag = __webpack_require__(189);

        const env = process.env;

        let forceColor;
        if (
          hasFlag('no-color') ||
          hasFlag('no-colors') ||
          hasFlag('color=false')
        ) {
          forceColor = false;
        } else if (
          hasFlag('color') ||
          hasFlag('colors') ||
          hasFlag('color=true') ||
          hasFlag('color=always')
        ) {
          forceColor = true;
        }
        if ('FORCE_COLOR' in env) {
          forceColor =
            env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
        }

        function translateLevel(level) {
          if (level === 0) {
            return false;
          }

          return {
            level,
            hasBasic: true,
            has256: level >= 2,
            has16m: level >= 3,
          };
        }

        function supportsColor(stream) {
          if (forceColor === false) {
            return 0;
          }

          if (
            hasFlag('color=16m') ||
            hasFlag('color=full') ||
            hasFlag('color=truecolor')
          ) {
            return 3;
          }

          if (hasFlag('color=256')) {
            return 2;
          }

          if (stream && !stream.isTTY && forceColor !== true) {
            return 0;
          }

          const min = forceColor ? 1 : 0;

          if (process.platform === 'win32') {
            // Node.js 7.5.0 is the first version of Node.js to include a patch to
            // libuv that enables 256 color output on Windows. Anything earlier and it
            // won't work. However, here we target Node.js 8 at minimum as it is an LTS
            // release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
            // release that supports 256 colors. Windows 10 build 14931 is the first release
            // that supports 16m/TrueColor.
            const osRelease = os.release().split('.');
            if (
              Number(process.versions.node.split('.')[0]) >= 8 &&
              Number(osRelease[0]) >= 10 &&
              Number(osRelease[2]) >= 10586
            ) {
              return Number(osRelease[2]) >= 14931 ? 3 : 2;
            }

            return 1;
          }

          if ('CI' in env) {
            if (
              ['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(
                (sign) => sign in env
              ) ||
              env.CI_NAME === 'codeship'
            ) {
              return 1;
            }

            return min;
          }

          if ('TEAMCITY_VERSION' in env) {
            return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)
              ? 1
              : 0;
          }

          if (true) {
            return 3;
          }

          if ('TERM_PROGRAM' in env) {
            const version = parseInt(
              (env.TERM_PROGRAM_VERSION || '').split('.')[0],
              10
            );

            switch (env.TERM_PROGRAM) {
              case 'iTerm.app':
                return version >= 3 ? 3 : 2;
              case 'Apple_Terminal':
                return 2;
              // No default
            }
          }

          if (/-256(color)?$/i.test('xterm-256color')) {
            return 2;
          }

          if (
            /^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(
              'xterm-256color'
            )
          ) {
            return 1;
          }

          if ('COLORTERM' in env) {
            return 1;
          }

          if (false) {
            return min;
          }

          return min;
        }

        function getSupportLevel(stream) {
          const level = supportsColor(stream);
          return translateLevel(level);
        }

        module.exports = {
          supportsColor: getSupportLevel,
          stdout: getSupportLevel(process.stdout),
          stderr: getSupportLevel(process.stderr),
        };

        /***/
      },
      /* 188 */
      /***/ function(module, exports) {
        module.exports = require('os');

        /***/
      },
      /* 189 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = (flag, argv) => {
          argv = argv || process.argv;
          const prefix = flag.startsWith('-')
            ? ''
            : flag.length === 1
              ? '-'
              : '--';
          const pos = argv.indexOf(prefix + flag);
          const terminatorPos = argv.indexOf('--');
          return (
            pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos)
          );
        };

        /***/
      },
      /* 190 */
      /***/ function(module, exports) {
        module.exports = require('zlib');

        /***/
      },
      /* 191 */
      /***/ function(module, exports) {
        module.exports = {
          name: 'axios',
          version: '0.16.2',
          description: 'Promise based HTTP client for the browser and node.js',
          main: 'index.js',
          scripts: {
            test: 'grunt test',
            start: 'node ./sandbox/server.js',
            build: 'NODE_ENV=production grunt build',
            preversion: 'npm test',
            version:
              'npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json',
            postversion: 'git push && git push --tags',
            examples: 'node ./examples/server.js',
            coveralls:
              'cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js',
          },
          repository: {
            type: 'git',
            url: 'https://github.com/mzabriskie/axios.git',
          },
          keywords: ['xhr', 'http', 'ajax', 'promise', 'node'],
          author: 'Matt Zabriskie',
          license: 'MIT',
          bugs: { url: 'https://github.com/mzabriskie/axios/issues' },
          homepage: 'https://github.com/mzabriskie/axios',
          devDependencies: {
            coveralls: '^2.11.9',
            'es6-promise': '^4.0.5',
            grunt: '^1.0.1',
            'grunt-banner': '^0.6.0',
            'grunt-cli': '^1.2.0',
            'grunt-contrib-clean': '^1.0.0',
            'grunt-contrib-nodeunit': '^1.0.0',
            'grunt-contrib-watch': '^1.0.0',
            'grunt-eslint': '^19.0.0',
            'grunt-karma': '^2.0.0',
            'grunt-ts': '^6.0.0-beta.3',
            'grunt-webpack': '^1.0.18',
            'istanbul-instrumenter-loader': '^1.0.0',
            'jasmine-core': '^2.4.1',
            karma: '^1.3.0',
            'karma-chrome-launcher': '^2.0.0',
            'karma-coverage': '^1.0.0',
            'karma-firefox-launcher': '^1.0.0',
            'karma-jasmine': '^1.0.2',
            'karma-jasmine-ajax': '^0.1.13',
            'karma-opera-launcher': '^1.0.0',
            'karma-phantomjs-launcher': '^1.0.0',
            'karma-safari-launcher': '^1.0.0',
            'karma-sauce-launcher': '^1.1.0',
            'karma-sinon': '^1.0.5',
            'karma-sourcemap-loader': '^0.3.7',
            'karma-webpack': '^1.7.0',
            'load-grunt-tasks': '^3.5.2',
            minimist: '^1.2.0',
            'phantomjs-prebuilt': '^2.1.7',
            sinon: '^1.17.4',
            webpack: '^1.13.1',
            'webpack-dev-server': '^1.14.1',
            'url-search-params': '^0.6.1',
            typescript: '^2.0.3',
          },
          browser: { './lib/adapters/http.js': './lib/adapters/xhr.js' },
          typings: './index.d.ts',
          dependencies: { 'follow-redirects': '^1.2.3', 'is-buffer': '^1.1.5' },
        };

        /***/
      },
      /* 192 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        function InterceptorManager() {
          this.handlers = [];
        }

        /**
         * Add a new interceptor to the stack
         *
         * @param {Function} fulfilled The function to handle `then` for a `Promise`
         * @param {Function} rejected The function to handle `reject` for a `Promise`
         *
         * @return {Number} An ID used to remove interceptor later
         */
        InterceptorManager.prototype.use = function use(fulfilled, rejected) {
          this.handlers.push({
            fulfilled: fulfilled,
            rejected: rejected,
          });
          return this.handlers.length - 1;
        };

        /**
         * Remove an interceptor from the stack
         *
         * @param {Number} id The ID that was returned by `use`
         */
        InterceptorManager.prototype.eject = function eject(id) {
          if (this.handlers[id]) {
            this.handlers[id] = null;
          }
        };

        /**
         * Iterate over all the registered interceptors
         *
         * This method is particularly useful for skipping over any
         * interceptors that may have become `null` calling `eject`.
         *
         * @param {Function} fn The function to call for each interceptor
         */
        InterceptorManager.prototype.forEach = function forEach(fn) {
          utils.forEach(this.handlers, function forEachHandler(h) {
            if (h !== null) {
              fn(h);
            }
          });
        };

        module.exports = InterceptorManager;

        /***/
      },
      /* 193 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);
        var transformData = __webpack_require__(194);
        var isCancel = __webpack_require__(79);
        var defaults = __webpack_require__(33);

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        function throwIfCancellationRequested(config) {
          if (config.cancelToken) {
            config.cancelToken.throwIfRequested();
          }
        }

        /**
         * Dispatch a request to the server using the configured adapter.
         *
         * @param {object} config The config that is to be used for the request
         * @returns {Promise} The Promise to be fulfilled
         */
        module.exports = function dispatchRequest(config) {
          throwIfCancellationRequested(config);

          // Ensure headers exist
          config.headers = config.headers || {};

          // Transform request data
          config.data = transformData(
            config.data,
            config.headers,
            config.transformRequest
          );

          // Flatten headers
          config.headers = utils.merge(
            config.headers.common || {},
            config.headers[config.method] || {},
            config.headers || {}
          );

          utils.forEach(
            ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
            function cleanHeaderConfig(method) {
              delete config.headers[method];
            }
          );

          var adapter = config.adapter || defaults.adapter;

          return adapter(config).then(
            function onAdapterResolution(response) {
              throwIfCancellationRequested(config);

              // Transform response data
              response.data = transformData(
                response.data,
                response.headers,
                config.transformResponse
              );

              return response;
            },
            function onAdapterRejection(reason) {
              if (!isCancel(reason)) {
                throwIfCancellationRequested(config);

                // Transform response data
                if (reason && reason.response) {
                  reason.response.data = transformData(
                    reason.response.data,
                    reason.response.headers,
                    config.transformResponse
                  );
                }
              }

              return Promise.reject(reason);
            }
          );
        };

        /***/
      },
      /* 194 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(3);

        /**
         * Transform the data for a request or a response
         *
         * @param {Object|String} data The data to be transformed
         * @param {Array} headers The headers for the request or response
         * @param {Array|Function} fns A single function or Array of functions
         * @returns {*} The resulting transformed data
         */
        module.exports = function transformData(data, headers, fns) {
          /*eslint no-param-reassign:0*/
          utils.forEach(fns, function transform(fn) {
            data = fn(data, headers);
          });

          return data;
        };

        /***/
      },
      /* 195 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Determines whether the specified URL is absolute
         *
         * @param {string} url The URL to test
         * @returns {boolean} True if the specified URL is absolute, otherwise false
         */

        module.exports = function isAbsoluteURL(url) {
          // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
          // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
          // by any combination of letters, digits, plus, period, or hyphen.
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };

        /***/
      },
      /* 196 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Creates a new URL by combining the specified URLs
         *
         * @param {string} baseURL The base URL
         * @param {string} relativeURL The relative URL
         * @returns {string} The combined URL
         */

        module.exports = function combineURLs(baseURL, relativeURL) {
          return relativeURL
            ? baseURL.replace(/\/+$/, '') +
                '/' +
                relativeURL.replace(/^\/+/, '')
            : baseURL;
        };

        /***/
      },
      /* 197 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var Cancel = __webpack_require__(80);

        /**
         * A `CancelToken` is an object that can be used to request cancellation of an operation.
         *
         * @class
         * @param {Function} executor The executor function.
         */
        function CancelToken(executor) {
          if (typeof executor !== 'function') {
            throw new TypeError('executor must be a function.');
          }

          var resolvePromise;
          this.promise = new Promise(function promiseExecutor(resolve) {
            resolvePromise = resolve;
          });

          var token = this;
          executor(function cancel(message) {
            if (token.reason) {
              // Cancellation has already been requested
              return;
            }

            token.reason = new Cancel(message);
            resolvePromise(token.reason);
          });
        }

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        CancelToken.prototype.throwIfRequested = function throwIfRequested() {
          if (this.reason) {
            throw this.reason;
          }
        };

        /**
         * Returns an object that contains a new `CancelToken` and a function that, when called,
         * cancels the `CancelToken`.
         */
        CancelToken.source = function source() {
          var cancel;
          var token = new CancelToken(function executor(c) {
            cancel = c;
          });
          return {
            token: token,
            cancel: cancel,
          };
        };

        module.exports = CancelToken;

        /***/
      },
      /* 198 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Syntactic sugar for invoking a function and expanding an array for arguments.
         *
         * Common use case would be to use `Function.prototype.apply`.
         *
         *  ```js
         *  function f(x, y, z) {}
         *  var args = [1, 2, 3];
         *  f.apply(null, args);
         *  ```
         *
         * With `spread` this example can be re-written.
         *
         *  ```js
         *  spread(function(x, y, z) {})([1, 2, 3]);
         *  ```
         *
         * @param {Function} callback
         * @returns {Function}
         */

        module.exports = function spread(callback) {
          return function wrap(arr) {
            return callback.apply(null, arr);
          };
        };

        /***/
      },
      /* 199 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        Object.defineProperty(__webpack_exports__, '__esModule', {
          value: true,
        });
        /* harmony export (immutable) */ __webpack_exports__[
          'createPool'
        ] = createPool;
        /* harmony export (immutable) */ __webpack_exports__[
          'poolAll'
        ] = poolAll;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(
          11
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__
        );

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        var defaultConfig = {
          concurrency: 5,
          started: true,
          tasks: [],
        };

        function createPool() {
          var _this = this;

          var config =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : defaultConfig;

          var _defaultConfig$config = _extends({}, defaultConfig, config),
            concurrency = _defaultConfig$config.concurrency,
            started = _defaultConfig$config.started,
            tasks = _defaultConfig$config.tasks;

          var onSettles = [];
          var onErrors = [];
          var onSuccesses = [];
          var running = started;
          var active = [];
          var pending = tasks;
          var currentConcurrency = concurrency;

          var tick = function tick() {
            if (!running) {
              return;
            }
            if (!pending.length && !active.length) {
              onSettles.forEach(function(d) {
                return d();
              });
              return;
            }

            var _loop = function _loop() {
              var nextFn = pending.shift();
              active.push(nextFn);
              /* eslint-disable no-loop-func */
              _asyncToGenerator(
                /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                  function _callee() {
                    var success, res, error;
                    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              success = false;
                              res = void 0;
                              error = void 0;
                              _context.prev = 3;
                              _context.next = 6;
                              return nextFn();

                            case 6:
                              res = _context.sent;

                              success = true;
                              _context.next = 13;
                              break;

                            case 10:
                              _context.prev = 10;
                              _context.t0 = _context['catch'](3);

                              error = _context.t0;

                            case 13:
                              active = active.filter(function(d) {
                                return d !== nextFn;
                              });
                              if (success) {
                                nextFn.resolve(res);
                                onSuccesses.forEach(function(d) {
                                  return d(res, nextFn);
                                });
                              } else {
                                nextFn.reject(error);
                                onErrors.forEach(function(d) {
                                  return d(error, nextFn);
                                });
                              }
                              tick();

                            case 16:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee,
                      _this,
                      [[3, 10]]
                    );
                  }
                )
              )();
              /* eslint-enable no-loop-func */
            };

            while (active.length < currentConcurrency && pending.length) {
              _loop();
            }
          };

          var api = {
            add: function add(fn) {
              var _ref2 =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : {},
                priority = _ref2.priority;

              return new Promise(function(resolve, reject) {
                if (priority) {
                  pending.unShift(fn);
                } else {
                  pending.push(fn);
                }
                fn.resolve = resolve;
                fn.reject = reject;
                tick();
              });
            },
            throttle: function throttle(n) {
              currentConcurrency = n;
            },
            onSettled: function onSettled(cb) {
              onSettles.push(cb);
              return function() {
                onSettles = onSettles.filter(function(d) {
                  return d !== cb;
                });
              };
            },
            onError: function onError(cb) {
              onErrors.push(cb);
              return function() {
                onErrors = onErrors.filter(function(d) {
                  return d !== cb;
                });
              };
            },
            onSuccess: function onSuccess(cb) {
              onSuccesses.push(cb);
              return function() {
                onSuccesses = onSuccesses.filter(function(d) {
                  return d !== cb;
                });
              };
            },
            stop: function stop() {
              running = false;
            },
            start: function start() {
              running = true;
              tick();
            },
            clear: function clear() {
              pending = [];
            },
            getActive: function getActive() {
              return active;
            },
            getPending: function getPending() {
              return pending;
            },
            getAll: function getAll() {
              return [].concat(active, pending);
            },
            isRunning: function isRunning() {
              return running;
            },
            isSettled: function isSettled() {
              return !running && !active.length && !pending.length;
            },
          };

          return api;
        }

        function poolAll(tasks, concurrency) {
          var _this2 = this;

          return new Promise(function(resolve, reject) {
            var pool = createPool({
              concurrency: concurrency,
            });
            var results = [];
            pool.onSettled(function() {
              resolve(results);
            });
            pool.onError(function(err) {
              reject(err);
            });
            tasks.forEach(function(task, i) {
              pool.add(
                _asyncToGenerator(
                  /*#__PURE__*/ __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(
                    function _callee2() {
                      var res;
                      return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(
                        function _callee2$(_context2) {
                          while (1) {
                            switch ((_context2.prev = _context2.next)) {
                              case 0:
                                _context2.next = 2;
                                return task();

                              case 2:
                                res = _context2.sent;

                                results[i] = res;
                                return _context2.abrupt('return', res);

                              case 5:
                              case 'end':
                                return _context2.stop();
                            }
                          }
                        },
                        _callee2,
                        _this2
                      );
                    }
                  )
                )
              );
            });
            pool.start();
          });
        }

        /***/
      },
      /* 200 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        exports.withSiteData = withSiteData;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _axios = __webpack_require__(67);

        var _axios2 = _interopRequireDefault(_axios);

        var _DevSpinner = __webpack_require__(35);

        var _DevSpinner2 = _interopRequireDefault(_DevSpinner);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }
        //

        //

        var siteDataPromise = void 0;

        var SiteData = (function(_React$Component) {
          _inherits(SiteData, _React$Component);

          function SiteData() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, SiteData);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                (_ref =
                  SiteData.__proto__ ||
                  Object.getPrototypeOf(SiteData)).call.apply(
                  _ref,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.state = {
                siteData: false,
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          _createClass(SiteData, [
            {
              key: 'componentWillMount',
              value: (function() {
                var _ref2 = _asyncToGenerator(
                  /*#__PURE__*/ _regenerator2.default.mark(function _callee() {
                    var _ref3, siteData;

                    return _regenerator2.default.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              if (true) {
                                _context.next = 8;
                                break;
                              }

                              _context.next = 3;
                              return (function() {
                                if (siteDataPromise) {
                                  return siteDataPromise;
                                }
                                siteDataPromise = _axios2.default.get(
                                  '/__react-static__/siteData'
                                );
                                return siteDataPromise;
                              })();

                            case 3:
                              _ref3 = _context.sent;
                              siteData = _ref3.data;

                              if (!this.unmounting) {
                                _context.next = 7;
                                break;
                              }

                              return _context.abrupt('return');

                            case 7:
                              this.setState({
                                siteData: siteData,
                              });

                            case 8:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee,
                      this
                    );
                  })
                );

                function componentWillMount() {
                  return _ref2.apply(this, arguments);
                }

                return componentWillMount;
              })(),
            },
            {
              key: 'componentWillUnmount',
              value: function componentWillUnmount() {
                this.unmounting = true;
              },
            },
            {
              key: 'render',
              value: function render() {
                var _props = this.props,
                  component = _props.component,
                  render = _props.render,
                  children = _props.children,
                  rest = _objectWithoutProperties(_props, [
                    'component',
                    'render',
                    'children',
                  ]);

                var siteData = void 0;

                // Get siteInfo from window
                if (typeof window !== 'undefined') {
                  if (window.__routeInfo) {
                    siteData = window.__routeInfo.siteData;
                  }
                }

                // Get siteInfo from context (SSR)
                if (
                  !siteData &&
                  this.context.routeInfo &&
                  this.context.routeInfo.siteData
                ) {
                  siteData =
                    this.context.routeInfo && this.context.routeInfo.siteData;
                }

                // Get siteInfo from request
                if (!siteData && this.state.siteData) {
                  siteData = this.state.siteData;
                }

                if (!siteData) {
                  if (false) {
                    return _react2.default.createElement(
                      _DevSpinner2.default,
                      null
                    );
                  }
                  return null;
                }

                var finalProps = _extends({}, rest, siteData);
                if (component) {
                  return _react2.default.createElement(
                    component,
                    finalProps,
                    children
                  );
                }
                if (render) {
                  return render(finalProps);
                }
                return children(finalProps);
              },
            },
          ]);

          return SiteData;
        })(_react2.default.Component);

        SiteData.contextTypes = {
          routeInfo: _propTypes2.default.object,
        };
        exports.default = SiteData;
        function withSiteData(Comp) {
          return function ConnectedSiteData(props) {
            return _react2.default.createElement(
              SiteData,
              _extends({ component: Comp }, props)
            );
          };
        }

        /***/
      },
      /* 201 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        exports.withLoading = withLoading;

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _methods = __webpack_require__(14);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }
        //

        //

        var Loading = (function(_React$Component) {
          _inherits(Loading, _React$Component);

          function Loading() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Loading);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                (_ref =
                  Loading.__proto__ ||
                  Object.getPrototypeOf(Loading)).call.apply(
                  _ref,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.state = {
                loading: _methods.loading,
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          _createClass(Loading, [
            {
              key: 'componentWillMount',
              value: function componentWillMount() {
                var _this2 = this;

                this.unsubscribe = (0, _methods.onLoading)(function(loading) {
                  return _this2.setState({
                    loading: loading,
                  });
                });
              },
            },
            {
              key: 'render',
              value: function render() {
                var _props = this.props,
                  component = _props.component,
                  render = _props.render,
                  children = _props.children,
                  rest = _objectWithoutProperties(_props, [
                    'component',
                    'render',
                    'children',
                  ]);

                var finalProps = _extends({}, rest, {
                  loading: this.state.loading,
                });
                if (component) {
                  return _react2.default.createElement(
                    component,
                    finalProps,
                    children
                  );
                }
                if (render) {
                  return render(finalProps);
                }
                return children(finalProps);
              },
            },
          ]);

          return Loading;
        })(_react2.default.Component);

        exports.default = Loading;
        function withLoading(Comp) {
          return function ConnectedLoading(props) {
            return _react2.default.createElement(
              Loading,
              _extends({ component: Comp }, props)
            );
          };
        }

        /***/
      },
      /* 202 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.NavLink = exports.Link = undefined;

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactRouterDom = __webpack_require__(10);

        var _shared = __webpack_require__(9);

        var _PrefetchWhenSeen = __webpack_require__(81);

        var _PrefetchWhenSeen2 = _interopRequireDefault(_PrefetchWhenSeen);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }
        //

        //

        // Detects internal link url schemas
        function isRoutingUrl(to) {
          if (typeof to === 'undefined') return false;
          return (
            !to.match(/^([A-z]?)+:/) && // starts with external protocol
            !to.match(/^#/) && // starts with hash fragment
            !to.match(/^[a-z]{1,10}:\/\//) // starts with double slash protocol
          );
        }

        var reactRouterProps = [
          'activeClassName',
          'activeStyle',
          'exact',
          'isActive',
          'location',
          'strict',
          'to',
          'replace',
        ];

        function SmartLink(_ref) {
          var _ref$prefetch = _ref.prefetch,
            prefetch = _ref$prefetch === undefined ? true : _ref$prefetch,
            _ref$scrollToTop = _ref.scrollToTop,
            scrollToTop =
              _ref$scrollToTop === undefined ? true : _ref$scrollToTop,
            _onClick = _ref.onClick,
            rest = _objectWithoutProperties(_ref, [
              'prefetch',
              'scrollToTop',
              'onClick',
            ]);

          var to = rest.to;

          var resolvedTo = to;
          if ((0, _shared.isObject)(to)) {
            if (!to.pathname && to.path) {
              console.warn(
                'You are using the `path` key in a <Link to={...} /> when you should be using the `pathname` key. This will be deprecated in future versions!'
              );
              to.pathname = to.path;
              delete to.path;
              resolvedTo = to.pathname;
            } else if (to.pathname) {
              resolvedTo = to.pathname;
            }
          }
          // Router Link
          if (isRoutingUrl(resolvedTo)) {
            var finalRest = _extends({}, rest, {
              onClick: function onClick(e) {
                if (typeof document !== 'undefined' && !scrollToTop) {
                  window.__noScrollTo = true;
                }
                if (_onClick) {
                  _onClick(e);
                }
              },
            });

            if (prefetch) {
              return _react2.default.createElement(_PrefetchWhenSeen2.default, {
                path: resolvedTo,
                type: prefetch,
                render: function render(_ref2) {
                  var handleRef = _ref2.handleRef;
                  return _react2.default.createElement(
                    _reactRouterDom.NavLink,
                    _extends({}, finalRest, { innerRef: handleRef })
                  );
                },
              });
            }
            return _react2.default.createElement(
              _reactRouterDom.NavLink,
              finalRest
            );
          }

          // Browser Link

          var children = rest.children,
            aRest = _objectWithoutProperties(rest, ['children']);

          aRest.href = aRest.to;
          delete aRest.to;

          reactRouterProps
            .filter(function(prop) {
              return aRest[prop];
            })
            .forEach(function(prop) {
              console.warn(
                'Warning: ' +
                  prop +
                  ' makes no sense on a <Link to="' +
                  aRest.href +
                  '">.'
              );
            });
          reactRouterProps.forEach(function(prop) {
            return delete aRest[prop];
          });

          return _react2.default.createElement('a', aRest, children);
        }

        var Link = (exports.Link = SmartLink);
        var NavLink = (exports.NavLink = SmartLink);

        /***/
      },
      /* 203 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _shared = __webpack_require__(9);

        var _methods = __webpack_require__(14);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var Prefetch = (function(_React$Component) {
          _inherits(Prefetch, _React$Component);

          function Prefetch() {
            _classCallCheck(this, Prefetch);

            return _possibleConstructorReturn(
              this,
              (Prefetch.__proto__ || Object.getPrototypeOf(Prefetch)).apply(
                this,
                arguments
              )
            );
          }

          _createClass(Prefetch, [
            {
              key: 'componentDidMount',
              value: (function() {
                var _ref = _asyncToGenerator(
                  /*#__PURE__*/ _regenerator2.default.mark(function _callee() {
                    var _props, path, onLoad, type, cleanedPath, data;

                    return _regenerator2.default.wrap(
                      function _callee$(_context) {
                        while (1) {
                          switch ((_context.prev = _context.next)) {
                            case 0:
                              (_props = this.props),
                                (path = _props.path),
                                (onLoad = _props.onLoad),
                                (type = _props.type);
                              cleanedPath = (0, _shared.cleanPath)(path);
                              _context.next = 4;
                              return (0, _methods.prefetch)(cleanedPath, {
                                type: type,
                              });

                            case 4:
                              data = _context.sent;

                              onLoad(data, cleanedPath);

                            case 6:
                            case 'end':
                              return _context.stop();
                          }
                        }
                      },
                      _callee,
                      this
                    );
                  })
                );

                function componentDidMount() {
                  return _ref.apply(this, arguments);
                }

                return componentDidMount;
              })(),
            },
            {
              key: 'render',
              value: function render() {
                return (0, _shared.unwrapArray)(this.props.children);
              },
            },
          ]);

          return Prefetch;
        })(_react2.default.Component);

        Prefetch.defaultProps = {
          children: null,
          path: null,
          type: null,
          onLoad: function onLoad() {},
        };
        exports.default = Prefetch;

        /***/
      },
      /* 204 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _regenerator = __webpack_require__(11);

        var _regenerator2 = _interopRequireDefault(_regenerator);

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _createBrowserHistory = __webpack_require__(205);

        var _createBrowserHistory2 = _interopRequireDefault(
          _createBrowserHistory
        );

        var _createMemoryHistory = __webpack_require__(206);

        var _createMemoryHistory2 = _interopRequireDefault(
          _createMemoryHistory
        );

        var _createHashHistory = __webpack_require__(207);

        var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

        var _reactRouterDom = __webpack_require__(10);

        var _shared = __webpack_require__(9);

        var _methods = __webpack_require__(14);

        var _RouterScroller = __webpack_require__(208);

        var _RouterScroller2 = _interopRequireDefault(_RouterScroller);

        var _DevSpinner = __webpack_require__(35);

        var _DevSpinner2 = _interopRequireDefault(_DevSpinner);

        var _ErrorWrapper = __webpack_require__(210);

        var _ErrorWrapper2 = _interopRequireDefault(_ErrorWrapper);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _asyncToGenerator(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }
                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }
              return step('next');
            });
          };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }
        //

        var Router = (function(_React$Component) {
          _inherits(Router, _React$Component);

          function Router(props, context) {
            _classCallCheck(this, Router);

            // In SRR and production, synchronously register the templateID for the
            // initial path
            var _this = _possibleConstructorReturn(
              this,
              (Router.__proto__ || Object.getPrototypeOf(Router)).call(this)
            );

            _initialiseProps.call(_this);

            var routeInfo = context.routeInfo;

            var path = (0, _shared.cleanPath)(context.staticURL);

            if (typeof document !== 'undefined') {
              routeInfo = window.__routeInfo;
              var href = window.location.href;

              path = (0, _shared.cleanPath)(href);
            }

            if (routeInfo) {
              (0, _methods.registerTemplateIDForPath)(
                path,
                routeInfo.templateID
              );
            }
            return _this;
          }

          _createClass(Router, [
            {
              key: 'componentDidMount',
              value: function componentDidMount() {
                this.bootstrapRouteInfo();
              },
            },
            {
              key: 'render',
              value: function render() {
                var _props = this.props,
                  history = _props.history,
                  type = _props.type,
                  children = _props.children,
                  autoScrollToTop = _props.autoScrollToTop,
                  autoScrollToHash = _props.autoScrollToHash,
                  scrollToTopDuration = _props.scrollToTopDuration,
                  scrollToHashDuration = _props.scrollToHashDuration,
                  scrollToHashOffset = _props.scrollToHashOffset,
                  showErrorsInProduction = _props.showErrorsInProduction,
                  rest = _objectWithoutProperties(_props, [
                    'history',
                    'type',
                    'children',
                    'autoScrollToTop',
                    'autoScrollToHash',
                    'scrollToTopDuration',
                    'scrollToHashDuration',
                    'scrollToHashOffset',
                    'showErrorsInProduction',
                  ]);

                var staticURL = this.context.staticURL;

                var context = staticURL ? {} : undefined;
                var disableRoutePrefixing = 'false' === 'true';

                var ready = this.state.ready;

                var ResolvedRouter = void 0;
                var resolvedHistory = void 0;

                // If statically rendering, use the static router
                if (staticURL) {
                  ResolvedRouter = _reactRouterDom.StaticRouter;
                  resolvedHistory = undefined;
                } else {
                  ResolvedRouter = _reactRouterDom.Router;
                  resolvedHistory =
                    history || global.__reactStaticRouterHistory;
                  if (!resolvedHistory) {
                    if (type === 'memory') {
                      resolvedHistory = (0, _createMemoryHistory2.default)();
                    } else if (type === 'hash') {
                      resolvedHistory = (0, _createHashHistory2.default)();
                    } else {
                      var options = disableRoutePrefixing
                        ? {}
                        : { basename: '' };
                      resolvedHistory = (0, _createBrowserHistory2.default)(
                        options
                      );
                    }
                  }
                  global.__reactStaticRouterHistory = resolvedHistory;
                  this.patchHistoryNavigation(resolvedHistory);
                }

                if (false) {
                  return _react2.default.createElement(
                    _DevSpinner2.default,
                    null
                  );
                }

                return _react2.default.createElement(
                  _ErrorWrapper2.default,
                  { showErrorsInProduction: showErrorsInProduction },
                  _react2.default.createElement(
                    ResolvedRouter,
                    _extends(
                      {
                        history: resolvedHistory,
                        location: staticURL,
                        context: context,
                        basename: disableRoutePrefixing ? '' : '',
                      },
                      rest
                    ),
                    _react2.default.createElement(
                      _RouterScroller2.default,
                      {
                        autoScrollToTop: autoScrollToTop,
                        autoScrollToHash: autoScrollToHash,
                        scrollToTopDuration: scrollToTopDuration,
                        scrollToHashDuration: scrollToHashDuration,
                        scrollToHashOffset: scrollToHashOffset,
                      },
                      children
                    )
                  )
                );
              },
            },
          ]);

          return Router;
        })(_react2.default.Component);

        Router.defaultProps = {
          type: 'browser',
          autoScrollToTop: true,
          autoScrollToHash: true,
          scrollToTopDuration: 0,
          scrollToHashDuration: 800,
          scrollToHashOffset: 0,
          showErrorsInProduction: false,
        };
        Router.contextTypes = {
          staticURL: _propTypes2.default.string,
          routeInfo: _propTypes2.default.object,
        };

        var _initialiseProps = function _initialiseProps() {
          var _this2 = this;

          this.state = {
            ready: false,
          };

          this.bootstrapRouteInfo = function() {
            return _asyncToGenerator(
              /*#__PURE__*/ _regenerator2.default.mark(function _callee() {
                var href, path, allProps, routeInfo;
                return _regenerator2.default.wrap(
                  function _callee$(_context) {
                    while (1) {
                      switch ((_context.prev = _context.next)) {
                        case 0:
                          if (!(typeof window !== 'undefined')) {
                            _context.next = 13;
                            break;
                          }

                          // Get the entry path from location
                          href = decodeURIComponent(window.location.href);
                          path = (0, _shared.cleanPath)(href);

                          // Injest and cache the embedded routeInfo in the page if possible

                          if (
                            window.__routeInfo &&
                            window.__routeInfo.path === path
                          ) {
                            allProps = window.__routeInfo.allProps;

                            Object.keys(
                              window.__routeInfo.sharedPropsHashes
                            ).forEach(function(propKey) {
                              _methods.propsByHash[
                                window.__routeInfo.sharedPropsHashes[propKey]
                              ] =
                                allProps[propKey];
                            });
                          }

                          // In dev mode, request the templateID and ready the router

                          if (true) {
                            _context.next = 13;
                            break;
                          }

                          _context.prev = 5;
                          _context.next = 8;
                          return (0, _methods.getRouteInfo)(path, {
                            priority: true,
                          });

                        case 8:
                          routeInfo = _context.sent;

                          if (routeInfo) {
                            (0, _methods.registerTemplateIDForPath)(
                              path,
                              routeInfo.templateID
                            );
                          }

                        case 10:
                          _context.prev = 10;

                          _this2.setState({ ready: true });
                          return _context.finish(10);

                        case 13:
                        case 'end':
                          return _context.stop();
                      }
                    }
                  },
                  _callee,
                  _this2,
                  [[5, , 10, 13]]
                );
              })
            )();
          };

          this.patchHistoryNavigation = function(resolvedHistory) {
            // Only patch navigation once
            if (_this2.patchedNavigation) {
              return;
            }
            // Here, we patch the push and replace methods on history so we can
            // intercept them.
            ['push', 'replace'].forEach(function(method) {
              // Hold on to the original method, we will need it.
              var originalMethod = resolvedHistory[method];
              // Replace it with our own patched version
              resolvedHistory[method] = (function() {
                var _ref2 = _asyncToGenerator(
                  /*#__PURE__*/ _regenerator2.default.mark(function _callee2() {
                    for (
                      var _len = arguments.length, args = Array(_len), _key = 0;
                      _key < _len;
                      _key++
                    ) {
                      args[_key] = arguments[_key];
                    }

                    var path, shouldPrefetch;
                    return _regenerator2.default.wrap(
                      function _callee2$(_context2) {
                        while (1) {
                          switch ((_context2.prev = _context2.next)) {
                            case 0:
                              // Clean the path first
                              path = (0, _shared.cleanPath)(
                                typeof args[0] === 'string'
                                  ? args[0]
                                  : args[0].path
                              );
                              // Notify a soft loading state

                              (0, _methods.setLoading)(1);
                              // Determine as quickly as possible if we need to fetch data for this route
                              _context2.next = 4;
                              return (0, _methods.needsPrefetch)(path, {
                                priority: true,
                              });

                            case 4:
                              shouldPrefetch = _context2.sent;

                              if (!shouldPrefetch) {
                                _context2.next = 9;
                                break;
                              }

                              // Notify with a hard loading state
                              (0, _methods.setLoading)(2);
                              // Prefetch any data or templates needed with a high priority
                              _context2.next = 9;
                              return (0, _methods.prefetch)(path, {
                                priority: true,
                              });

                            case 9:
                              // Notify we're done loading
                              (0, _methods.setLoading)(0);

                              // Apply the original method and arguments as if nothing happened
                              originalMethod.apply(resolvedHistory, args);

                            case 11:
                            case 'end':
                              return _context2.stop();
                          }
                        }
                      },
                      _callee2,
                      _this2
                    );
                  })
                );

                return function() {
                  return _ref2.apply(this, arguments);
                };
              })();
            });

            // Only patch navigation once :)
            _this2.patchedNavigation = true;
          };
        };

        exports.default = Router;

        /***/
      },
      /* 205 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _warning = __webpack_require__(8);

        var _warning2 = _interopRequireDefault(_warning);

        var _invariant = __webpack_require__(2);

        var _invariant2 = _interopRequireDefault(_invariant);

        var _LocationUtils = __webpack_require__(36);

        var _PathUtils = __webpack_require__(21);

        var _createTransitionManager = __webpack_require__(37);

        var _createTransitionManager2 = _interopRequireDefault(
          _createTransitionManager
        );

        var _DOMUtils = __webpack_require__(82);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var PopStateEvent = 'popstate';
        var HashChangeEvent = 'hashchange';

        var getHistoryState = function getHistoryState() {
          try {
            return window.history.state || {};
          } catch (e) {
            // IE 11 sometimes throws when accessing window.history.state
            // See https://github.com/ReactTraining/history/pull/289
            return {};
          }
        };

        /**
         * Creates a history object that uses the HTML5 history API including
         * pushState, replaceState, and the popstate event.
         */
        var createBrowserHistory = function createBrowserHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};

          (0, _invariant2.default)(
            _DOMUtils.canUseDOM,
            'Browser history needs a DOM'
          );

          var globalHistory = window.history;
          var canUseHistory = (0, _DOMUtils.supportsHistory)();
          var needsHashChangeListener = !(0,
          _DOMUtils.supportsPopStateOnHashChange)();

          var _props$forceRefresh = props.forceRefresh,
            forceRefresh =
              _props$forceRefresh === undefined ? false : _props$forceRefresh,
            _props$getUserConfirm = props.getUserConfirmation,
            getUserConfirmation =
              _props$getUserConfirm === undefined
                ? _DOMUtils.getConfirmation
                : _props$getUserConfirm,
            _props$keyLength = props.keyLength,
            keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

          var basename = props.basename
            ? (0, _PathUtils.stripTrailingSlash)(
                (0, _PathUtils.addLeadingSlash)(props.basename)
              )
            : '';

          var getDOMLocation = function getDOMLocation(historyState) {
            var _ref = historyState || {},
              key = _ref.key,
              state = _ref.state;

            var _window$location = window.location,
              pathname = _window$location.pathname,
              search = _window$location.search,
              hash = _window$location.hash;

            var path = pathname + search + hash;

            (0, _warning2.default)(
              !basename || (0, _PathUtils.hasBasename)(path, basename),
              'You are attempting to use a basename on a page whose URL path does not begin ' +
                'with the basename. Expected path "' +
                path +
                '" to begin with "' +
                basename +
                '".'
            );

            if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

            return (0, _LocationUtils.createLocation)(path, state, key);
          };

          var createKey = function createKey() {
            return Math.random()
              .toString(36)
              .substr(2, keyLength);
          };

          var transitionManager = (0, _createTransitionManager2.default)();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = globalHistory.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var handlePopState = function handlePopState(event) {
            // Ignore extraneous popstate events in WebKit.
            if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;

            handlePop(getDOMLocation(event.state));
          };

          var handleHashChange = function handleHashChange() {
            handlePop(getDOMLocation(getHistoryState()));
          };

          var forceNextPop = false;

          var handlePop = function handlePop(location) {
            if (forceNextPop) {
              forceNextPop = false;
              setState();
            } else {
              var action = 'POP';

              transitionManager.confirmTransitionTo(
                location,
                action,
                getUserConfirmation,
                function(ok) {
                  if (ok) {
                    setState({ action: action, location: location });
                  } else {
                    revertPop(location);
                  }
                }
              );
            }
          };

          var revertPop = function revertPop(fromLocation) {
            var toLocation = history.location;

            // TODO: We could probably make this more reliable by
            // keeping a list of keys we've seen in sessionStorage.
            // Instead, we just default to 0 for keys we don't know.

            var toIndex = allKeys.indexOf(toLocation.key);

            if (toIndex === -1) toIndex = 0;

            var fromIndex = allKeys.indexOf(fromLocation.key);

            if (fromIndex === -1) fromIndex = 0;

            var delta = toIndex - fromIndex;

            if (delta) {
              forceNextPop = true;
              go(delta);
            }
          };

          var initialLocation = getDOMLocation(getHistoryState());
          var allKeys = [initialLocation.key];

          // Public interface

          var createHref = function createHref(location) {
            return basename + (0, _PathUtils.createPath)(location);
          };

          var push = function push(path, state) {
            (0, _warning2.default)(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to push when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'PUSH';
            var location = (0, _LocationUtils.createLocation)(
              path,
              state,
              createKey(),
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var href = createHref(location);
                var key = location.key,
                  state = location.state;

                if (canUseHistory) {
                  globalHistory.pushState(
                    { key: key, state: state },
                    null,
                    href
                  );

                  if (forceRefresh) {
                    window.location.href = href;
                  } else {
                    var prevIndex = allKeys.indexOf(history.location.key);
                    var nextKeys = allKeys.slice(
                      0,
                      prevIndex === -1 ? 0 : prevIndex + 1
                    );

                    nextKeys.push(location.key);
                    allKeys = nextKeys;

                    setState({ action: action, location: location });
                  }
                } else {
                  (0, _warning2.default)(
                    state === undefined,
                    'Browser history cannot push state in browsers that do not support HTML5 history'
                  );

                  window.location.href = href;
                }
              }
            );
          };

          var replace = function replace(path, state) {
            (0, _warning2.default)(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to replace when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'REPLACE';
            var location = (0, _LocationUtils.createLocation)(
              path,
              state,
              createKey(),
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var href = createHref(location);
                var key = location.key,
                  state = location.state;

                if (canUseHistory) {
                  globalHistory.replaceState(
                    { key: key, state: state },
                    null,
                    href
                  );

                  if (forceRefresh) {
                    window.location.replace(href);
                  } else {
                    var prevIndex = allKeys.indexOf(history.location.key);

                    if (prevIndex !== -1) allKeys[prevIndex] = location.key;

                    setState({ action: action, location: location });
                  }
                } else {
                  (0, _warning2.default)(
                    state === undefined,
                    'Browser history cannot replace state in browsers that do not support HTML5 history'
                  );

                  window.location.replace(href);
                }
              }
            );
          };

          var go = function go(n) {
            globalHistory.go(n);
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var listenerCount = 0;

          var checkDOMListeners = function checkDOMListeners(delta) {
            listenerCount += delta;

            if (listenerCount === 1) {
              (0, _DOMUtils.addEventListener)(
                window,
                PopStateEvent,
                handlePopState
              );

              if (needsHashChangeListener)
                (0, _DOMUtils.addEventListener)(
                  window,
                  HashChangeEvent,
                  handleHashChange
                );
            } else if (listenerCount === 0) {
              (0, _DOMUtils.removeEventListener)(
                window,
                PopStateEvent,
                handlePopState
              );

              if (needsHashChangeListener)
                (0, _DOMUtils.removeEventListener)(
                  window,
                  HashChangeEvent,
                  handleHashChange
                );
            }
          };

          var isBlocked = false;

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            var unblock = transitionManager.setPrompt(prompt);

            if (!isBlocked) {
              checkDOMListeners(1);
              isBlocked = true;
            }

            return function() {
              if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(-1);
              }

              return unblock();
            };
          };

          var listen = function listen(listener) {
            var unlisten = transitionManager.appendListener(listener);
            checkDOMListeners(1);

            return function() {
              checkDOMListeners(-1);
              unlisten();
            };
          };

          var history = {
            length: globalHistory.length,
            action: 'POP',
            location: initialLocation,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            block: block,
            listen: listen,
          };

          return history;
        };

        exports.default = createBrowserHistory;

        /***/
      },
      /* 206 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _warning = __webpack_require__(8);

        var _warning2 = _interopRequireDefault(_warning);

        var _PathUtils = __webpack_require__(21);

        var _LocationUtils = __webpack_require__(36);

        var _createTransitionManager = __webpack_require__(37);

        var _createTransitionManager2 = _interopRequireDefault(
          _createTransitionManager
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var clamp = function clamp(n, lowerBound, upperBound) {
          return Math.min(Math.max(n, lowerBound), upperBound);
        };

        /**
         * Creates a history object that stores locations in memory.
         */
        var createMemoryHistory = function createMemoryHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          var getUserConfirmation = props.getUserConfirmation,
            _props$initialEntries = props.initialEntries,
            initialEntries =
              _props$initialEntries === undefined
                ? ['/']
                : _props$initialEntries,
            _props$initialIndex = props.initialIndex,
            initialIndex =
              _props$initialIndex === undefined ? 0 : _props$initialIndex,
            _props$keyLength = props.keyLength,
            keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

          var transitionManager = (0, _createTransitionManager2.default)();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = history.entries.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var createKey = function createKey() {
            return Math.random()
              .toString(36)
              .substr(2, keyLength);
          };

          var index = clamp(initialIndex, 0, initialEntries.length - 1);
          var entries = initialEntries.map(function(entry) {
            return typeof entry === 'string'
              ? (0, _LocationUtils.createLocation)(
                  entry,
                  undefined,
                  createKey()
                )
              : (0, _LocationUtils.createLocation)(
                  entry,
                  undefined,
                  entry.key || createKey()
                );
          });

          // Public interface

          var createHref = _PathUtils.createPath;

          var push = function push(path, state) {
            (0, _warning2.default)(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to push when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'PUSH';
            var location = (0, _LocationUtils.createLocation)(
              path,
              state,
              createKey(),
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var prevIndex = history.index;
                var nextIndex = prevIndex + 1;

                var nextEntries = history.entries.slice(0);
                if (nextEntries.length > nextIndex) {
                  nextEntries.splice(
                    nextIndex,
                    nextEntries.length - nextIndex,
                    location
                  );
                } else {
                  nextEntries.push(location);
                }

                setState({
                  action: action,
                  location: location,
                  index: nextIndex,
                  entries: nextEntries,
                });
              }
            );
          };

          var replace = function replace(path, state) {
            (0, _warning2.default)(
              !(
                (typeof path === 'undefined' ? 'undefined' : _typeof(path)) ===
                  'object' &&
                path.state !== undefined &&
                state !== undefined
              ),
              'You should avoid providing a 2nd state argument to replace when the 1st ' +
                'argument is a location-like object that already has state; it is ignored'
            );

            var action = 'REPLACE';
            var location = (0, _LocationUtils.createLocation)(
              path,
              state,
              createKey(),
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                history.entries[history.index] = location;

                setState({ action: action, location: location });
              }
            );
          };

          var go = function go(n) {
            var nextIndex = clamp(
              history.index + n,
              0,
              history.entries.length - 1
            );

            var action = 'POP';
            var location = history.entries[nextIndex];

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (ok) {
                  setState({
                    action: action,
                    location: location,
                    index: nextIndex,
                  });
                } else {
                  // Mimic the behavior of DOM histories by
                  // causing a render after a cancelled POP.
                  setState();
                }
              }
            );
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var canGo = function canGo(n) {
            var nextIndex = history.index + n;
            return nextIndex >= 0 && nextIndex < history.entries.length;
          };

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;
            return transitionManager.setPrompt(prompt);
          };

          var listen = function listen(listener) {
            return transitionManager.appendListener(listener);
          };

          var history = {
            length: entries.length,
            action: 'POP',
            location: entries[index],
            index: index,
            entries: entries,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            canGo: canGo,
            block: block,
            listen: listen,
          };

          return history;
        };

        exports.default = createMemoryHistory;

        /***/
      },
      /* 207 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        exports.__esModule = true;

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _warning = __webpack_require__(8);

        var _warning2 = _interopRequireDefault(_warning);

        var _invariant = __webpack_require__(2);

        var _invariant2 = _interopRequireDefault(_invariant);

        var _LocationUtils = __webpack_require__(36);

        var _PathUtils = __webpack_require__(21);

        var _createTransitionManager = __webpack_require__(37);

        var _createTransitionManager2 = _interopRequireDefault(
          _createTransitionManager
        );

        var _DOMUtils = __webpack_require__(82);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var HashChangeEvent = 'hashchange';

        var HashPathCoders = {
          hashbang: {
            encodePath: function encodePath(path) {
              return path.charAt(0) === '!'
                ? path
                : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
            },
            decodePath: function decodePath(path) {
              return path.charAt(0) === '!' ? path.substr(1) : path;
            },
          },
          noslash: {
            encodePath: _PathUtils.stripLeadingSlash,
            decodePath: _PathUtils.addLeadingSlash,
          },
          slash: {
            encodePath: _PathUtils.addLeadingSlash,
            decodePath: _PathUtils.addLeadingSlash,
          },
        };

        var getHashPath = function getHashPath() {
          // We can't use window.location.hash here because it's not
          // consistent across browsers - Firefox will pre-decode it!
          var href = window.location.href;
          var hashIndex = href.indexOf('#');
          return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
        };

        var pushHashPath = function pushHashPath(path) {
          return (window.location.hash = path);
        };

        var replaceHashPath = function replaceHashPath(path) {
          var hashIndex = window.location.href.indexOf('#');

          window.location.replace(
            window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) +
              '#' +
              path
          );
        };

        var createHashHistory = function createHashHistory() {
          var props =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};

          (0, _invariant2.default)(
            _DOMUtils.canUseDOM,
            'Hash history needs a DOM'
          );

          var globalHistory = window.history;
          var canGoWithoutReload = (0,
          _DOMUtils.supportsGoWithoutReloadUsingHash)();

          var _props$getUserConfirm = props.getUserConfirmation,
            getUserConfirmation =
              _props$getUserConfirm === undefined
                ? _DOMUtils.getConfirmation
                : _props$getUserConfirm,
            _props$hashType = props.hashType,
            hashType =
              _props$hashType === undefined ? 'slash' : _props$hashType;

          var basename = props.basename
            ? (0, _PathUtils.stripTrailingSlash)(
                (0, _PathUtils.addLeadingSlash)(props.basename)
              )
            : '';

          var _HashPathCoders$hashT = HashPathCoders[hashType],
            encodePath = _HashPathCoders$hashT.encodePath,
            decodePath = _HashPathCoders$hashT.decodePath;

          var getDOMLocation = function getDOMLocation() {
            var path = decodePath(getHashPath());

            (0, _warning2.default)(
              !basename || (0, _PathUtils.hasBasename)(path, basename),
              'You are attempting to use a basename on a page whose URL path does not begin ' +
                'with the basename. Expected path "' +
                path +
                '" to begin with "' +
                basename +
                '".'
            );

            if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

            return (0, _LocationUtils.createLocation)(path);
          };

          var transitionManager = (0, _createTransitionManager2.default)();

          var setState = function setState(nextState) {
            _extends(history, nextState);

            history.length = globalHistory.length;

            transitionManager.notifyListeners(history.location, history.action);
          };

          var forceNextPop = false;
          var ignorePath = null;

          var handleHashChange = function handleHashChange() {
            var path = getHashPath();
            var encodedPath = encodePath(path);

            if (path !== encodedPath) {
              // Ensure we always have a properly-encoded hash.
              replaceHashPath(encodedPath);
            } else {
              var location = getDOMLocation();
              var prevLocation = history.location;

              if (
                !forceNextPop &&
                (0, _LocationUtils.locationsAreEqual)(prevLocation, location)
              )
                return; // A hashchange doesn't always == location change.

              if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.

              ignorePath = null;

              handlePop(location);
            }
          };

          var handlePop = function handlePop(location) {
            if (forceNextPop) {
              forceNextPop = false;
              setState();
            } else {
              var action = 'POP';

              transitionManager.confirmTransitionTo(
                location,
                action,
                getUserConfirmation,
                function(ok) {
                  if (ok) {
                    setState({ action: action, location: location });
                  } else {
                    revertPop(location);
                  }
                }
              );
            }
          };

          var revertPop = function revertPop(fromLocation) {
            var toLocation = history.location;

            // TODO: We could probably make this more reliable by
            // keeping a list of paths we've seen in sessionStorage.
            // Instead, we just default to 0 for paths we don't know.

            var toIndex = allPaths.lastIndexOf(
              (0, _PathUtils.createPath)(toLocation)
            );

            if (toIndex === -1) toIndex = 0;

            var fromIndex = allPaths.lastIndexOf(
              (0, _PathUtils.createPath)(fromLocation)
            );

            if (fromIndex === -1) fromIndex = 0;

            var delta = toIndex - fromIndex;

            if (delta) {
              forceNextPop = true;
              go(delta);
            }
          };

          // Ensure the hash is encoded properly before doing anything else.
          var path = getHashPath();
          var encodedPath = encodePath(path);

          if (path !== encodedPath) replaceHashPath(encodedPath);

          var initialLocation = getDOMLocation();
          var allPaths = [(0, _PathUtils.createPath)(initialLocation)];

          // Public interface

          var createHref = function createHref(location) {
            return (
              '#' + encodePath(basename + (0, _PathUtils.createPath)(location))
            );
          };

          var push = function push(path, state) {
            (0, _warning2.default)(
              state === undefined,
              'Hash history cannot push state; it is ignored'
            );

            var action = 'PUSH';
            var location = (0, _LocationUtils.createLocation)(
              path,
              undefined,
              undefined,
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var path = (0, _PathUtils.createPath)(location);
                var encodedPath = encodePath(basename + path);
                var hashChanged = getHashPath() !== encodedPath;

                if (hashChanged) {
                  // We cannot tell if a hashchange was caused by a PUSH, so we'd
                  // rather setState here and ignore the hashchange. The caveat here
                  // is that other hash histories in the page will consider it a POP.
                  ignorePath = path;
                  pushHashPath(encodedPath);

                  var prevIndex = allPaths.lastIndexOf(
                    (0, _PathUtils.createPath)(history.location)
                  );
                  var nextPaths = allPaths.slice(
                    0,
                    prevIndex === -1 ? 0 : prevIndex + 1
                  );

                  nextPaths.push(path);
                  allPaths = nextPaths;

                  setState({ action: action, location: location });
                } else {
                  (0, _warning2.default)(
                    false,
                    'Hash history cannot PUSH the same path; a new entry will not be added to the history stack'
                  );

                  setState();
                }
              }
            );
          };

          var replace = function replace(path, state) {
            (0, _warning2.default)(
              state === undefined,
              'Hash history cannot replace state; it is ignored'
            );

            var action = 'REPLACE';
            var location = (0, _LocationUtils.createLocation)(
              path,
              undefined,
              undefined,
              history.location
            );

            transitionManager.confirmTransitionTo(
              location,
              action,
              getUserConfirmation,
              function(ok) {
                if (!ok) return;

                var path = (0, _PathUtils.createPath)(location);
                var encodedPath = encodePath(basename + path);
                var hashChanged = getHashPath() !== encodedPath;

                if (hashChanged) {
                  // We cannot tell if a hashchange was caused by a REPLACE, so we'd
                  // rather setState here and ignore the hashchange. The caveat here
                  // is that other hash histories in the page will consider it a POP.
                  ignorePath = path;
                  replaceHashPath(encodedPath);
                }

                var prevIndex = allPaths.indexOf(
                  (0, _PathUtils.createPath)(history.location)
                );

                if (prevIndex !== -1) allPaths[prevIndex] = path;

                setState({ action: action, location: location });
              }
            );
          };

          var go = function go(n) {
            (0, _warning2.default)(
              canGoWithoutReload,
              'Hash history go(n) causes a full page reload in this browser'
            );

            globalHistory.go(n);
          };

          var goBack = function goBack() {
            return go(-1);
          };

          var goForward = function goForward() {
            return go(1);
          };

          var listenerCount = 0;

          var checkDOMListeners = function checkDOMListeners(delta) {
            listenerCount += delta;

            if (listenerCount === 1) {
              (0, _DOMUtils.addEventListener)(
                window,
                HashChangeEvent,
                handleHashChange
              );
            } else if (listenerCount === 0) {
              (0, _DOMUtils.removeEventListener)(
                window,
                HashChangeEvent,
                handleHashChange
              );
            }
          };

          var isBlocked = false;

          var block = function block() {
            var prompt =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : false;

            var unblock = transitionManager.setPrompt(prompt);

            if (!isBlocked) {
              checkDOMListeners(1);
              isBlocked = true;
            }

            return function() {
              if (isBlocked) {
                isBlocked = false;
                checkDOMListeners(-1);
              }

              return unblock();
            };
          };

          var listen = function listen(listener) {
            var unlisten = transitionManager.appendListener(listener);
            checkDOMListeners(1);

            return function() {
              checkDOMListeners(-1);
              unlisten();
            };
          };

          var history = {
            length: globalHistory.length,
            action: 'POP',
            location: initialLocation,
            createHref: createHref,
            push: push,
            replace: replace,
            go: go,
            goBack: goBack,
            goForward: goForward,
            block: block,
            listen: listen,
          };

          return history;
        };

        exports.default = createHashHistory;

        /***/
      },
      /* 208 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactRouterDom = __webpack_require__(10);

        var _raf = __webpack_require__(83);

        var _raf2 = _interopRequireDefault(_raf);

        var _shared = __webpack_require__(9);

        var _scrollTo = __webpack_require__(84);

        var _scrollTo2 = _interopRequireDefault(_scrollTo);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }
        //

        var RouterScroller = (0, _reactRouterDom.withRouter)(
          (function(_React$Component) {
            _inherits(RouterScroller, _React$Component);

            function RouterScroller() {
              var _ref;

              var _temp, _this, _ret;

              _classCallCheck(this, RouterScroller);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                  this,
                  (_ref =
                    RouterScroller.__proto__ ||
                    Object.getPrototypeOf(RouterScroller)).call.apply(
                    _ref,
                    [this].concat(args)
                  )
                )),
                _this)),
                (_this.scrollToTop = function() {
                  var _this$props = _this.props,
                    autoScrollToTop = _this$props.autoScrollToTop,
                    scrollToTopDuration = _this$props.scrollToTopDuration;

                  if (autoScrollToTop) {
                    (0, _scrollTo2.default)(0, {
                      duration: scrollToTopDuration,
                    });
                  }
                }),
                (_this.scrollToHash = function() {
                  var _ref2 =
                      arguments.length > 0 && arguments[0] !== undefined
                        ? arguments[0]
                        : {},
                    _ref2$orScrollToTop = _ref2.orScrollToTop,
                    orScrollToTop =
                      _ref2$orScrollToTop === undefined
                        ? true
                        : _ref2$orScrollToTop;

                  var _this$props2 = _this.props,
                    scrollToHashDuration = _this$props2.scrollToHashDuration,
                    autoScrollToHash = _this$props2.autoScrollToHash,
                    scrollToHashOffset = _this$props2.scrollToHashOffset,
                    hash = _this$props2.location.hash;

                  if (!autoScrollToHash) {
                    return;
                  }
                  if (hash) {
                    var resolvedHash = hash.substring(1);
                    if (resolvedHash) {
                      // We must attempt to scroll synchronously or we risk the browser scrolling for us
                      var element = document.getElementById(resolvedHash);
                      if (element !== null) {
                        (0, _scrollTo2.default)(element, {
                          duration: scrollToHashDuration,
                          offset: scrollToHashOffset,
                        });
                      } else {
                        (0, _raf2.default)(function() {
                          var element = document.getElementById(resolvedHash);
                          if (element !== null) {
                            (0, _scrollTo2.default)(element, {
                              duration: scrollToHashDuration,
                              offset: scrollToHashOffset,
                            });
                          }
                        });
                      }
                    }
                  } else if (orScrollToTop) {
                    (0, _scrollTo2.default)(0, {
                      duration: scrollToHashDuration,
                    });
                  }
                }),
                _temp)),
                _possibleConstructorReturn(_this, _ret)
              );
            }

            _createClass(RouterScroller, [
              {
                key: 'componentDidMount',
                value: function componentDidMount() {
                  // Do not scroll to top on initial page load if hash does not exist
                  this.scrollToHash({ orScrollToTop: false });
                },
              },
              {
                key: 'componentDidUpdate',
                value: function componentDidUpdate(prev) {
                  if (
                    prev.location.pathname !== this.props.location.pathname &&
                    !this.props.location.hash
                  ) {
                    if (window.__noScrollTo) {
                      window.__noScrollTo = false;
                      return;
                    }
                    this.scrollToTop();
                    return;
                  }
                  if (prev.location.hash !== this.props.location.hash) {
                    this.scrollToHash();
                  }
                },
              },
              {
                key: 'render',
                value: function render() {
                  return (0, _shared.unwrapArray)(this.props.children);
                },
              },
            ]);

            return RouterScroller;
          })(_react2.default.Component)
        );

        exports.default = RouterScroller;

        /***/
      },
      /* 209 */
      /***/ function(module, exports) {
        // Generated by CoffeeScript 1.12.2
        (function() {
          var getNanoSeconds,
            hrtime,
            loadTime,
            moduleLoadTime,
            nodeLoadTime,
            upTime;

          if (
            typeof performance !== 'undefined' &&
            performance !== null &&
            performance.now
          ) {
            module.exports = function() {
              return performance.now();
            };
          } else if (
            typeof process !== 'undefined' &&
            process !== null &&
            process.hrtime
          ) {
            module.exports = function() {
              return (getNanoSeconds() - nodeLoadTime) / 1e6;
            };
            hrtime = process.hrtime;
            getNanoSeconds = function() {
              var hr;
              hr = hrtime();
              return hr[0] * 1e9 + hr[1];
            };
            moduleLoadTime = getNanoSeconds();
            upTime = process.uptime() * 1e9;
            nodeLoadTime = moduleLoadTime - upTime;
          } else if (Date.now) {
            module.exports = function() {
              return Date.now() - loadTime;
            };
            loadTime = Date.now();
          } else {
            module.exports = function() {
              return new Date().getTime() - loadTime;
            };
            loadTime = new Date().getTime();
          }
        }.call(this));

        //# sourceMappingURL=performance-now.js.map

        /***/
      },
      /* 210 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _ErrorCatcher = __webpack_require__(211);

        var _ErrorCatcher2 = _interopRequireDefault(_ErrorCatcher);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var ErrorWrapper = function ErrorWrapper(_ref) {
          var showErrorsInProduction = _ref.showErrorsInProduction,
            children = _ref.children;

          if ('production' === 'development' || showErrorsInProduction) {
            return _react2.default.createElement(
              _ErrorCatcher2.default,
              null,
              children
            );
          }

          return _react2.default.Children.only(children);
        };

        ErrorWrapper.propTypes = {
          showErrorsInProduction: _propTypes2.default.bool,
          children: _propTypes2.default.node.isRequired,
        };

        ErrorWrapper.defaultProps = {
          showErrorsInProduction: false,
        };

        exports.default = ErrorWrapper;

        /***/
      },
      /* 211 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _ErrorUI = __webpack_require__(212);

        var _ErrorUI2 = _interopRequireDefault(_ErrorUI);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var ErrorCatcher = (function(_React$Component) {
          _inherits(ErrorCatcher, _React$Component);

          function ErrorCatcher() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, ErrorCatcher);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                (_ref =
                  ErrorCatcher.__proto__ ||
                  Object.getPrototypeOf(ErrorCatcher)).call.apply(
                  _ref,
                  [this].concat(args)
                )
              )),
              _this)),
              (_this.state = {
                error: null,
                errorInfo: null,
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          _createClass(ErrorCatcher, [
            {
              key: 'componentDidCatch',
              value: function componentDidCatch(error, errorInfo) {
                // Catch errors in any child components and re-renders with an error message
                this.setState({
                  error: error,
                  errorInfo: errorInfo,
                });
              },
            },
            {
              key: 'render',
              value: function render() {
                var error = this.state.error;

                // Fallback UI if an error occurs

                if (error) {
                  return _react2.default.createElement(
                    _ErrorUI2.default,
                    this.state
                  );
                }

                return _react2.default.Children.only(this.props.children);
              },
            },
          ]);

          return ErrorCatcher;
        })(_react2.default.Component);

        ErrorCatcher.propTypes = {
          children: _propTypes2.default.node.isRequired,
        };
        exports.default = ErrorCatcher;

        /***/
      },
      /* 212 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var ErrorUI = function ErrorUI(_ref) {
          var error = _ref.error,
            errorInfo = _ref.errorInfo;
          return _react2.default.createElement(
            'div',
            {
              style: {
                margin: '1rem',
                padding: '1rem',
                background: 'rgba(0,0,0,0.05)',
              },
            },
            _react2.default.createElement(
              'h2',
              null,
              'Oh-no! Something\u2019s gone wrong!'
            ),
            _react2.default.createElement(
              'pre',
              { style: { whiteSpace: 'normal', color: 'red' } },
              _react2.default.createElement(
                'code',
                null,
                error && error.toString()
              )
            ),
            _react2.default.createElement(
              'h3',
              null,
              'This error occurred here:'
            ),
            _react2.default.createElement(
              'pre',
              { style: { color: 'red', overflow: 'auto' } },
              _react2.default.createElement(
                'code',
                null,
                errorInfo.componentStack
              )
            ),
            _react2.default.createElement(
              'p',
              null,
              'For more information, please see the console.'
            )
          );
        };

        ErrorUI.propTypes = {
          error: _propTypes2.default.object.isRequired,
          errorInfo: _propTypes2.default.object.isRequired,
        };

        exports.default = ErrorUI;

        /***/
      },
      /* 213 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var _typeof2 =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _typeof =
          typeof Symbol === 'function' && _typeof2(Symbol.iterator) === 'symbol'
            ? function(obj) {
                return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj === 'undefined'
                    ? 'undefined'
                    : _typeof2(obj);
              };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactRouterDom = __webpack_require__(10);

        var _reactHelmet = __webpack_require__(32);

        var _reactHelmet2 = _interopRequireDefault(_reactHelmet);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) ===
              'object' ||
              typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                (typeof superClass === 'undefined'
                  ? 'undefined'
                  : _typeof2(superClass))
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        //

        var Redirect = (function(_React$Component) {
          _inherits(Redirect, _React$Component);

          function Redirect() {
            _classCallCheck(this, Redirect);

            return _possibleConstructorReturn(
              this,
              (Redirect.__proto__ || Object.getPrototypeOf(Redirect)).apply(
                this,
                arguments
              )
            );
          }

          _createClass(Redirect, [
            {
              key: 'render',
              value: function render() {
                var _props = this.props,
                  to = _props.to,
                  _props$delay = _props.delay,
                  delay = _props$delay === undefined ? 0 : _props$delay,
                  fromPath = _props.fromPath,
                  rest = _objectWithoutProperties(_props, [
                    'to',
                    'delay',
                    'fromPath',
                  ]);

                if (typeof document === 'undefined') {
                  var resolvedTo =
                    (typeof to === 'undefined' ? 'undefined' : _typeof(to)) ===
                    'object'
                      ? to.pathname
                      : to;
                  if (!resolvedTo.includes('//')) {
                    resolvedTo =
                      '' + '/' + (resolvedTo === '/' ? '' : resolvedTo);
                  }
                  return (
                    // ReactRouterRedirect
                    _react2.default.createElement(
                      _reactHelmet2.default,
                      null,
                      fromPath &&
                        _react2.default.createElement(
                          'title',
                          null,
                          '' + '/' + (fromPath === '/' ? '' : fromPath)
                        ),
                      _react2.default.createElement('link', {
                        rel: 'canonical',
                        href: resolvedTo,
                      }),
                      _react2.default.createElement('meta', {
                        name: 'robots',
                        content: 'noindex',
                      }),
                      _react2.default.createElement('meta', {
                        httpEquiv: 'content-type',
                        content: 'text/html; charset=utf-8',
                      }),
                      _react2.default.createElement('meta', {
                        httpEquiv: 'refresh',
                        content: delay + '; url=' + resolvedTo,
                      })
                    )
                  );
                }
                return _react2.default.createElement(
                  _reactRouterDom.Redirect,
                  _extends({ to: to }, rest)
                );
              },
            },
          ]);

          return Redirect;
        })(_react2.default.Component);

        exports.default = Redirect;

        /***/
      },
      /* 214 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        if (true) {
          module.exports = __webpack_require__(215);
        } else {
          module.exports = require('./dist/react-hot-loader.development.js');
        }

        /***/
      },
      /* 215 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        function _interopDefault(t) {
          return t && 'object' == typeof t && 'default' in t ? t.default : t;
        }
        Object.defineProperty(exports, '__esModule', { value: !0 });
        var React = _interopDefault(__webpack_require__(0)),
          classCallCheck = function(t, e) {
            if (!(t instanceof e))
              throw new TypeError('Cannot call a class as a function');
          },
          inherits = function(t, e) {
            if ('function' != typeof e && null !== e)
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof e
              );
            (t.prototype = Object.create(e && e.prototype, {
              constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0,
              },
            })),
              e &&
                (Object.setPrototypeOf
                  ? Object.setPrototypeOf(t, e)
                  : (t.__proto__ = e));
          },
          possibleConstructorReturn = function(t, e) {
            if (!t)
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            return !e || ('object' != typeof e && 'function' != typeof e)
              ? t
              : e;
          },
          AppContainer = (function(t) {
            function e() {
              return (
                classCallCheck(this, e),
                possibleConstructorReturn(this, t.apply(this, arguments))
              );
            }
            return (
              inherits(e, t),
              (e.prototype.render = function() {
                return React.Children.only(this.props.children);
              }),
              e
            );
          })(React.Component),
          hot_prod = function() {
            return function(t) {
              return t;
            };
          },
          areComponentsEqual = function(t, e) {
            return t === e;
          },
          setConfig = function() {},
          cold = function(t) {
            return t;
          };
        (exports.AppContainer = AppContainer),
          (exports.hot = hot_prod),
          (exports.areComponentsEqual = areComponentsEqual),
          (exports.setConfig = setConfig),
          (exports.cold = cold);

        /***/
      },
      /* 216 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* WEBPACK VAR INJECTION */ (function(__dirname) {
          Object.defineProperty(exports, '__esModule', {
            value: true,
          });

          var _path2 = __webpack_require__(38);

          var _path3 = _interopRequireDefault(_path2);

          var _importCss2 = __webpack_require__(217);

          var _importCss3 = _interopRequireDefault(_importCss2);

          var _universalImport2 = __webpack_require__(218);

          var _universalImport3 = _interopRequireDefault(_universalImport2);

          var _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };

          var _createClass = (function() {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ('value' in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }
            return function(Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var _react = __webpack_require__(0);

          var _react2 = _interopRequireDefault(_react);

          var _reactRouterDom = __webpack_require__(10);

          var _reactUniversalComponent = __webpack_require__(85);

          var _reactUniversalComponent2 = _interopRequireDefault(
            _reactUniversalComponent
          );

          var _reactStatic = __webpack_require__(7);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError('Cannot call a class as a function');
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }
            return call &&
              (typeof call === 'object' || typeof call === 'function')
              ? call
              : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
              throw new TypeError(
                'Super expression must either be null or a function, not ' +
                  typeof superClass
              );
            }
            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          }

          (0, _reactUniversalComponent.setHasBabelPlugin)();

          var universalOptions = {
            loading: function loading() {
              return null;
            },
            error: function error(props) {
              console.error(props.error);
              return _react2.default.createElement(
                'div',
                null,
                "An error occurred loading this page's template. More information is available in the console."
              );
            },
          };

          var t_0 = (0, _reactUniversalComponent2.default)(
            (0, _universalImport3.default)({
              id: '../src/pages/projects',
              file:
                '/home/developer/Documents/projects/packages/archetexture.com/dist/react-static-routes.js',
              load: function load() {
                return Promise.all([
                  new Promise(function(resolve) {
                    resolve();
                  }).then(__webpack_require__.bind(null, 87)),
                  (0, _importCss3.default)('src/pages/projects', {
                    disableWarnings: true,
                  }),
                ]).then(function(proms) {
                  return proms[0];
                });
              },
              path: function path() {
                return _path3.default.join(__dirname, '../src/pages/projects');
              },
              resolve: function resolve() {
                return /*require.resolve*/ 87;
              },
              chunkName: function chunkName() {
                return 'src/pages/projects';
              },
            }),
            universalOptions
          );
          var t_1 = (0, _reactUniversalComponent2.default)(
            (0, _universalImport3.default)({
              id: '../src/templates/project',
              file:
                '/home/developer/Documents/projects/packages/archetexture.com/dist/react-static-routes.js',
              load: function load() {
                return Promise.all([
                  new Promise(function(resolve) {
                    resolve();
                  }).then(__webpack_require__.bind(null, 88)),
                  (0, _importCss3.default)('src/templates/project', {
                    disableWarnings: true,
                  }),
                ]).then(function(proms) {
                  return proms[0];
                });
              },
              path: function path() {
                return _path3.default.join(
                  __dirname,
                  '../src/templates/project'
                );
              },
              resolve: function resolve() {
                return /*require.resolve*/ 88;
              },
              chunkName: function chunkName() {
                return 'src/templates/project';
              },
            }),
            universalOptions
          );
          var t_2 = (0, _reactUniversalComponent2.default)(
            (0, _universalImport3.default)({
              id: '../src/pages/about',
              file:
                '/home/developer/Documents/projects/packages/archetexture.com/dist/react-static-routes.js',
              load: function load() {
                return Promise.all([
                  new Promise(function(resolve) {
                    resolve();
                  }).then(__webpack_require__.bind(null, 98)),
                  (0, _importCss3.default)('src/pages/about', {
                    disableWarnings: true,
                  }),
                ]).then(function(proms) {
                  return proms[0];
                });
              },
              path: function path() {
                return _path3.default.join(__dirname, '../src/pages/about');
              },
              resolve: function resolve() {
                return /*require.resolve*/ 98;
              },
              chunkName: function chunkName() {
                return 'src/pages/about';
              },
            }),
            universalOptions
          );
          var t_3 = (0, _reactUniversalComponent2.default)(
            (0, _universalImport3.default)({
              id: '../src/pages/404',
              file:
                '/home/developer/Documents/projects/packages/archetexture.com/dist/react-static-routes.js',
              load: function load() {
                return Promise.all([
                  new Promise(function(resolve) {
                    resolve();
                  }).then(__webpack_require__.bind(null, 99)),
                  (0, _importCss3.default)('src/pages/404', {
                    disableWarnings: true,
                  }),
                ]).then(function(proms) {
                  return proms[0];
                });
              },
              path: function path() {
                return _path3.default.join(__dirname, '../src/pages/404');
              },
              resolve: function resolve() {
                return /*require.resolve*/ 99;
              },
              chunkName: function chunkName() {
                return 'src/pages/404';
              },
            }),
            universalOptions
          );

          // Template Map
          global.componentsByTemplateID = global.componentsByTemplateID || [
            t_0,
            t_1,
            t_2,
            t_3,
          ];

          // Template Tree
          global.templateIDsByPath = global.templateIDsByPath || {
            '404': 3,

            // Get template for given path
          };
          var getComponentForPath = function getComponentForPath(path) {
            path = (0, _reactStatic.cleanPath)(path);
            return global.componentsByTemplateID[
              global.templateIDsByPath[path]
            ];
          };

          global.reactStaticGetComponentForPath = getComponentForPath;
          global.reactStaticRegisterTemplateIDForPath = function(path, id) {
            global.templateIDsByPath[path] = id;
          };

          var Routes = (function(_Component) {
            _inherits(Routes, _Component);

            function Routes() {
              _classCallCheck(this, Routes);

              return _possibleConstructorReturn(
                this,
                (Routes.__proto__ || Object.getPrototypeOf(Routes)).apply(
                  this,
                  arguments
                )
              );
            }

            _createClass(Routes, [
              {
                key: 'render',
                value: function render() {
                  var _props = this.props,
                    Comp = _props.component,
                    render = _props.render,
                    children = _props.children;

                  var getFullComponentForPath = function getFullComponentForPath(
                    path
                  ) {
                    var Comp = getComponentForPath(path);
                    var is404 = path === '404';
                    if (!Comp) {
                      is404 = true;
                      Comp = getComponentForPath('404');
                    }
                    return function(newProps) {
                      return Comp
                        ? _react2.default.createElement(
                            Comp,
                            _extends({}, newProps, is404 ? { is404: true } : {})
                          )
                        : null;
                    };
                  };

                  var renderProps = {
                    componentsByTemplateID: global.componentsByTemplateID,
                    templateIDsByPath: global.templateIDsByPath,
                    getComponentForPath: getFullComponentForPath,
                  };

                  if (Comp) {
                    return _react2.default.createElement(Comp, renderProps);
                  }

                  if (render || children) {
                    return (render || children)(renderProps);
                  }

                  // This is the default auto-routing renderer
                  return _react2.default.createElement(_reactRouterDom.Route, {
                    path: '*',
                    render: function render(props) {
                      var Comp = getFullComponentForPath(
                        props.location.pathname
                      );
                      // If Comp is used as a component here, it triggers React to re-mount the entire
                      // component tree underneath during reconciliation, losing all internal state.
                      // By unwrapping it here we keep the real, static component exposed directly to React.
                      return (
                        Comp &&
                        Comp(
                          _extends({}, props, { key: props.location.pathname })
                        )
                      );
                    },
                  });
                },
              },
            ]);

            return Routes;
          })(_react.Component);

          exports.default = Routes;
          /* WEBPACK VAR INJECTION */
        }.call(exports, '/'));

        /***/
      },
      /* 217 */
      /***/ function(module, exports, __webpack_require__) {
        /* eslint-disable */

        var ADDED = {};

        module.exports = function(chunkName, options) {
          var opts = options || {};
          var href = getHref(chunkName);
          if (!href) {
            if (false) {
              if (typeof window === 'undefined' || !window.__CSS_CHUNKS__) {
                console.warn(
                  '[UNIVERSAL-IMPORT] no css chunks hash found at "window.__CSS_CHUNKS__". Make sure you are using: https://www.npmjs.com/package/extract-css-chunks-webpack-plugin . If you are not serving CSS, disregard this message.'
                );
                return;
              }

              console.warn(
                '[UNIVERSAL-IMPORT] no chunk, ',
                chunkName,
                ', found in "window.__CSS_CHUNKS__". If you are not serving CSS for this chunk, disregard this message.'
              );
            }

            return;
          }

          if (ADDED[href]) {
            return ADDED[href];
          }

          var head = document.getElementsByTagName('head')[0];
          var link = document.createElement('link');

          link.charset = 'utf-8';
          link.type = 'text/css';
          link.rel = 'stylesheet';
          link.timeout = 30000;

          var promise = new Promise(function(resolve, reject) {
            var timeout, img;

            var onload = function() {
              // Check if we created the img tag.
              // If we did then the chunk was loaded via img.src
              // and we need to set the link.href which will then
              // load the resource from cache
              if (img) {
                link.href = href;
                img.onerror = null; // avoid mem leaks in IE.
              }
              link.onerror = null; // avoid mem leaks in IE.
              clearTimeout(timeout);
              resolve();
            };

            link.onerror = function() {
              link.onerror = link.onload = null; // avoid mem leaks in IE.
              clearTimeout(timeout);
              reject(new Error('could not load css chunk: ' + chunkName));
            };

            if (isOnloadSupported() && 'onload' in link) {
              link.onload = onload;
              link.href = href;
            } else {
              // Use img.src as a fallback to loading the css chunk in browsers
              // which don’t support link.onload
              // We use the img.onerror handler because an error will always fire
              // when parsing the response
              // Then we know the resource has been loaded
              img = document.createElement('img');
              img.onerror = onload;
              img.src = href;
            }

            timeout = setTimeout(link.onerror, link.timeout);
            head.appendChild(link);
          });

          ADDED[href] = promise;

          return promise;
        };

        function getHref(chunkName) {
          if (typeof window === 'undefined' || !window.__CSS_CHUNKS__)
            return null;
          return window.__CSS_CHUNKS__[chunkName];
        }

        // Checks whether the browser supports link.onload
        // Reference: https://pie.gd/test/script-link-events/
        function isOnloadSupported() {
          var userAgent = navigator.userAgent;
          var supportedMajor = 535;
          var supportedMinor = 24;
          var match = userAgent.match(/\ AppleWebKit\/(\d+)\.(\d+)/);
          if (match) {
            var major = +match[1];
            var minor = +match[2];
            return (
              (major === supportedMajor && minor >= supportedMinor) ||
              major > supportedMajor
            );
          }
          // All other browsers support it
          return true;
        }

        /***/
      },
      /* 218 */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(module) {
          /* eslint-disable */

          module.exports = function(config, makeThennable) {
            if (makeThennable === false) return config;

            var load = config.load;
            config.then = function(cb) {
              return load().then(function(res) {
                return cb && cb(res);
              });
            };
            config.catch = function(cb) {
              return load().catch(function(e) {
                return cb && cb(e);
              });
            };
            return config;
          };

          var isSet = false;

          function setHasPlugin() {
            if (isSet) return;
            var universal;
            var isWebpack = typeof __webpack_require__ !== 'undefined';

            try {
              if (isWebpack) {
                var weakId = /*require.resolve*/ 85;
                universal = __webpack_require__(weakId);
              } else {
                var pkg = 'react-universal-component';
                universal = module.require(pkg);
              }

              if (universal) {
                universal.setHasBabelPlugin();
                isSet = true;
              }
            } catch (e) {}
          }

          setHasPlugin();
          /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(18)(module)));

        /***/
      },
      /* 219 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        exports.clearChunks = exports.flushModuleIds = exports.flushChunkNames = exports.MODULE_IDS = exports.CHUNK_NAMES = undefined;
        exports.default = requireUniversalModule;

        var _utils = __webpack_require__(86);

        var CHUNK_NAMES = (exports.CHUNK_NAMES = new Set());
        var MODULE_IDS = (exports.MODULE_IDS = new Set());

        function requireUniversalModule(
          universalConfig,
          options,
          props,
          prevProps
        ) {
          var key = options.key,
            _options$timeout = options.timeout,
            timeout = _options$timeout === undefined ? 15000 : _options$timeout,
            onLoad = options.onLoad,
            onError = options.onError,
            isDynamic = options.isDynamic,
            modCache = options.modCache,
            promCache = options.promCache;

          var config = getConfig(isDynamic, universalConfig, options, props);
          var chunkName = config.chunkName,
            path = config.path,
            resolve = config.resolve,
            load = config.load;

          var asyncOnly =
            (!path && !resolve) || typeof chunkName === 'function';

          var requireSync = function requireSync(props, context) {
            var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);

            if (!exp) {
              var mod = void 0;

              if (!(0, _utils.isWebpack)() && path) {
                var modulePath = (0, _utils.callForString)(path, props) || '';
                mod = (0, _utils.tryRequire)(modulePath);
              } else if ((0, _utils.isWebpack)() && resolve) {
                var weakId = (0, _utils.callForString)(resolve, props);

                if (__webpack_require__.m[weakId]) {
                  mod = (0, _utils.tryRequire)(weakId);
                }
              }

              if (mod) {
                exp = (0, _utils.resolveExport)(
                  mod,
                  key,
                  onLoad,
                  chunkName,
                  props,
                  context,
                  modCache,
                  true
                );
              }
            }

            return exp;
          };

          var requireAsync = function requireAsync(props, context) {
            var exp = (0, _utils.loadFromCache)(chunkName, props, modCache);
            if (exp) return Promise.resolve(exp);

            var cachedPromise = (0, _utils.loadFromPromiseCache)(
              chunkName,
              props,
              promCache
            );
            if (cachedPromise) return cachedPromise;

            var prom = new Promise(function(res, rej) {
              var reject = function reject(error) {
                error = error || new Error('timeout exceeded');
                clearTimeout(timer);
                if (onError) {
                  var _isServer = typeof window === 'undefined';
                  var info = { isServer: _isServer };
                  onError(error, info);
                }
                rej(error);
              };

              // const timer = timeout && setTimeout(reject, timeout)
              var timer = timeout && setTimeout(reject, timeout);

              var resolve = function resolve(mod) {
                clearTimeout(timer);

                var exp = (0, _utils.resolveExport)(
                  mod,
                  key,
                  onLoad,
                  chunkName,
                  props,
                  context,
                  modCache
                );
                if (exp) return res(exp);

                reject(new Error('export not found'));
              };

              var request = load(props, { resolve: resolve, reject: reject });

              // if load doesn't return a promise, it must call resolveImport
              // itself. Most common is the promise implementation below.
              if (!request || typeof request.then !== 'function') return;
              request.then(resolve).catch(reject);
            });

            (0, _utils.cacheProm)(prom, chunkName, props, promCache);
            return prom;
          };

          var addModule = function addModule(props) {
            if (_utils.isServer || _utils.isTest) {
              if (chunkName) {
                var name = (0, _utils.callForString)(chunkName, props);
                if (name) CHUNK_NAMES.add(name);
                if (!_utils.isTest) return name; // makes tests way smaller to run both kinds
              }

              if ((0, _utils.isWebpack)()) {
                var weakId = (0, _utils.callForString)(resolve, props);
                if (weakId) MODULE_IDS.add(weakId);
                return weakId;
              }

              if (!(0, _utils.isWebpack)()) {
                var modulePath = (0, _utils.callForString)(path, props);
                if (modulePath) MODULE_IDS.add(modulePath);
                return modulePath;
              }
            }
          };

          var shouldUpdate = function shouldUpdate(next, prev) {
            var cacheKey = (0, _utils.callForString)(chunkName, next);

            var config = getConfig(isDynamic, universalConfig, options, prev);
            var prevCacheKey = (0, _utils.callForString)(
              config.chunkName,
              prev
            );

            return cacheKey !== prevCacheKey;
          };

          return {
            requireSync: requireSync,
            requireAsync: requireAsync,
            addModule: addModule,
            shouldUpdate: shouldUpdate,
            asyncOnly: asyncOnly,
          };
        }

        var flushChunkNames = (exports.flushChunkNames = function flushChunkNames() {
          var chunks = Array.from(CHUNK_NAMES);
          CHUNK_NAMES.clear();
          return chunks;
        });

        var flushModuleIds = (exports.flushModuleIds = function flushModuleIds() {
          var ids = Array.from(MODULE_IDS);
          MODULE_IDS.clear();
          return ids;
        });

        var clearChunks = (exports.clearChunks = function clearChunks() {
          CHUNK_NAMES.clear();
          MODULE_IDS.clear();
        });

        var getConfig = function getConfig(
          isDynamic,
          universalConfig,
          options,
          props
        ) {
          if (isDynamic) {
            return typeof universalConfig === 'function'
              ? universalConfig(props)
              : universalConfig;
          }

          var load =
            typeof universalConfig === 'function'
              ? universalConfig // $FlowIssue
              : function() {
                  return universalConfig;
                };

          return {
            file: 'default',
            id: options.id || 'default',
            chunkName: options.chunkName || 'default',
            resolve: options.resolve || '',
            path: options.path || '',
            load: load,
          };
        };

        /***/
      },
      /* 220 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(1);

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var ReportChunks = (function(_React$Component) {
          _inherits(ReportChunks, _React$Component);

          function ReportChunks() {
            _classCallCheck(this, ReportChunks);

            return _possibleConstructorReturn(
              this,
              (
                ReportChunks.__proto__ || Object.getPrototypeOf(ReportChunks)
              ).apply(this, arguments)
            );
          }

          _createClass(ReportChunks, [
            {
              key: 'getChildContext',
              value: function getChildContext() {
                return {
                  report: this.props.report,
                };
              },
            },
            {
              key: 'render',
              value: function render() {
                return _react2.default.Children.only(this.props.children);
              },
            },
          ]);

          return ReportChunks;
        })(_react2.default.Component);

        ReportChunks.propTypes = {
          report: _propTypes2.default.func.isRequired,
        };
        ReportChunks.childContextTypes = {
          report: _propTypes2.default.func.isRequired,
        };
        exports.default = ReportChunks;

        /***/
      },
      /* 221 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Thumbnails = __webpack_require__(222);

        var _Thumbnails2 = _interopRequireDefault(_Thumbnails);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _Thumbnails2.default;

        /***/
      },
      /* 222 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactStatic = __webpack_require__(7);

        __webpack_require__(223);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var scrollTop = function scrollTop() {
          return window.scroll(0, 0);
        };

        var Thumbnails = (function(_Component) {
          _inherits(Thumbnails, _Component);

          function Thumbnails() {
            _classCallCheck(this, Thumbnails);

            return _possibleConstructorReturn(
              this,
              (Thumbnails.__proto__ || Object.getPrototypeOf(Thumbnails)).apply(
                this,
                arguments
              )
            );
          }

          _createClass(Thumbnails, [
            {
              key: 'render',
              value: function render() {
                var list = this.props.projects.map(function(project) {
                  var to = '/projects/' + project.slug;
                  var src = project.acf.thumbnail.sizes.medium_large;
                  return _react2.default.createElement(
                    'article',
                    { className: 'portfolioitem', key: project.id },
                    _react2.default.createElement(
                      _reactStatic.Link,
                      {
                        className: 'portfolioitem__link',
                        to: to,
                        onClick: scrollTop,
                      },
                      _react2.default.createElement(
                        'div',
                        { className: 'portfolioitem__crop' },
                        _react2.default.createElement('img', {
                          className: 'portfolioitem__thumbnail',
                          src: src,
                          alt: project.slug,
                        })
                      ),
                      _react2.default.createElement(
                        'h1',
                        { className: 'portfolioitem__h1' },
                        project.title.rendered
                      )
                    )
                  );
                });

                return _react2.default.createElement(
                  'section',
                  { className: 'portfolio' },
                  list
                );
              },
            },
          ]);

          return Thumbnails;
        })(_react.Component);

        exports.default = Thumbnails;

        /***/
      },
      /* 223 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.portfolioitem__h1 {\n  font-weight: 300;\n  font-family: "Alegreya Sans SC", sans-serif; }\n\n.portfolioitem__h1 {\n  font-size: 1.9rem; }\n\n.portfolio {\n  display: grid;\n  grid-column-gap: 2.7rem;\n  grid-row-gap: 2rem;\n  grid-auto-rows: 1fr;\n  grid-template-columns: repeat(3, 1fr); }\n  @media (min-width: 768px) and (max-width: 1239px) {\n    .portfolio {\n      grid-template-columns: repeat(3, 1fr); } }\n  @media (min-width: 1240px) and (max-width: 1439px) {\n    .portfolio {\n      grid-template-columns: repeat(3, 1fr); } }\n  @media (min-width: 200px) and (max-width: 767px) {\n    .portfolio {\n      grid-template-columns: repeat(1, 1fr); } }\n\n.portfolioitem {\n  box-sizing: border-box; }\n  .portfolioitem__crop {\n    box-sizing: border-box;\n    backface-visibility: hidden;\n    width: 100%;\n    overflow: hidden;\n    position: relative;\n    -webkit-transition: 0.25s transform, 0.25s filter;\n    -moz-transition: 0.25s transform, 0.25s filter;\n    -ms-transition: 0.25s transform, 0.25s filter;\n    transition: 0.25s transform, 0.25s filter; }\n    .portfolioitem__crop:before {\n      display: block;\n      content: "";\n      width: 100%;\n      padding-top: 60%; }\n  .portfolioitem__thumbnail {\n    box-sizing: border-box;\n    position: absolute;\n    object-fit: cover;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    -webkit-transition: 0.35s height, 0.35s filter;\n    -moz-transition: 0.35s height, 0.35s filter;\n    -ms-transition: 0.35s height, 0.35s filter;\n    transition: 0.35s height, 0.35s filter; }\n  .portfolioitem__h1 {\n    font-size: 1.2rem;\n    font-weight: 400;\n    color: black;\n    margin: 10px 0 0 0; }\n  .portfolioitem__link {\n    cursor: pointer; }\n    .portfolioitem__link:hover .portfolioitem__crop {\n      filter: opacity(75%);\n      transform: scale(1.03); }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 224 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Project = __webpack_require__(225);

        var _Project2 = _interopRequireDefault(_Project);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _Project2.default;

        /***/
      },
      /* 225 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactMarkdown = __webpack_require__(89);

        var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

        var _Slides = __webpack_require__(300);

        var _Slides2 = _interopRequireDefault(_Slides);

        var _qs = __webpack_require__(308);

        var _qs2 = _interopRequireDefault(_qs);

        __webpack_require__(311);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var createURL = function createURL(url, params) {
          // console.log(url + qs.stringify(params, { arrayFormat: 'brackets' }));
          return (
            url +
            '/?' +
            _qs2.default.stringify(params, { arrayFormat: 'brackets' })
          );
        };

        var createSources = function createSources(src) {
          var widths = [400, 600, 1000, 1200];
          var sources = widths.map(function(width) {
            return (
              createURL('http://localhost:3000', {
                uri: decodeURIComponent(src),
                resize: {
                  w: width,
                },
                format: 'webp',
              }) +
              ' ' +
              (width + 'w')
            );
          });

          return {
            srcSet: sources.reduce(function(a, b) {
              return a + ',' + b;
            }),
          };
        };

        // console.log(createSrcSet('https://image.com'));

        var Project = function Project(_ref) {
          var project = _ref.project;

          return _react2.default.createElement(
            'article',
            { className: 'project' },
            _react2.default.createElement(
              'img',
              _extends(
                {
                  className: 'project__image',
                  // src={project.acf.main_image.url}
                  sizes: '75vw',
                },
                createSources(project.acf.main_image.url),
                {
                  alt: 'project-main-' + project.slug,
                }
              )
            ),
            _react2.default.createElement(
              'h1',
              { className: 'project__h1' },
              project.title.rendered
            ),
            _react2.default.createElement(_reactMarkdown2.default, {
              className: 'project__description',
              source: project.acf.description,
            }),
            project.acf.collaborators
              ? _react2.default.createElement(
                  'p',
                  null,
                  'Collaboration: ',
                  project.acf.collaborators
                )
              : null,
            _react2.default.createElement(
              'section',
              { className: 'project__slides' },
              project.acf.slides
                ? project.acf.slides.map(function(slide, index) {
                    return _react2.default.createElement(
                      'div',
                      { className: 'slide', key: 'slide-' + index },
                      _react2.default.createElement(_Slides2.default, {
                        slide: slide,
                      })
                    );
                  })
                : null
            )
          );
        };

        exports.default = Project;

        /***/
      },
      /* 226 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /* Dependencies. */

        var extend = __webpack_require__(227);
        var bail = __webpack_require__(228);
        var vfile = __webpack_require__(229);
        var trough = __webpack_require__(234);
        var string = __webpack_require__(235);
        var plain = __webpack_require__(236);

        /* Expose a frozen processor. */
        module.exports = unified().freeze();

        var slice = [].slice;
        var own = {}.hasOwnProperty;

        /* Process pipeline. */
        var pipeline = trough()
          .use(pipelineParse)
          .use(pipelineRun)
          .use(pipelineStringify);

        function pipelineParse(p, ctx) {
          ctx.tree = p.parse(ctx.file);
        }

        function pipelineRun(p, ctx, next) {
          p.run(ctx.tree, ctx.file, done);

          function done(err, tree, file) {
            if (err) {
              next(err);
            } else {
              ctx.tree = tree;
              ctx.file = file;
              next();
            }
          }
        }

        function pipelineStringify(p, ctx) {
          ctx.file.contents = p.stringify(ctx.tree, ctx.file);
        }

        /* Function to create the first processor. */
        function unified() {
          var attachers = [];
          var transformers = trough();
          var namespace = {};
          var frozen = false;
          var freezeIndex = -1;

          /* Data management. */
          processor.data = data;

          /* Lock. */
          processor.freeze = freeze;

          /* Plug-ins. */
          processor.attachers = attachers;
          processor.use = use;

          /* API. */
          processor.parse = parse;
          processor.stringify = stringify;
          processor.run = run;
          processor.runSync = runSync;
          processor.process = process;
          processor.processSync = processSync;

          /* Expose. */
          return processor;

          /* Create a new processor based on the processor
   * in the current scope. */
          function processor() {
            var destination = unified();
            var length = attachers.length;
            var index = -1;

            while (++index < length) {
              destination.use.apply(null, attachers[index]);
            }

            destination.data(extend(true, {}, namespace));

            return destination;
          }

          /* Freeze: used to signal a processor that has finished
   * configuration.
   *
   * For example, take unified itself.  It’s frozen.
   * Plug-ins should not be added to it.  Rather, it should
   * be extended, by invoking it, before modifying it.
   *
   * In essence, always invoke this when exporting a
   * processor. */
          function freeze() {
            var values;
            var plugin;
            var options;
            var transformer;

            if (frozen) {
              return processor;
            }

            while (++freezeIndex < attachers.length) {
              values = attachers[freezeIndex];
              plugin = values[0];
              options = values[1];
              transformer = null;

              if (options === false) {
                continue;
              }

              if (options === true) {
                values[1] = undefined;
              }

              transformer = plugin.apply(processor, values.slice(1));

              if (typeof transformer === 'function') {
                transformers.use(transformer);
              }
            }

            frozen = true;
            freezeIndex = Infinity;

            return processor;
          }

          /* Data management.
   * Getter / setter for processor-specific informtion. */
          function data(key, value) {
            if (string(key)) {
              /* Set `key`. */
              if (arguments.length === 2) {
                assertUnfrozen('data', frozen);

                namespace[key] = value;

                return processor;
              }

              /* Get `key`. */
              return (own.call(namespace, key) && namespace[key]) || null;
            }

            /* Set space. */
            if (key) {
              assertUnfrozen('data', frozen);
              namespace = key;
              return processor;
            }

            /* Get space. */
            return namespace;
          }

          /* Plug-in management.
   *
   * Pass it:
   * *   an attacher and options,
   * *   a preset,
   * *   a list of presets, attachers, and arguments (list
   *     of attachers and options). */
          function use(value) {
            var settings;

            assertUnfrozen('use', frozen);

            if (value === null || value === undefined) {
              /* Empty */
            } else if (typeof value === 'function') {
              addPlugin.apply(null, arguments);
            } else if (typeof value === 'object') {
              if ('length' in value) {
                addList(value);
              } else {
                addPreset(value);
              }
            } else {
              throw new Error('Expected usable value, not `' + value + '`');
            }

            if (settings) {
              namespace.settings = extend(namespace.settings || {}, settings);
            }

            return processor;

            function addPreset(result) {
              addList(result.plugins);

              if (result.settings) {
                settings = extend(settings || {}, result.settings);
              }
            }

            function add(value) {
              if (typeof value === 'function') {
                addPlugin(value);
              } else if (typeof value === 'object') {
                if ('length' in value) {
                  addPlugin.apply(null, value);
                } else {
                  addPreset(value);
                }
              } else {
                throw new Error('Expected usable value, not `' + value + '`');
              }
            }

            function addList(plugins) {
              var length;
              var index;

              if (plugins === null || plugins === undefined) {
                /* Empty */
              } else if (typeof plugins === 'object' && 'length' in plugins) {
                length = plugins.length;
                index = -1;

                while (++index < length) {
                  add(plugins[index]);
                }
              } else {
                throw new Error(
                  'Expected a list of plugins, not `' + plugins + '`'
                );
              }
            }

            function addPlugin(plugin, value) {
              var entry = find(plugin);

              if (entry) {
                if (plain(entry[1]) && plain(value)) {
                  value = extend(entry[1], value);
                }

                entry[1] = value;
              } else {
                attachers.push(slice.call(arguments));
              }
            }
          }

          function find(plugin) {
            var length = attachers.length;
            var index = -1;
            var entry;

            while (++index < length) {
              entry = attachers[index];

              if (entry[0] === plugin) {
                return entry;
              }
            }
          }

          /* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the
   * processor. */
          function parse(doc) {
            var file = vfile(doc);
            var Parser;

            freeze();
            Parser = processor.Parser;
            assertParser('parse', Parser);

            if (newable(Parser)) {
              return new Parser(String(file), file).parse();
            }

            return Parser(String(file), file); // eslint-disable-line new-cap
          }

          /* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), async. */
          function run(node, file, cb) {
            assertNode(node);
            freeze();

            if (!cb && typeof file === 'function') {
              cb = file;
              file = null;
            }

            if (!cb) {
              return new Promise(executor);
            }

            executor(null, cb);

            function executor(resolve, reject) {
              transformers.run(node, vfile(file), done);

              function done(err, tree, file) {
                tree = tree || node;
                if (err) {
                  reject(err);
                } else if (resolve) {
                  resolve(tree);
                } else {
                  cb(null, tree, file);
                }
              }
            }
          }

          /* Run transforms on a Unist node representation of a file
   * (in string or VFile representation), sync. */
          function runSync(node, file) {
            var complete = false;
            var result;

            run(node, file, done);

            assertDone('runSync', 'run', complete);

            return result;

            function done(err, tree) {
              complete = true;
              bail(err);
              result = tree;
            }
          }

          /* Stringify a Unist node representation of a file
   * (in string or VFile representation) into a string
   * using the `Compiler` on the processor. */
          function stringify(node, doc) {
            var file = vfile(doc);
            var Compiler;

            freeze();
            Compiler = processor.Compiler;
            assertCompiler('stringify', Compiler);
            assertNode(node);

            if (newable(Compiler)) {
              return new Compiler(node, file).compile();
            }

            return Compiler(node, file); // eslint-disable-line new-cap
          }

          /* Parse a file (in string or VFile representation)
   * into a Unist node using the `Parser` on the processor,
   * then run transforms on that node, and compile the
   * resulting node using the `Compiler` on the processor,
   * and store that result on the VFile. */
          function process(doc, cb) {
            freeze();
            assertParser('process', processor.Parser);
            assertCompiler('process', processor.Compiler);

            if (!cb) {
              return new Promise(executor);
            }

            executor(null, cb);

            function executor(resolve, reject) {
              var file = vfile(doc);

              pipeline.run(processor, { file: file }, done);

              function done(err) {
                if (err) {
                  reject(err);
                } else if (resolve) {
                  resolve(file);
                } else {
                  cb(null, file);
                }
              }
            }
          }

          /* Process the given document (in string or VFile
   * representation), sync. */
          function processSync(doc) {
            var complete = false;
            var file;

            freeze();
            assertParser('processSync', processor.Parser);
            assertCompiler('processSync', processor.Compiler);
            file = vfile(doc);

            process(file, done);

            assertDone('processSync', 'process', complete);

            return file;

            function done(err) {
              complete = true;
              bail(err);
            }
          }
        }

        /* Check if `func` is a constructor. */
        function newable(value) {
          return typeof value === 'function' && keys(value.prototype);
        }

        /* Check if `value` is an object with keys. */
        function keys(value) {
          var key;
          for (key in value) {
            return true;
          }
          return false;
        }

        /* Assert a parser is available. */
        function assertParser(name, Parser) {
          if (typeof Parser !== 'function') {
            throw new Error('Cannot `' + name + '` without `Parser`');
          }
        }

        /* Assert a compiler is available. */
        function assertCompiler(name, Compiler) {
          if (typeof Compiler !== 'function') {
            throw new Error('Cannot `' + name + '` without `Compiler`');
          }
        }

        /* Assert the processor is not frozen. */
        function assertUnfrozen(name, frozen) {
          if (frozen) {
            throw new Error(
              [
                'Cannot invoke `' +
                  name +
                  '` on a frozen processor.\nCreate a new ',
                'processor first, by invoking it: use `processor()` instead of ',
                '`processor`.',
              ].join('')
            );
          }
        }

        /* Assert `node` is a Unist node. */
        function assertNode(node) {
          if (!node || !string(node.type)) {
            throw new Error('Expected node, got `' + node + '`');
          }
        }

        /* Assert that `complete` is `true`. */
        function assertDone(name, asyncName, complete) {
          if (!complete) {
            throw new Error(
              '`' + name + '` finished async. Use `' + asyncName + '` instead'
            );
          }
        }

        /***/
      },
      /* 227 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var hasOwn = Object.prototype.hasOwnProperty;
        var toStr = Object.prototype.toString;

        var isArray = function isArray(arr) {
          if (typeof Array.isArray === 'function') {
            return Array.isArray(arr);
          }

          return toStr.call(arr) === '[object Array]';
        };

        var isPlainObject = function isPlainObject(obj) {
          if (!obj || toStr.call(obj) !== '[object Object]') {
            return false;
          }

          var hasOwnConstructor = hasOwn.call(obj, 'constructor');
          var hasIsPrototypeOf =
            obj.constructor &&
            obj.constructor.prototype &&
            hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
          // Not own constructor property must be Object
          if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
            return false;
          }

          // Own properties are enumerated firstly, so to speed up,
          // if last one is own, then all properties are own.
          var key;
          for (key in obj) {
            /**/
          }

          return typeof key === 'undefined' || hasOwn.call(obj, key);
        };

        module.exports = function extend() {
          var options, name, src, copy, copyIsArray, clone;
          var target = arguments[0];
          var i = 1;
          var length = arguments.length;
          var deep = false;

          // Handle a deep copy situation
          if (typeof target === 'boolean') {
            deep = target;
            target = arguments[1] || {};
            // skip the boolean and the target
            i = 2;
          }
          if (
            target == null ||
            (typeof target !== 'object' && typeof target !== 'function')
          ) {
            target = {};
          }

          for (; i < length; ++i) {
            options = arguments[i];
            // Only deal with non-null/undefined values
            if (options != null) {
              // Extend the base object
              for (name in options) {
                src = target[name];
                copy = options[name];

                // Prevent never-ending loop
                if (target !== copy) {
                  // Recurse if we're merging plain objects or arrays
                  if (
                    deep &&
                    copy &&
                    (isPlainObject(copy) || (copyIsArray = isArray(copy)))
                  ) {
                    if (copyIsArray) {
                      copyIsArray = false;
                      clone = src && isArray(src) ? src : [];
                    } else {
                      clone = src && isPlainObject(src) ? src : {};
                    }

                    // Never move original objects, clone them
                    target[name] = extend(deep, clone, copy);

                    // Don't bring in undefined values
                  } else if (typeof copy !== 'undefined') {
                    target[name] = copy;
                  }
                }
              }
            }
          }

          // Return the modified object
          return target;
        };

        /***/
      },
      /* 228 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = bail;

        function bail(err) {
          if (err) {
            throw err;
          }
        }

        /***/
      },
      /* 229 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var VMessage = __webpack_require__(230);
        var VFile = __webpack_require__(232);

        module.exports = VFile;

        var proto = VFile.prototype;

        proto.message = message;
        proto.info = info;
        proto.fail = fail;

        /* Slight backwards compatibility.  Remove in the future. */
        proto.warn = message;

        /* Create a message with `reason` at `position`.
 * When an error is passed in as `reason`, copies the stack. */
        function message(reason, position, origin) {
          var filePath = this.path;
          var message = new VMessage(reason, position, origin);

          if (filePath) {
            message.name = filePath + ':' + message.name;
            message.file = filePath;
          }

          message.fatal = false;

          this.messages.push(message);

          return message;
        }

        /* Fail. Creates a vmessage, associates it with the file,
 * and throws it. */
        function fail() {
          var message = this.message.apply(this, arguments);

          message.fatal = true;

          throw message;
        }

        /* Info. Creates a vmessage, associates it with the file,
 * and marks the fatality as null. */
        function info() {
          var message = this.message.apply(this, arguments);

          message.fatal = null;

          return message;
        }

        /***/
      },
      /* 230 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var stringify = __webpack_require__(231);

        module.exports = VMessage;

        /* Inherit from `Error#`. */
        function VMessagePrototype() {}
        VMessagePrototype.prototype = Error.prototype;
        VMessage.prototype = new VMessagePrototype();

        /* Message properties. */
        var proto = VMessage.prototype;

        proto.file = '';
        proto.name = '';
        proto.reason = '';
        proto.message = '';
        proto.stack = '';
        proto.fatal = null;
        proto.column = null;
        proto.line = null;

        /* Construct a new VMessage.
 *
 * Note: We cannot invoke `Error` on the created context,
 * as that adds readonly `line` and `column` attributes on
 * Safari 9, thus throwing and failing the data. */
        function VMessage(reason, position, origin) {
          var parts;
          var range;
          var location;

          if (typeof position === 'string') {
            origin = position;
            position = null;
          }

          parts = parseOrigin(origin);
          range = stringify(position) || '1:1';

          location = {
            start: { line: null, column: null },
            end: { line: null, column: null },

            /* Node. */
          };
          if (position && position.position) {
            position = position.position;
          }

          if (position) {
            /* Position. */
            if (position.start) {
              location = position;
              position = position.start;
            } else {
              /* Point. */
              location.start = position;
            }
          }

          if (reason.stack) {
            this.stack = reason.stack;
            reason = reason.message;
          }

          this.message = reason;
          this.name = range;
          this.reason = reason;
          this.line = position ? position.line : null;
          this.column = position ? position.column : null;
          this.location = location;
          this.source = parts[0];
          this.ruleId = parts[1];
        }

        function parseOrigin(origin) {
          var result = [null, null];
          var index;

          if (typeof origin === 'string') {
            index = origin.indexOf(':');

            if (index === -1) {
              result[1] = origin;
            } else {
              result[0] = origin.slice(0, index);
              result[1] = origin.slice(index + 1);
            }
          }

          return result;
        }

        /***/
      },
      /* 231 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var own = {}.hasOwnProperty;

        module.exports = stringify;

        function stringify(value) {
          /* Nothing. */
          if (!value || typeof value !== 'object') {
            return null;
          }

          /* Node. */
          if (own.call(value, 'position') || own.call(value, 'type')) {
            return position(value.position);
          }

          /* Position. */
          if (own.call(value, 'start') || own.call(value, 'end')) {
            return position(value);
          }

          /* Point. */
          if (own.call(value, 'line') || own.call(value, 'column')) {
            return point(value);
          }

          /* ? */
          return null;
        }

        function point(point) {
          if (!point || typeof point !== 'object') {
            point = {};
          }

          return index(point.line) + ':' + index(point.column);
        }

        function position(pos) {
          if (!pos || typeof pos !== 'object') {
            pos = {};
          }

          return point(pos.start) + '-' + point(pos.end);
        }

        function index(value) {
          return value && typeof value === 'number' ? value : 1;
        }

        /***/
      },
      /* 232 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var path = __webpack_require__(38);
        var replace = __webpack_require__(233);
        var buffer = __webpack_require__(69);

        module.exports = VFile;

        var own = {}.hasOwnProperty;
        var proto = VFile.prototype;

        proto.toString = toString;

        /* Order of setting (least specific to most), we need this because
 * otherwise `{stem: 'a', path: '~/b.js'}` would throw, as a path
 * is needed before a stem can be set. */
        var order = [
          'history',
          'path',
          'basename',
          'stem',
          'extname',
          'dirname',
        ];

        /* Construct a new file. */
        function VFile(options) {
          var prop;
          var index;
          var length;

          if (!options) {
            options = {};
          } else if (typeof options === 'string' || buffer(options)) {
            options = { contents: options };
          } else if ('message' in options && 'messages' in options) {
            return options;
          }

          if (!(this instanceof VFile)) {
            return new VFile(options);
          }

          this.data = {};
          this.messages = [];
          this.history = [];
          this.cwd = process.cwd();

          /* Set path related properties in the correct order. */
          index = -1;
          length = order.length;

          while (++index < length) {
            prop = order[index];

            if (own.call(options, prop)) {
              this[prop] = options[prop];
            }
          }

          /* Set non-path related properties. */
          for (prop in options) {
            if (order.indexOf(prop) === -1) {
              this[prop] = options[prop];
            }
          }
        }

        /* Access full path (`~/index.min.js`). */
        Object.defineProperty(proto, 'path', {
          get: function() {
            return this.history[this.history.length - 1];
          },
          set: function(path) {
            assertNonEmpty(path, 'path');

            if (path !== this.path) {
              this.history.push(path);
            }
          },
        });

        /* Access parent path (`~`). */
        Object.defineProperty(proto, 'dirname', {
          get: function() {
            return typeof this.path === 'string'
              ? path.dirname(this.path)
              : undefined;
          },
          set: function(dirname) {
            assertPath(this.path, 'dirname');
            this.path = path.join(dirname || '', this.basename);
          },
        });

        /* Access basename (`index.min.js`). */
        Object.defineProperty(proto, 'basename', {
          get: function() {
            return typeof this.path === 'string'
              ? path.basename(this.path)
              : undefined;
          },
          set: function(basename) {
            assertNonEmpty(basename, 'basename');
            assertPart(basename, 'basename');
            this.path = path.join(this.dirname || '', basename);
          },
        });

        /* Access extname (`.js`). */
        Object.defineProperty(proto, 'extname', {
          get: function() {
            return typeof this.path === 'string'
              ? path.extname(this.path)
              : undefined;
          },
          set: function(extname) {
            var ext = extname || '';

            assertPart(ext, 'extname');
            assertPath(this.path, 'extname');

            if (ext) {
              if (ext.charAt(0) !== '.') {
                throw new Error('`extname` must start with `.`');
              }

              if (ext.indexOf('.', 1) !== -1) {
                throw new Error('`extname` cannot contain multiple dots');
              }
            }

            this.path = replace(this.path, ext);
          },
        });

        /* Access stem (`index.min`). */
        Object.defineProperty(proto, 'stem', {
          get: function() {
            return typeof this.path === 'string'
              ? path.basename(this.path, this.extname)
              : undefined;
          },
          set: function(stem) {
            assertNonEmpty(stem, 'stem');
            assertPart(stem, 'stem');
            this.path = path.join(
              this.dirname || '',
              stem + (this.extname || '')
            );
          },
        });

        /* Get the value of the file. */
        function toString(encoding) {
          var value = this.contents || '';
          return buffer(value) ? value.toString(encoding) : String(value);
        }

        /* Assert that `part` is not a path (i.e., does
 * not contain `path.sep`). */
        function assertPart(part, name) {
          if (part.indexOf(path.sep) !== -1) {
            throw new Error(
              '`' +
                name +
                '` cannot be a path: did not expect `' +
                path.sep +
                '`'
            );
          }
        }

        /* Assert that `part` is not empty. */
        function assertNonEmpty(part, name) {
          if (!part) {
            throw new Error('`' + name + '` cannot be empty');
          }
        }

        /* Assert `path` exists. */
        function assertPath(path, name) {
          if (!path) {
            throw new Error(
              'Setting `' + name + '` requires `path` to be set too'
            );
          }
        }

        /***/
      },
      /* 233 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var path = __webpack_require__(38);

        function replaceExt(npath, ext) {
          if (typeof npath !== 'string') {
            return npath;
          }

          if (npath.length === 0) {
            return npath;
          }

          var nFileName = path.basename(npath, path.extname(npath)) + ext;
          return path.join(path.dirname(npath), nFileName);
        }

        module.exports = replaceExt;

        /***/
      },
      /* 234 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /* Expose. */

        module.exports = trough;

        /* Methods. */
        var slice = [].slice;

        /* Create new middleware. */
        function trough() {
          var fns = [];
          var middleware = {};

          middleware.run = run;
          middleware.use = use;

          return middleware;

          /* Run `fns`.  Last argument must be
   * a completion handler. */
          function run() {
            var index = -1;
            var input = slice.call(arguments, 0, -1);
            var done = arguments[arguments.length - 1];

            if (typeof done !== 'function') {
              throw new Error(
                'Expected function as last argument, not ' + done
              );
            }

            next.apply(null, [null].concat(input));

            /* Run the next `fn`, if any. */
            function next(err) {
              var fn = fns[++index];
              var params = slice.call(arguments, 0);
              var values = params.slice(1);
              var length = input.length;
              var pos = -1;

              if (err) {
                done(err);
                return;
              }

              /* Copy non-nully input into values. */
              while (++pos < length) {
                if (values[pos] === null || values[pos] === undefined) {
                  values[pos] = input[pos];
                }
              }

              input = values;

              /* Next or done. */
              if (fn) {
                wrap(fn, next).apply(null, input);
              } else {
                done.apply(null, [null].concat(input));
              }
            }
          }

          /* Add `fn` to the list. */
          function use(fn) {
            if (typeof fn !== 'function') {
              throw new Error('Expected `fn` to be a function, not ' + fn);
            }

            fns.push(fn);

            return middleware;
          }
        }

        /* Wrap `fn`.  Can be sync or async; return a promise,
 * receive a completion handler, return new values and
 * errors. */
        function wrap(fn, next) {
          var invoked;

          return wrapped;

          function wrapped() {
            var params = slice.call(arguments, 0);
            var callback = fn.length > params.length;
            var result;

            if (callback) {
              params.push(done);
            }

            try {
              result = fn.apply(null, params);
            } catch (err) {
              /* Well, this is quite the pickle.  `fn` received
       * a callback and invoked it (thus continuing the
       * pipeline), but later also threw an error.
       * We’re not about to restart the pipeline again,
       * so the only thing left to do is to throw the
       * thing instea. */
              if (callback && invoked) {
                throw err;
              }

              return done(err);
            }

            if (!callback) {
              if (result && typeof result.then === 'function') {
                result.then(then, done);
              } else if (result instanceof Error) {
                done(result);
              } else {
                then(result);
              }
            }
          }

          /* Invoke `next`, only once. */
          function done() {
            if (!invoked) {
              invoked = true;

              next.apply(null, arguments);
            }
          }

          /* Invoke `done` with one value.
   * Tracks if an error is passed, too. */
          function then(value) {
            done(null, value);
          }
        }

        /***/
      },
      /* 235 */
      /***/ function(module, exports) {
        var toString = Object.prototype.toString;

        module.exports = isString;

        function isString(obj) {
          return toString.call(obj) === '[object String]';
        }

        /***/
      },
      /* 236 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var toString = Object.prototype.toString;

        module.exports = function(x) {
          var prototype;
          return (
            toString.call(x) === '[object Object]' &&
            ((prototype = Object.getPrototypeOf(x)),
            prototype === null || prototype === Object.getPrototypeOf({}))
          );
        };

        /***/
      },
      /* 237 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var unherit = __webpack_require__(238);
        var xtend = __webpack_require__(6);
        var Parser = __webpack_require__(241);

        module.exports = parse;
        parse.Parser = Parser;

        function parse(options) {
          var Local = unherit(Parser);
          Local.prototype.options = xtend(
            Local.prototype.options,
            this.data('settings'),
            options
          );
          this.Parser = Local;
        }

        /***/
      },
      /* 238 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var xtend = __webpack_require__(6);
        var inherits = __webpack_require__(239);

        module.exports = unherit;

        /* Create a custom constructor which can be modified
 * without affecting the original class. */
        function unherit(Super) {
          var result;
          var key;
          var value;

          inherits(Of, Super);
          inherits(From, Of);

          /* Clone values. */
          result = Of.prototype;

          for (key in result) {
            value = result[key];

            if (value && typeof value === 'object') {
              result[key] = 'concat' in value ? value.concat() : xtend(value);
            }
          }

          return Of;

          /* Constructor accepting a single argument,
   * which itself is an `arguments` object. */
          function From(parameters) {
            return Super.apply(this, parameters);
          }

          /* Constructor accepting variadic arguments. */
          function Of() {
            if (!(this instanceof Of)) {
              return new From(arguments);
            }

            return Super.apply(this, arguments);
          }
        }

        /***/
      },
      /* 239 */
      /***/ function(module, exports, __webpack_require__) {
        try {
          var util = __webpack_require__(78);
          if (typeof util.inherits !== 'function') throw '';
          module.exports = util.inherits;
        } catch (e) {
          module.exports = __webpack_require__(240);
        }

        /***/
      },
      /* 240 */
      /***/ function(module, exports) {
        if (typeof Object.create === 'function') {
          // implementation from standard node.js 'util' module
          module.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
              constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            });
          };
        } else {
          // old school shim for old browsers
          module.exports = function inherits(ctor, superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {};
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          };
        }

        /***/
      },
      /* 241 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var xtend = __webpack_require__(6);
        var toggle = __webpack_require__(242);
        var vfileLocation = __webpack_require__(243);
        var unescape = __webpack_require__(244);
        var decode = __webpack_require__(245);
        var tokenizer = __webpack_require__(251);

        module.exports = Parser;

        function Parser(doc, file) {
          this.file = file;
          this.offset = {};
          this.options = xtend(this.options);
          this.setOptions({});

          this.inList = false;
          this.inBlock = false;
          this.inLink = false;
          this.atStart = true;

          this.toOffset = vfileLocation(file).toOffset;
          this.unescape = unescape(this, 'escape');
          this.decode = decode(this);
        }

        var proto = Parser.prototype;

        /* Expose core. */
        proto.setOptions = __webpack_require__(252);
        proto.parse = __webpack_require__(255);

        /* Expose `defaults`. */
        proto.options = __webpack_require__(91);

        /* Enter and exit helpers. */
        proto.exitStart = toggle('atStart', true);
        proto.enterList = toggle('inList', false);
        proto.enterLink = toggle('inLink', false);
        proto.enterBlock = toggle('inBlock', false);

        /* Nodes that can interupt a paragraph:
 *
 * ```markdown
 * A paragraph, followed by a thematic break.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the paragraph. */
        proto.interruptParagraph = [
          ['thematicBreak'],
          ['atxHeading'],
          ['fencedCode'],
          ['blockquote'],
          ['html'],
          ['setextHeading', { commonmark: false }],
          ['definition', { commonmark: false }],
          ['footnote', { commonmark: false }],
        ];

        /* Nodes that can interupt a list:
 *
 * ```markdown
 * - One
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the list. */
        proto.interruptList = [
          ['atxHeading', { pedantic: false }],
          ['fencedCode', { pedantic: false }],
          ['thematicBreak', { pedantic: false }],
          ['definition', { commonmark: false }],
          ['footnote', { commonmark: false }],
        ];

        /* Nodes that can interupt a blockquote:
 *
 * ```markdown
 * > A paragraph.
 * ___
 * ```
 *
 * In the above example, the thematic break “interupts”
 * the blockquote. */
        proto.interruptBlockquote = [
          ['indentedCode', { commonmark: true }],
          ['fencedCode', { commonmark: true }],
          ['atxHeading', { commonmark: true }],
          ['setextHeading', { commonmark: true }],
          ['thematicBreak', { commonmark: true }],
          ['html', { commonmark: true }],
          ['list', { commonmark: true }],
          ['definition', { commonmark: false }],
          ['footnote', { commonmark: false }],
        ];

        /* Handlers. */
        proto.blockTokenizers = {
          newline: __webpack_require__(258),
          indentedCode: __webpack_require__(259),
          fencedCode: __webpack_require__(260),
          blockquote: __webpack_require__(261),
          atxHeading: __webpack_require__(262),
          thematicBreak: __webpack_require__(263),
          list: __webpack_require__(264),
          setextHeading: __webpack_require__(266),
          html: __webpack_require__(267),
          footnote: __webpack_require__(268),
          definition: __webpack_require__(270),
          table: __webpack_require__(271),
          paragraph: __webpack_require__(272),
        };

        proto.inlineTokenizers = {
          escape: __webpack_require__(273),
          autoLink: __webpack_require__(275),
          url: __webpack_require__(276),
          html: __webpack_require__(278),
          link: __webpack_require__(279),
          reference: __webpack_require__(280),
          strong: __webpack_require__(281),
          emphasis: __webpack_require__(283),
          deletion: __webpack_require__(286),
          code: __webpack_require__(288),
          break: __webpack_require__(290),
          text: __webpack_require__(292),
        };

        /* Expose precedence. */
        proto.blockMethods = keys(proto.blockTokenizers);
        proto.inlineMethods = keys(proto.inlineTokenizers);

        /* Tokenizers. */
        proto.tokenizeBlock = tokenizer('block');
        proto.tokenizeInline = tokenizer('inline');
        proto.tokenizeFactory = tokenizer;

        /* Get all keys in `value`. */
        function keys(value) {
          var result = [];
          var key;

          for (key in value) {
            result.push(key);
          }

          return result;
        }

        /***/
      },
      /* 242 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = factory;

        /* Construct a state `toggler`: a function which inverses
 * `property` in context based on its current value.
 * The by `toggler` returned function restores that value. */
        function factory(key, state, ctx) {
          return enter;

          function enter() {
            var context = ctx || this;
            var current = context[key];

            context[key] = !state;

            return exit;

            function exit() {
              context[key] = current;
            }
          }
        }

        /***/
      },
      /* 243 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /* Expose. */

        module.exports = factory;

        /* Factory. */
        function factory(file) {
          var contents = indices(String(file));

          return {
            toPosition: offsetToPositionFactory(contents),
            toOffset: positionToOffsetFactory(contents),
          };
        }

        /* Factory to get the line and column-based `position` for
 * `offset` in the bound indices. */
        function offsetToPositionFactory(indices) {
          return offsetToPosition;

          /* Get the line and column-based `position` for
   * `offset` in the bound indices. */
          function offsetToPosition(offset) {
            var index = -1;
            var length = indices.length;

            if (offset < 0) {
              return {};
            }

            while (++index < length) {
              if (indices[index] > offset) {
                return {
                  line: index + 1,
                  column: offset - (indices[index - 1] || 0) + 1,
                  offset: offset,
                };
              }
            }

            return {};
          }
        }

        /* Factory to get the `offset` for a line and column-based
 * `position` in the bound indices. */
        function positionToOffsetFactory(indices) {
          return positionToOffset;

          /* Get the `offset` for a line and column-based
   * `position` in the bound indices. */
          function positionToOffset(position) {
            var line = position && position.line;
            var column = position && position.column;

            if (!isNaN(line) && !isNaN(column) && line - 1 in indices) {
              return (indices[line - 2] || 0) + column - 1 || 0;
            }

            return -1;
          }
        }

        /* Get indices of line-breaks in `value`. */
        function indices(value) {
          var result = [];
          var index = value.indexOf('\n');

          while (index !== -1) {
            result.push(index + 1);
            index = value.indexOf('\n', index + 1);
          }

          result.push(value.length + 1);

          return result;
        }

        /***/
      },
      /* 244 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = factory;

        /* Factory to de-escape a value, based on a list at `key`
 * in `ctx`. */
        function factory(ctx, key) {
          return unescape;

          /* De-escape a string using the expression at `key`
   * in `ctx`. */
          function unescape(value) {
            var prev = 0;
            var index = value.indexOf('\\');
            var escape = ctx[key];
            var queue = [];
            var character;

            while (index !== -1) {
              queue.push(value.slice(prev, index));
              prev = index + 1;
              character = value.charAt(prev);

              /* If the following character is not a valid escape,
       * add the slash. */
              if (!character || escape.indexOf(character) === -1) {
                queue.push('\\');
              }

              index = value.indexOf('\\', prev);
            }

            queue.push(value.slice(prev));

            return queue.join('');
          }
        }

        /***/
      },
      /* 245 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var xtend = __webpack_require__(6);
        var entities = __webpack_require__(39);

        module.exports = factory;

        /* Factory to create an entity decoder. */
        function factory(ctx) {
          decoder.raw = decodeRaw;

          return decoder;

          /* Normalize `position` to add an `indent`. */
          function normalize(position) {
            var offsets = ctx.offset;
            var line = position.line;
            var result = [];

            while (++line) {
              if (!(line in offsets)) {
                break;
              }

              result.push((offsets[line] || 0) + 1);
            }

            return {
              start: position,
              indent: result,
            };
          }

          /* Handle a warning.
   * See https://github.com/wooorm/parse-entities
   * for the warnings. */
          function handleWarning(reason, position, code) {
            if (code === 3) {
              return;
            }

            ctx.file.message(reason, position);
          }

          /* Decode `value` (at `position`) into text-nodes. */
          function decoder(value, position, handler) {
            entities(value, {
              position: normalize(position),
              warning: handleWarning,
              text: handler,
              reference: handler,
              textContext: ctx,
              referenceContext: ctx,
            });
          }

          /* Decode `value` (at `position`) into a string. */
          function decodeRaw(value, position, options) {
            return entities(
              value,
              xtend(options, {
                position: normalize(position),
                warning: handleWarning,
              })
            );
          }
        }

        /***/
      },
      /* 246 */
      /***/ function(module, exports) {
        module.exports = {
          AEli: 'Æ',
          AElig: 'Æ',
          AM: '&',
          AMP: '&',
          Aacut: 'Á',
          Aacute: 'Á',
          Abreve: 'Ă',
          Acir: 'Â',
          Acirc: 'Â',
          Acy: 'А',
          Afr: '𝔄',
          Agrav: 'À',
          Agrave: 'À',
          Alpha: 'Α',
          Amacr: 'Ā',
          And: '⩓',
          Aogon: 'Ą',
          Aopf: '𝔸',
          ApplyFunction: '⁡',
          Arin: 'Å',
          Aring: 'Å',
          Ascr: '𝒜',
          Assign: '≔',
          Atild: 'Ã',
          Atilde: 'Ã',
          Aum: 'Ä',
          Auml: 'Ä',
          Backslash: '∖',
          Barv: '⫧',
          Barwed: '⌆',
          Bcy: 'Б',
          Because: '∵',
          Bernoullis: 'ℬ',
          Beta: 'Β',
          Bfr: '𝔅',
          Bopf: '𝔹',
          Breve: '˘',
          Bscr: 'ℬ',
          Bumpeq: '≎',
          CHcy: 'Ч',
          COP: '©',
          COPY: '©',
          Cacute: 'Ć',
          Cap: '⋒',
          CapitalDifferentialD: 'ⅅ',
          Cayleys: 'ℭ',
          Ccaron: 'Č',
          Ccedi: 'Ç',
          Ccedil: 'Ç',
          Ccirc: 'Ĉ',
          Cconint: '∰',
          Cdot: 'Ċ',
          Cedilla: '¸',
          CenterDot: '·',
          Cfr: 'ℭ',
          Chi: 'Χ',
          CircleDot: '⊙',
          CircleMinus: '⊖',
          CirclePlus: '⊕',
          CircleTimes: '⊗',
          ClockwiseContourIntegral: '∲',
          CloseCurlyDoubleQuote: '”',
          CloseCurlyQuote: '’',
          Colon: '∷',
          Colone: '⩴',
          Congruent: '≡',
          Conint: '∯',
          ContourIntegral: '∮',
          Copf: 'ℂ',
          Coproduct: '∐',
          CounterClockwiseContourIntegral: '∳',
          Cross: '⨯',
          Cscr: '𝒞',
          Cup: '⋓',
          CupCap: '≍',
          DD: 'ⅅ',
          DDotrahd: '⤑',
          DJcy: 'Ђ',
          DScy: 'Ѕ',
          DZcy: 'Џ',
          Dagger: '‡',
          Darr: '↡',
          Dashv: '⫤',
          Dcaron: 'Ď',
          Dcy: 'Д',
          Del: '∇',
          Delta: 'Δ',
          Dfr: '𝔇',
          DiacriticalAcute: '´',
          DiacriticalDot: '˙',
          DiacriticalDoubleAcute: '˝',
          DiacriticalGrave: '`',
          DiacriticalTilde: '˜',
          Diamond: '⋄',
          DifferentialD: 'ⅆ',
          Dopf: '𝔻',
          Dot: '¨',
          DotDot: '⃜',
          DotEqual: '≐',
          DoubleContourIntegral: '∯',
          DoubleDot: '¨',
          DoubleDownArrow: '⇓',
          DoubleLeftArrow: '⇐',
          DoubleLeftRightArrow: '⇔',
          DoubleLeftTee: '⫤',
          DoubleLongLeftArrow: '⟸',
          DoubleLongLeftRightArrow: '⟺',
          DoubleLongRightArrow: '⟹',
          DoubleRightArrow: '⇒',
          DoubleRightTee: '⊨',
          DoubleUpArrow: '⇑',
          DoubleUpDownArrow: '⇕',
          DoubleVerticalBar: '∥',
          DownArrow: '↓',
          DownArrowBar: '⤓',
          DownArrowUpArrow: '⇵',
          DownBreve: '̑',
          DownLeftRightVector: '⥐',
          DownLeftTeeVector: '⥞',
          DownLeftVector: '↽',
          DownLeftVectorBar: '⥖',
          DownRightTeeVector: '⥟',
          DownRightVector: '⇁',
          DownRightVectorBar: '⥗',
          DownTee: '⊤',
          DownTeeArrow: '↧',
          Downarrow: '⇓',
          Dscr: '𝒟',
          Dstrok: 'Đ',
          ENG: 'Ŋ',
          ET: 'Ð',
          ETH: 'Ð',
          Eacut: 'É',
          Eacute: 'É',
          Ecaron: 'Ě',
          Ecir: 'Ê',
          Ecirc: 'Ê',
          Ecy: 'Э',
          Edot: 'Ė',
          Efr: '𝔈',
          Egrav: 'È',
          Egrave: 'È',
          Element: '∈',
          Emacr: 'Ē',
          EmptySmallSquare: '◻',
          EmptyVerySmallSquare: '▫',
          Eogon: 'Ę',
          Eopf: '𝔼',
          Epsilon: 'Ε',
          Equal: '⩵',
          EqualTilde: '≂',
          Equilibrium: '⇌',
          Escr: 'ℰ',
          Esim: '⩳',
          Eta: 'Η',
          Eum: 'Ë',
          Euml: 'Ë',
          Exists: '∃',
          ExponentialE: 'ⅇ',
          Fcy: 'Ф',
          Ffr: '𝔉',
          FilledSmallSquare: '◼',
          FilledVerySmallSquare: '▪',
          Fopf: '𝔽',
          ForAll: '∀',
          Fouriertrf: 'ℱ',
          Fscr: 'ℱ',
          GJcy: 'Ѓ',
          G: '>',
          GT: '>',
          Gamma: 'Γ',
          Gammad: 'Ϝ',
          Gbreve: 'Ğ',
          Gcedil: 'Ģ',
          Gcirc: 'Ĝ',
          Gcy: 'Г',
          Gdot: 'Ġ',
          Gfr: '𝔊',
          Gg: '⋙',
          Gopf: '𝔾',
          GreaterEqual: '≥',
          GreaterEqualLess: '⋛',
          GreaterFullEqual: '≧',
          GreaterGreater: '⪢',
          GreaterLess: '≷',
          GreaterSlantEqual: '⩾',
          GreaterTilde: '≳',
          Gscr: '𝒢',
          Gt: '≫',
          HARDcy: 'Ъ',
          Hacek: 'ˇ',
          Hat: '^',
          Hcirc: 'Ĥ',
          Hfr: 'ℌ',
          HilbertSpace: 'ℋ',
          Hopf: 'ℍ',
          HorizontalLine: '─',
          Hscr: 'ℋ',
          Hstrok: 'Ħ',
          HumpDownHump: '≎',
          HumpEqual: '≏',
          IEcy: 'Е',
          IJlig: 'Ĳ',
          IOcy: 'Ё',
          Iacut: 'Í',
          Iacute: 'Í',
          Icir: 'Î',
          Icirc: 'Î',
          Icy: 'И',
          Idot: 'İ',
          Ifr: 'ℑ',
          Igrav: 'Ì',
          Igrave: 'Ì',
          Im: 'ℑ',
          Imacr: 'Ī',
          ImaginaryI: 'ⅈ',
          Implies: '⇒',
          Int: '∬',
          Integral: '∫',
          Intersection: '⋂',
          InvisibleComma: '⁣',
          InvisibleTimes: '⁢',
          Iogon: 'Į',
          Iopf: '𝕀',
          Iota: 'Ι',
          Iscr: 'ℐ',
          Itilde: 'Ĩ',
          Iukcy: 'І',
          Ium: 'Ï',
          Iuml: 'Ï',
          Jcirc: 'Ĵ',
          Jcy: 'Й',
          Jfr: '𝔍',
          Jopf: '𝕁',
          Jscr: '𝒥',
          Jsercy: 'Ј',
          Jukcy: 'Є',
          KHcy: 'Х',
          KJcy: 'Ќ',
          Kappa: 'Κ',
          Kcedil: 'Ķ',
          Kcy: 'К',
          Kfr: '𝔎',
          Kopf: '𝕂',
          Kscr: '𝒦',
          LJcy: 'Љ',
          L: '<',
          LT: '<',
          Lacute: 'Ĺ',
          Lambda: 'Λ',
          Lang: '⟪',
          Laplacetrf: 'ℒ',
          Larr: '↞',
          Lcaron: 'Ľ',
          Lcedil: 'Ļ',
          Lcy: 'Л',
          LeftAngleBracket: '⟨',
          LeftArrow: '←',
          LeftArrowBar: '⇤',
          LeftArrowRightArrow: '⇆',
          LeftCeiling: '⌈',
          LeftDoubleBracket: '⟦',
          LeftDownTeeVector: '⥡',
          LeftDownVector: '⇃',
          LeftDownVectorBar: '⥙',
          LeftFloor: '⌊',
          LeftRightArrow: '↔',
          LeftRightVector: '⥎',
          LeftTee: '⊣',
          LeftTeeArrow: '↤',
          LeftTeeVector: '⥚',
          LeftTriangle: '⊲',
          LeftTriangleBar: '⧏',
          LeftTriangleEqual: '⊴',
          LeftUpDownVector: '⥑',
          LeftUpTeeVector: '⥠',
          LeftUpVector: '↿',
          LeftUpVectorBar: '⥘',
          LeftVector: '↼',
          LeftVectorBar: '⥒',
          Leftarrow: '⇐',
          Leftrightarrow: '⇔',
          LessEqualGreater: '⋚',
          LessFullEqual: '≦',
          LessGreater: '≶',
          LessLess: '⪡',
          LessSlantEqual: '⩽',
          LessTilde: '≲',
          Lfr: '𝔏',
          Ll: '⋘',
          Lleftarrow: '⇚',
          Lmidot: 'Ŀ',
          LongLeftArrow: '⟵',
          LongLeftRightArrow: '⟷',
          LongRightArrow: '⟶',
          Longleftarrow: '⟸',
          Longleftrightarrow: '⟺',
          Longrightarrow: '⟹',
          Lopf: '𝕃',
          LowerLeftArrow: '↙',
          LowerRightArrow: '↘',
          Lscr: 'ℒ',
          Lsh: '↰',
          Lstrok: 'Ł',
          Lt: '≪',
          Map: '⤅',
          Mcy: 'М',
          MediumSpace: ' ',
          Mellintrf: 'ℳ',
          Mfr: '𝔐',
          MinusPlus: '∓',
          Mopf: '𝕄',
          Mscr: 'ℳ',
          Mu: 'Μ',
          NJcy: 'Њ',
          Nacute: 'Ń',
          Ncaron: 'Ň',
          Ncedil: 'Ņ',
          Ncy: 'Н',
          NegativeMediumSpace: '​',
          NegativeThickSpace: '​',
          NegativeThinSpace: '​',
          NegativeVeryThinSpace: '​',
          NestedGreaterGreater: '≫',
          NestedLessLess: '≪',
          NewLine: '\n',
          Nfr: '𝔑',
          NoBreak: '⁠',
          NonBreakingSpace: ' ',
          Nopf: 'ℕ',
          Not: '⫬',
          NotCongruent: '≢',
          NotCupCap: '≭',
          NotDoubleVerticalBar: '∦',
          NotElement: '∉',
          NotEqual: '≠',
          NotEqualTilde: '≂̸',
          NotExists: '∄',
          NotGreater: '≯',
          NotGreaterEqual: '≱',
          NotGreaterFullEqual: '≧̸',
          NotGreaterGreater: '≫̸',
          NotGreaterLess: '≹',
          NotGreaterSlantEqual: '⩾̸',
          NotGreaterTilde: '≵',
          NotHumpDownHump: '≎̸',
          NotHumpEqual: '≏̸',
          NotLeftTriangle: '⋪',
          NotLeftTriangleBar: '⧏̸',
          NotLeftTriangleEqual: '⋬',
          NotLess: '≮',
          NotLessEqual: '≰',
          NotLessGreater: '≸',
          NotLessLess: '≪̸',
          NotLessSlantEqual: '⩽̸',
          NotLessTilde: '≴',
          NotNestedGreaterGreater: '⪢̸',
          NotNestedLessLess: '⪡̸',
          NotPrecedes: '⊀',
          NotPrecedesEqual: '⪯̸',
          NotPrecedesSlantEqual: '⋠',
          NotReverseElement: '∌',
          NotRightTriangle: '⋫',
          NotRightTriangleBar: '⧐̸',
          NotRightTriangleEqual: '⋭',
          NotSquareSubset: '⊏̸',
          NotSquareSubsetEqual: '⋢',
          NotSquareSuperset: '⊐̸',
          NotSquareSupersetEqual: '⋣',
          NotSubset: '⊂⃒',
          NotSubsetEqual: '⊈',
          NotSucceeds: '⊁',
          NotSucceedsEqual: '⪰̸',
          NotSucceedsSlantEqual: '⋡',
          NotSucceedsTilde: '≿̸',
          NotSuperset: '⊃⃒',
          NotSupersetEqual: '⊉',
          NotTilde: '≁',
          NotTildeEqual: '≄',
          NotTildeFullEqual: '≇',
          NotTildeTilde: '≉',
          NotVerticalBar: '∤',
          Nscr: '𝒩',
          Ntild: 'Ñ',
          Ntilde: 'Ñ',
          Nu: 'Ν',
          OElig: 'Œ',
          Oacut: 'Ó',
          Oacute: 'Ó',
          Ocir: 'Ô',
          Ocirc: 'Ô',
          Ocy: 'О',
          Odblac: 'Ő',
          Ofr: '𝔒',
          Ograv: 'Ò',
          Ograve: 'Ò',
          Omacr: 'Ō',
          Omega: 'Ω',
          Omicron: 'Ο',
          Oopf: '𝕆',
          OpenCurlyDoubleQuote: '“',
          OpenCurlyQuote: '‘',
          Or: '⩔',
          Oscr: '𝒪',
          Oslas: 'Ø',
          Oslash: 'Ø',
          Otild: 'Õ',
          Otilde: 'Õ',
          Otimes: '⨷',
          Oum: 'Ö',
          Ouml: 'Ö',
          OverBar: '‾',
          OverBrace: '⏞',
          OverBracket: '⎴',
          OverParenthesis: '⏜',
          PartialD: '∂',
          Pcy: 'П',
          Pfr: '𝔓',
          Phi: 'Φ',
          Pi: 'Π',
          PlusMinus: '±',
          Poincareplane: 'ℌ',
          Popf: 'ℙ',
          Pr: '⪻',
          Precedes: '≺',
          PrecedesEqual: '⪯',
          PrecedesSlantEqual: '≼',
          PrecedesTilde: '≾',
          Prime: '″',
          Product: '∏',
          Proportion: '∷',
          Proportional: '∝',
          Pscr: '𝒫',
          Psi: 'Ψ',
          QUO: '"',
          QUOT: '"',
          Qfr: '𝔔',
          Qopf: 'ℚ',
          Qscr: '𝒬',
          RBarr: '⤐',
          RE: '®',
          REG: '®',
          Racute: 'Ŕ',
          Rang: '⟫',
          Rarr: '↠',
          Rarrtl: '⤖',
          Rcaron: 'Ř',
          Rcedil: 'Ŗ',
          Rcy: 'Р',
          Re: 'ℜ',
          ReverseElement: '∋',
          ReverseEquilibrium: '⇋',
          ReverseUpEquilibrium: '⥯',
          Rfr: 'ℜ',
          Rho: 'Ρ',
          RightAngleBracket: '⟩',
          RightArrow: '→',
          RightArrowBar: '⇥',
          RightArrowLeftArrow: '⇄',
          RightCeiling: '⌉',
          RightDoubleBracket: '⟧',
          RightDownTeeVector: '⥝',
          RightDownVector: '⇂',
          RightDownVectorBar: '⥕',
          RightFloor: '⌋',
          RightTee: '⊢',
          RightTeeArrow: '↦',
          RightTeeVector: '⥛',
          RightTriangle: '⊳',
          RightTriangleBar: '⧐',
          RightTriangleEqual: '⊵',
          RightUpDownVector: '⥏',
          RightUpTeeVector: '⥜',
          RightUpVector: '↾',
          RightUpVectorBar: '⥔',
          RightVector: '⇀',
          RightVectorBar: '⥓',
          Rightarrow: '⇒',
          Ropf: 'ℝ',
          RoundImplies: '⥰',
          Rrightarrow: '⇛',
          Rscr: 'ℛ',
          Rsh: '↱',
          RuleDelayed: '⧴',
          SHCHcy: 'Щ',
          SHcy: 'Ш',
          SOFTcy: 'Ь',
          Sacute: 'Ś',
          Sc: '⪼',
          Scaron: 'Š',
          Scedil: 'Ş',
          Scirc: 'Ŝ',
          Scy: 'С',
          Sfr: '𝔖',
          ShortDownArrow: '↓',
          ShortLeftArrow: '←',
          ShortRightArrow: '→',
          ShortUpArrow: '↑',
          Sigma: 'Σ',
          SmallCircle: '∘',
          Sopf: '𝕊',
          Sqrt: '√',
          Square: '□',
          SquareIntersection: '⊓',
          SquareSubset: '⊏',
          SquareSubsetEqual: '⊑',
          SquareSuperset: '⊐',
          SquareSupersetEqual: '⊒',
          SquareUnion: '⊔',
          Sscr: '𝒮',
          Star: '⋆',
          Sub: '⋐',
          Subset: '⋐',
          SubsetEqual: '⊆',
          Succeeds: '≻',
          SucceedsEqual: '⪰',
          SucceedsSlantEqual: '≽',
          SucceedsTilde: '≿',
          SuchThat: '∋',
          Sum: '∑',
          Sup: '⋑',
          Superset: '⊃',
          SupersetEqual: '⊇',
          Supset: '⋑',
          THOR: 'Þ',
          THORN: 'Þ',
          TRADE: '™',
          TSHcy: 'Ћ',
          TScy: 'Ц',
          Tab: '\t',
          Tau: 'Τ',
          Tcaron: 'Ť',
          Tcedil: 'Ţ',
          Tcy: 'Т',
          Tfr: '𝔗',
          Therefore: '∴',
          Theta: 'Θ',
          ThickSpace: '  ',
          ThinSpace: ' ',
          Tilde: '∼',
          TildeEqual: '≃',
          TildeFullEqual: '≅',
          TildeTilde: '≈',
          Topf: '𝕋',
          TripleDot: '⃛',
          Tscr: '𝒯',
          Tstrok: 'Ŧ',
          Uacut: 'Ú',
          Uacute: 'Ú',
          Uarr: '↟',
          Uarrocir: '⥉',
          Ubrcy: 'Ў',
          Ubreve: 'Ŭ',
          Ucir: 'Û',
          Ucirc: 'Û',
          Ucy: 'У',
          Udblac: 'Ű',
          Ufr: '𝔘',
          Ugrav: 'Ù',
          Ugrave: 'Ù',
          Umacr: 'Ū',
          UnderBar: '_',
          UnderBrace: '⏟',
          UnderBracket: '⎵',
          UnderParenthesis: '⏝',
          Union: '⋃',
          UnionPlus: '⊎',
          Uogon: 'Ų',
          Uopf: '𝕌',
          UpArrow: '↑',
          UpArrowBar: '⤒',
          UpArrowDownArrow: '⇅',
          UpDownArrow: '↕',
          UpEquilibrium: '⥮',
          UpTee: '⊥',
          UpTeeArrow: '↥',
          Uparrow: '⇑',
          Updownarrow: '⇕',
          UpperLeftArrow: '↖',
          UpperRightArrow: '↗',
          Upsi: 'ϒ',
          Upsilon: 'Υ',
          Uring: 'Ů',
          Uscr: '𝒰',
          Utilde: 'Ũ',
          Uum: 'Ü',
          Uuml: 'Ü',
          VDash: '⊫',
          Vbar: '⫫',
          Vcy: 'В',
          Vdash: '⊩',
          Vdashl: '⫦',
          Vee: '⋁',
          Verbar: '‖',
          Vert: '‖',
          VerticalBar: '∣',
          VerticalLine: '|',
          VerticalSeparator: '❘',
          VerticalTilde: '≀',
          VeryThinSpace: ' ',
          Vfr: '𝔙',
          Vopf: '𝕍',
          Vscr: '𝒱',
          Vvdash: '⊪',
          Wcirc: 'Ŵ',
          Wedge: '⋀',
          Wfr: '𝔚',
          Wopf: '𝕎',
          Wscr: '𝒲',
          Xfr: '𝔛',
          Xi: 'Ξ',
          Xopf: '𝕏',
          Xscr: '𝒳',
          YAcy: 'Я',
          YIcy: 'Ї',
          YUcy: 'Ю',
          Yacut: 'Ý',
          Yacute: 'Ý',
          Ycirc: 'Ŷ',
          Ycy: 'Ы',
          Yfr: '𝔜',
          Yopf: '𝕐',
          Yscr: '𝒴',
          Yuml: 'Ÿ',
          ZHcy: 'Ж',
          Zacute: 'Ź',
          Zcaron: 'Ž',
          Zcy: 'З',
          Zdot: 'Ż',
          ZeroWidthSpace: '​',
          Zeta: 'Ζ',
          Zfr: 'ℨ',
          Zopf: 'ℤ',
          Zscr: '𝒵',
          aacut: 'á',
          aacute: 'á',
          abreve: 'ă',
          ac: '∾',
          acE: '∾̳',
          acd: '∿',
          acir: 'â',
          acirc: 'â',
          acut: '´',
          acute: '´',
          acy: 'а',
          aeli: 'æ',
          aelig: 'æ',
          af: '⁡',
          afr: '𝔞',
          agrav: 'à',
          agrave: 'à',
          alefsym: 'ℵ',
          aleph: 'ℵ',
          alpha: 'α',
          amacr: 'ā',
          amalg: '⨿',
          am: '&',
          amp: '&',
          and: '∧',
          andand: '⩕',
          andd: '⩜',
          andslope: '⩘',
          andv: '⩚',
          ang: '∠',
          ange: '⦤',
          angle: '∠',
          angmsd: '∡',
          angmsdaa: '⦨',
          angmsdab: '⦩',
          angmsdac: '⦪',
          angmsdad: '⦫',
          angmsdae: '⦬',
          angmsdaf: '⦭',
          angmsdag: '⦮',
          angmsdah: '⦯',
          angrt: '∟',
          angrtvb: '⊾',
          angrtvbd: '⦝',
          angsph: '∢',
          angst: 'Å',
          angzarr: '⍼',
          aogon: 'ą',
          aopf: '𝕒',
          ap: '≈',
          apE: '⩰',
          apacir: '⩯',
          ape: '≊',
          apid: '≋',
          apos: "'",
          approx: '≈',
          approxeq: '≊',
          arin: 'å',
          aring: 'å',
          ascr: '𝒶',
          ast: '*',
          asymp: '≈',
          asympeq: '≍',
          atild: 'ã',
          atilde: 'ã',
          aum: 'ä',
          auml: 'ä',
          awconint: '∳',
          awint: '⨑',
          bNot: '⫭',
          backcong: '≌',
          backepsilon: '϶',
          backprime: '‵',
          backsim: '∽',
          backsimeq: '⋍',
          barvee: '⊽',
          barwed: '⌅',
          barwedge: '⌅',
          bbrk: '⎵',
          bbrktbrk: '⎶',
          bcong: '≌',
          bcy: 'б',
          bdquo: '„',
          becaus: '∵',
          because: '∵',
          bemptyv: '⦰',
          bepsi: '϶',
          bernou: 'ℬ',
          beta: 'β',
          beth: 'ℶ',
          between: '≬',
          bfr: '𝔟',
          bigcap: '⋂',
          bigcirc: '◯',
          bigcup: '⋃',
          bigodot: '⨀',
          bigoplus: '⨁',
          bigotimes: '⨂',
          bigsqcup: '⨆',
          bigstar: '★',
          bigtriangledown: '▽',
          bigtriangleup: '△',
          biguplus: '⨄',
          bigvee: '⋁',
          bigwedge: '⋀',
          bkarow: '⤍',
          blacklozenge: '⧫',
          blacksquare: '▪',
          blacktriangle: '▴',
          blacktriangledown: '▾',
          blacktriangleleft: '◂',
          blacktriangleright: '▸',
          blank: '␣',
          blk12: '▒',
          blk14: '░',
          blk34: '▓',
          block: '█',
          bne: '=⃥',
          bnequiv: '≡⃥',
          bnot: '⌐',
          bopf: '𝕓',
          bot: '⊥',
          bottom: '⊥',
          bowtie: '⋈',
          boxDL: '╗',
          boxDR: '╔',
          boxDl: '╖',
          boxDr: '╓',
          boxH: '═',
          boxHD: '╦',
          boxHU: '╩',
          boxHd: '╤',
          boxHu: '╧',
          boxUL: '╝',
          boxUR: '╚',
          boxUl: '╜',
          boxUr: '╙',
          boxV: '║',
          boxVH: '╬',
          boxVL: '╣',
          boxVR: '╠',
          boxVh: '╫',
          boxVl: '╢',
          boxVr: '╟',
          boxbox: '⧉',
          boxdL: '╕',
          boxdR: '╒',
          boxdl: '┐',
          boxdr: '┌',
          boxh: '─',
          boxhD: '╥',
          boxhU: '╨',
          boxhd: '┬',
          boxhu: '┴',
          boxminus: '⊟',
          boxplus: '⊞',
          boxtimes: '⊠',
          boxuL: '╛',
          boxuR: '╘',
          boxul: '┘',
          boxur: '└',
          boxv: '│',
          boxvH: '╪',
          boxvL: '╡',
          boxvR: '╞',
          boxvh: '┼',
          boxvl: '┤',
          boxvr: '├',
          bprime: '‵',
          breve: '˘',
          brvba: '¦',
          brvbar: '¦',
          bscr: '𝒷',
          bsemi: '⁏',
          bsim: '∽',
          bsime: '⋍',
          bsol: '\\',
          bsolb: '⧅',
          bsolhsub: '⟈',
          bull: '•',
          bullet: '•',
          bump: '≎',
          bumpE: '⪮',
          bumpe: '≏',
          bumpeq: '≏',
          cacute: 'ć',
          cap: '∩',
          capand: '⩄',
          capbrcup: '⩉',
          capcap: '⩋',
          capcup: '⩇',
          capdot: '⩀',
          caps: '∩︀',
          caret: '⁁',
          caron: 'ˇ',
          ccaps: '⩍',
          ccaron: 'č',
          ccedi: 'ç',
          ccedil: 'ç',
          ccirc: 'ĉ',
          ccups: '⩌',
          ccupssm: '⩐',
          cdot: 'ċ',
          cedi: '¸',
          cedil: '¸',
          cemptyv: '⦲',
          cen: '¢',
          cent: '¢',
          centerdot: '·',
          cfr: '𝔠',
          chcy: 'ч',
          check: '✓',
          checkmark: '✓',
          chi: 'χ',
          cir: '○',
          cirE: '⧃',
          circ: 'ˆ',
          circeq: '≗',
          circlearrowleft: '↺',
          circlearrowright: '↻',
          circledR: '®',
          circledS: 'Ⓢ',
          circledast: '⊛',
          circledcirc: '⊚',
          circleddash: '⊝',
          cire: '≗',
          cirfnint: '⨐',
          cirmid: '⫯',
          cirscir: '⧂',
          clubs: '♣',
          clubsuit: '♣',
          colon: ':',
          colone: '≔',
          coloneq: '≔',
          comma: ',',
          commat: '@',
          comp: '∁',
          compfn: '∘',
          complement: '∁',
          complexes: 'ℂ',
          cong: '≅',
          congdot: '⩭',
          conint: '∮',
          copf: '𝕔',
          coprod: '∐',
          cop: '©',
          copy: '©',
          copysr: '℗',
          crarr: '↵',
          cross: '✗',
          cscr: '𝒸',
          csub: '⫏',
          csube: '⫑',
          csup: '⫐',
          csupe: '⫒',
          ctdot: '⋯',
          cudarrl: '⤸',
          cudarrr: '⤵',
          cuepr: '⋞',
          cuesc: '⋟',
          cularr: '↶',
          cularrp: '⤽',
          cup: '∪',
          cupbrcap: '⩈',
          cupcap: '⩆',
          cupcup: '⩊',
          cupdot: '⊍',
          cupor: '⩅',
          cups: '∪︀',
          curarr: '↷',
          curarrm: '⤼',
          curlyeqprec: '⋞',
          curlyeqsucc: '⋟',
          curlyvee: '⋎',
          curlywedge: '⋏',
          curre: '¤',
          curren: '¤',
          curvearrowleft: '↶',
          curvearrowright: '↷',
          cuvee: '⋎',
          cuwed: '⋏',
          cwconint: '∲',
          cwint: '∱',
          cylcty: '⌭',
          dArr: '⇓',
          dHar: '⥥',
          dagger: '†',
          daleth: 'ℸ',
          darr: '↓',
          dash: '‐',
          dashv: '⊣',
          dbkarow: '⤏',
          dblac: '˝',
          dcaron: 'ď',
          dcy: 'д',
          dd: 'ⅆ',
          ddagger: '‡',
          ddarr: '⇊',
          ddotseq: '⩷',
          de: '°',
          deg: '°',
          delta: 'δ',
          demptyv: '⦱',
          dfisht: '⥿',
          dfr: '𝔡',
          dharl: '⇃',
          dharr: '⇂',
          diam: '⋄',
          diamond: '⋄',
          diamondsuit: '♦',
          diams: '♦',
          die: '¨',
          digamma: 'ϝ',
          disin: '⋲',
          div: '÷',
          divid: '÷',
          divide: '÷',
          divideontimes: '⋇',
          divonx: '⋇',
          djcy: 'ђ',
          dlcorn: '⌞',
          dlcrop: '⌍',
          dollar: '$',
          dopf: '𝕕',
          dot: '˙',
          doteq: '≐',
          doteqdot: '≑',
          dotminus: '∸',
          dotplus: '∔',
          dotsquare: '⊡',
          doublebarwedge: '⌆',
          downarrow: '↓',
          downdownarrows: '⇊',
          downharpoonleft: '⇃',
          downharpoonright: '⇂',
          drbkarow: '⤐',
          drcorn: '⌟',
          drcrop: '⌌',
          dscr: '𝒹',
          dscy: 'ѕ',
          dsol: '⧶',
          dstrok: 'đ',
          dtdot: '⋱',
          dtri: '▿',
          dtrif: '▾',
          duarr: '⇵',
          duhar: '⥯',
          dwangle: '⦦',
          dzcy: 'џ',
          dzigrarr: '⟿',
          eDDot: '⩷',
          eDot: '≑',
          eacut: 'é',
          eacute: 'é',
          easter: '⩮',
          ecaron: 'ě',
          ecir: 'ê',
          ecirc: 'ê',
          ecolon: '≕',
          ecy: 'э',
          edot: 'ė',
          ee: 'ⅇ',
          efDot: '≒',
          efr: '𝔢',
          eg: '⪚',
          egrav: 'è',
          egrave: 'è',
          egs: '⪖',
          egsdot: '⪘',
          el: '⪙',
          elinters: '⏧',
          ell: 'ℓ',
          els: '⪕',
          elsdot: '⪗',
          emacr: 'ē',
          empty: '∅',
          emptyset: '∅',
          emptyv: '∅',
          emsp13: ' ',
          emsp14: ' ',
          emsp: ' ',
          eng: 'ŋ',
          ensp: ' ',
          eogon: 'ę',
          eopf: '𝕖',
          epar: '⋕',
          eparsl: '⧣',
          eplus: '⩱',
          epsi: 'ε',
          epsilon: 'ε',
          epsiv: 'ϵ',
          eqcirc: '≖',
          eqcolon: '≕',
          eqsim: '≂',
          eqslantgtr: '⪖',
          eqslantless: '⪕',
          equals: '=',
          equest: '≟',
          equiv: '≡',
          equivDD: '⩸',
          eqvparsl: '⧥',
          erDot: '≓',
          erarr: '⥱',
          escr: 'ℯ',
          esdot: '≐',
          esim: '≂',
          eta: 'η',
          et: 'ð',
          eth: 'ð',
          eum: 'ë',
          euml: 'ë',
          euro: '€',
          excl: '!',
          exist: '∃',
          expectation: 'ℰ',
          exponentiale: 'ⅇ',
          fallingdotseq: '≒',
          fcy: 'ф',
          female: '♀',
          ffilig: 'ﬃ',
          fflig: 'ﬀ',
          ffllig: 'ﬄ',
          ffr: '𝔣',
          filig: 'ﬁ',
          fjlig: 'fj',
          flat: '♭',
          fllig: 'ﬂ',
          fltns: '▱',
          fnof: 'ƒ',
          fopf: '𝕗',
          forall: '∀',
          fork: '⋔',
          forkv: '⫙',
          fpartint: '⨍',
          frac1: '¼',
          frac12: '½',
          frac13: '⅓',
          frac14: '¼',
          frac15: '⅕',
          frac16: '⅙',
          frac18: '⅛',
          frac23: '⅔',
          frac25: '⅖',
          frac3: '¾',
          frac34: '¾',
          frac35: '⅗',
          frac38: '⅜',
          frac45: '⅘',
          frac56: '⅚',
          frac58: '⅝',
          frac78: '⅞',
          frasl: '⁄',
          frown: '⌢',
          fscr: '𝒻',
          gE: '≧',
          gEl: '⪌',
          gacute: 'ǵ',
          gamma: 'γ',
          gammad: 'ϝ',
          gap: '⪆',
          gbreve: 'ğ',
          gcirc: 'ĝ',
          gcy: 'г',
          gdot: 'ġ',
          ge: '≥',
          gel: '⋛',
          geq: '≥',
          geqq: '≧',
          geqslant: '⩾',
          ges: '⩾',
          gescc: '⪩',
          gesdot: '⪀',
          gesdoto: '⪂',
          gesdotol: '⪄',
          gesl: '⋛︀',
          gesles: '⪔',
          gfr: '𝔤',
          gg: '≫',
          ggg: '⋙',
          gimel: 'ℷ',
          gjcy: 'ѓ',
          gl: '≷',
          glE: '⪒',
          gla: '⪥',
          glj: '⪤',
          gnE: '≩',
          gnap: '⪊',
          gnapprox: '⪊',
          gne: '⪈',
          gneq: '⪈',
          gneqq: '≩',
          gnsim: '⋧',
          gopf: '𝕘',
          grave: '`',
          gscr: 'ℊ',
          gsim: '≳',
          gsime: '⪎',
          gsiml: '⪐',
          g: '>',
          gt: '>',
          gtcc: '⪧',
          gtcir: '⩺',
          gtdot: '⋗',
          gtlPar: '⦕',
          gtquest: '⩼',
          gtrapprox: '⪆',
          gtrarr: '⥸',
          gtrdot: '⋗',
          gtreqless: '⋛',
          gtreqqless: '⪌',
          gtrless: '≷',
          gtrsim: '≳',
          gvertneqq: '≩︀',
          gvnE: '≩︀',
          hArr: '⇔',
          hairsp: ' ',
          half: '½',
          hamilt: 'ℋ',
          hardcy: 'ъ',
          harr: '↔',
          harrcir: '⥈',
          harrw: '↭',
          hbar: 'ℏ',
          hcirc: 'ĥ',
          hearts: '♥',
          heartsuit: '♥',
          hellip: '…',
          hercon: '⊹',
          hfr: '𝔥',
          hksearow: '⤥',
          hkswarow: '⤦',
          hoarr: '⇿',
          homtht: '∻',
          hookleftarrow: '↩',
          hookrightarrow: '↪',
          hopf: '𝕙',
          horbar: '―',
          hscr: '𝒽',
          hslash: 'ℏ',
          hstrok: 'ħ',
          hybull: '⁃',
          hyphen: '‐',
          iacut: 'í',
          iacute: 'í',
          ic: '⁣',
          icir: 'î',
          icirc: 'î',
          icy: 'и',
          iecy: 'е',
          iexc: '¡',
          iexcl: '¡',
          iff: '⇔',
          ifr: '𝔦',
          igrav: 'ì',
          igrave: 'ì',
          ii: 'ⅈ',
          iiiint: '⨌',
          iiint: '∭',
          iinfin: '⧜',
          iiota: '℩',
          ijlig: 'ĳ',
          imacr: 'ī',
          image: 'ℑ',
          imagline: 'ℐ',
          imagpart: 'ℑ',
          imath: 'ı',
          imof: '⊷',
          imped: 'Ƶ',
          in: '∈',
          incare: '℅',
          infin: '∞',
          infintie: '⧝',
          inodot: 'ı',
          int: '∫',
          intcal: '⊺',
          integers: 'ℤ',
          intercal: '⊺',
          intlarhk: '⨗',
          intprod: '⨼',
          iocy: 'ё',
          iogon: 'į',
          iopf: '𝕚',
          iota: 'ι',
          iprod: '⨼',
          iques: '¿',
          iquest: '¿',
          iscr: '𝒾',
          isin: '∈',
          isinE: '⋹',
          isindot: '⋵',
          isins: '⋴',
          isinsv: '⋳',
          isinv: '∈',
          it: '⁢',
          itilde: 'ĩ',
          iukcy: 'і',
          ium: 'ï',
          iuml: 'ï',
          jcirc: 'ĵ',
          jcy: 'й',
          jfr: '𝔧',
          jmath: 'ȷ',
          jopf: '𝕛',
          jscr: '𝒿',
          jsercy: 'ј',
          jukcy: 'є',
          kappa: 'κ',
          kappav: 'ϰ',
          kcedil: 'ķ',
          kcy: 'к',
          kfr: '𝔨',
          kgreen: 'ĸ',
          khcy: 'х',
          kjcy: 'ќ',
          kopf: '𝕜',
          kscr: '𝓀',
          lAarr: '⇚',
          lArr: '⇐',
          lAtail: '⤛',
          lBarr: '⤎',
          lE: '≦',
          lEg: '⪋',
          lHar: '⥢',
          lacute: 'ĺ',
          laemptyv: '⦴',
          lagran: 'ℒ',
          lambda: 'λ',
          lang: '⟨',
          langd: '⦑',
          langle: '⟨',
          lap: '⪅',
          laqu: '«',
          laquo: '«',
          larr: '←',
          larrb: '⇤',
          larrbfs: '⤟',
          larrfs: '⤝',
          larrhk: '↩',
          larrlp: '↫',
          larrpl: '⤹',
          larrsim: '⥳',
          larrtl: '↢',
          lat: '⪫',
          latail: '⤙',
          late: '⪭',
          lates: '⪭︀',
          lbarr: '⤌',
          lbbrk: '❲',
          lbrace: '{',
          lbrack: '[',
          lbrke: '⦋',
          lbrksld: '⦏',
          lbrkslu: '⦍',
          lcaron: 'ľ',
          lcedil: 'ļ',
          lceil: '⌈',
          lcub: '{',
          lcy: 'л',
          ldca: '⤶',
          ldquo: '“',
          ldquor: '„',
          ldrdhar: '⥧',
          ldrushar: '⥋',
          ldsh: '↲',
          le: '≤',
          leftarrow: '←',
          leftarrowtail: '↢',
          leftharpoondown: '↽',
          leftharpoonup: '↼',
          leftleftarrows: '⇇',
          leftrightarrow: '↔',
          leftrightarrows: '⇆',
          leftrightharpoons: '⇋',
          leftrightsquigarrow: '↭',
          leftthreetimes: '⋋',
          leg: '⋚',
          leq: '≤',
          leqq: '≦',
          leqslant: '⩽',
          les: '⩽',
          lescc: '⪨',
          lesdot: '⩿',
          lesdoto: '⪁',
          lesdotor: '⪃',
          lesg: '⋚︀',
          lesges: '⪓',
          lessapprox: '⪅',
          lessdot: '⋖',
          lesseqgtr: '⋚',
          lesseqqgtr: '⪋',
          lessgtr: '≶',
          lesssim: '≲',
          lfisht: '⥼',
          lfloor: '⌊',
          lfr: '𝔩',
          lg: '≶',
          lgE: '⪑',
          lhard: '↽',
          lharu: '↼',
          lharul: '⥪',
          lhblk: '▄',
          ljcy: 'љ',
          ll: '≪',
          llarr: '⇇',
          llcorner: '⌞',
          llhard: '⥫',
          lltri: '◺',
          lmidot: 'ŀ',
          lmoust: '⎰',
          lmoustache: '⎰',
          lnE: '≨',
          lnap: '⪉',
          lnapprox: '⪉',
          lne: '⪇',
          lneq: '⪇',
          lneqq: '≨',
          lnsim: '⋦',
          loang: '⟬',
          loarr: '⇽',
          lobrk: '⟦',
          longleftarrow: '⟵',
          longleftrightarrow: '⟷',
          longmapsto: '⟼',
          longrightarrow: '⟶',
          looparrowleft: '↫',
          looparrowright: '↬',
          lopar: '⦅',
          lopf: '𝕝',
          loplus: '⨭',
          lotimes: '⨴',
          lowast: '∗',
          lowbar: '_',
          loz: '◊',
          lozenge: '◊',
          lozf: '⧫',
          lpar: '(',
          lparlt: '⦓',
          lrarr: '⇆',
          lrcorner: '⌟',
          lrhar: '⇋',
          lrhard: '⥭',
          lrm: '‎',
          lrtri: '⊿',
          lsaquo: '‹',
          lscr: '𝓁',
          lsh: '↰',
          lsim: '≲',
          lsime: '⪍',
          lsimg: '⪏',
          lsqb: '[',
          lsquo: '‘',
          lsquor: '‚',
          lstrok: 'ł',
          l: '<',
          lt: '<',
          ltcc: '⪦',
          ltcir: '⩹',
          ltdot: '⋖',
          lthree: '⋋',
          ltimes: '⋉',
          ltlarr: '⥶',
          ltquest: '⩻',
          ltrPar: '⦖',
          ltri: '◃',
          ltrie: '⊴',
          ltrif: '◂',
          lurdshar: '⥊',
          luruhar: '⥦',
          lvertneqq: '≨︀',
          lvnE: '≨︀',
          mDDot: '∺',
          mac: '¯',
          macr: '¯',
          male: '♂',
          malt: '✠',
          maltese: '✠',
          map: '↦',
          mapsto: '↦',
          mapstodown: '↧',
          mapstoleft: '↤',
          mapstoup: '↥',
          marker: '▮',
          mcomma: '⨩',
          mcy: 'м',
          mdash: '—',
          measuredangle: '∡',
          mfr: '𝔪',
          mho: '℧',
          micr: 'µ',
          micro: 'µ',
          mid: '∣',
          midast: '*',
          midcir: '⫰',
          middo: '·',
          middot: '·',
          minus: '−',
          minusb: '⊟',
          minusd: '∸',
          minusdu: '⨪',
          mlcp: '⫛',
          mldr: '…',
          mnplus: '∓',
          models: '⊧',
          mopf: '𝕞',
          mp: '∓',
          mscr: '𝓂',
          mstpos: '∾',
          mu: 'μ',
          multimap: '⊸',
          mumap: '⊸',
          nGg: '⋙̸',
          nGt: '≫⃒',
          nGtv: '≫̸',
          nLeftarrow: '⇍',
          nLeftrightarrow: '⇎',
          nLl: '⋘̸',
          nLt: '≪⃒',
          nLtv: '≪̸',
          nRightarrow: '⇏',
          nVDash: '⊯',
          nVdash: '⊮',
          nabla: '∇',
          nacute: 'ń',
          nang: '∠⃒',
          nap: '≉',
          napE: '⩰̸',
          napid: '≋̸',
          napos: 'ŉ',
          napprox: '≉',
          natur: '♮',
          natural: '♮',
          naturals: 'ℕ',
          nbs: ' ',
          nbsp: ' ',
          nbump: '≎̸',
          nbumpe: '≏̸',
          ncap: '⩃',
          ncaron: 'ň',
          ncedil: 'ņ',
          ncong: '≇',
          ncongdot: '⩭̸',
          ncup: '⩂',
          ncy: 'н',
          ndash: '–',
          ne: '≠',
          neArr: '⇗',
          nearhk: '⤤',
          nearr: '↗',
          nearrow: '↗',
          nedot: '≐̸',
          nequiv: '≢',
          nesear: '⤨',
          nesim: '≂̸',
          nexist: '∄',
          nexists: '∄',
          nfr: '𝔫',
          ngE: '≧̸',
          nge: '≱',
          ngeq: '≱',
          ngeqq: '≧̸',
          ngeqslant: '⩾̸',
          nges: '⩾̸',
          ngsim: '≵',
          ngt: '≯',
          ngtr: '≯',
          nhArr: '⇎',
          nharr: '↮',
          nhpar: '⫲',
          ni: '∋',
          nis: '⋼',
          nisd: '⋺',
          niv: '∋',
          njcy: 'њ',
          nlArr: '⇍',
          nlE: '≦̸',
          nlarr: '↚',
          nldr: '‥',
          nle: '≰',
          nleftarrow: '↚',
          nleftrightarrow: '↮',
          nleq: '≰',
          nleqq: '≦̸',
          nleqslant: '⩽̸',
          nles: '⩽̸',
          nless: '≮',
          nlsim: '≴',
          nlt: '≮',
          nltri: '⋪',
          nltrie: '⋬',
          nmid: '∤',
          nopf: '𝕟',
          no: '¬',
          not: '¬',
          notin: '∉',
          notinE: '⋹̸',
          notindot: '⋵̸',
          notinva: '∉',
          notinvb: '⋷',
          notinvc: '⋶',
          notni: '∌',
          notniva: '∌',
          notnivb: '⋾',
          notnivc: '⋽',
          npar: '∦',
          nparallel: '∦',
          nparsl: '⫽⃥',
          npart: '∂̸',
          npolint: '⨔',
          npr: '⊀',
          nprcue: '⋠',
          npre: '⪯̸',
          nprec: '⊀',
          npreceq: '⪯̸',
          nrArr: '⇏',
          nrarr: '↛',
          nrarrc: '⤳̸',
          nrarrw: '↝̸',
          nrightarrow: '↛',
          nrtri: '⋫',
          nrtrie: '⋭',
          nsc: '⊁',
          nsccue: '⋡',
          nsce: '⪰̸',
          nscr: '𝓃',
          nshortmid: '∤',
          nshortparallel: '∦',
          nsim: '≁',
          nsime: '≄',
          nsimeq: '≄',
          nsmid: '∤',
          nspar: '∦',
          nsqsube: '⋢',
          nsqsupe: '⋣',
          nsub: '⊄',
          nsubE: '⫅̸',
          nsube: '⊈',
          nsubset: '⊂⃒',
          nsubseteq: '⊈',
          nsubseteqq: '⫅̸',
          nsucc: '⊁',
          nsucceq: '⪰̸',
          nsup: '⊅',
          nsupE: '⫆̸',
          nsupe: '⊉',
          nsupset: '⊃⃒',
          nsupseteq: '⊉',
          nsupseteqq: '⫆̸',
          ntgl: '≹',
          ntild: 'ñ',
          ntilde: 'ñ',
          ntlg: '≸',
          ntriangleleft: '⋪',
          ntrianglelefteq: '⋬',
          ntriangleright: '⋫',
          ntrianglerighteq: '⋭',
          nu: 'ν',
          num: '#',
          numero: '№',
          numsp: ' ',
          nvDash: '⊭',
          nvHarr: '⤄',
          nvap: '≍⃒',
          nvdash: '⊬',
          nvge: '≥⃒',
          nvgt: '>⃒',
          nvinfin: '⧞',
          nvlArr: '⤂',
          nvle: '≤⃒',
          nvlt: '<⃒',
          nvltrie: '⊴⃒',
          nvrArr: '⤃',
          nvrtrie: '⊵⃒',
          nvsim: '∼⃒',
          nwArr: '⇖',
          nwarhk: '⤣',
          nwarr: '↖',
          nwarrow: '↖',
          nwnear: '⤧',
          oS: 'Ⓢ',
          oacut: 'ó',
          oacute: 'ó',
          oast: '⊛',
          ocir: 'ô',
          ocirc: 'ô',
          ocy: 'о',
          odash: '⊝',
          odblac: 'ő',
          odiv: '⨸',
          odot: '⊙',
          odsold: '⦼',
          oelig: 'œ',
          ofcir: '⦿',
          ofr: '𝔬',
          ogon: '˛',
          ograv: 'ò',
          ograve: 'ò',
          ogt: '⧁',
          ohbar: '⦵',
          ohm: 'Ω',
          oint: '∮',
          olarr: '↺',
          olcir: '⦾',
          olcross: '⦻',
          oline: '‾',
          olt: '⧀',
          omacr: 'ō',
          omega: 'ω',
          omicron: 'ο',
          omid: '⦶',
          ominus: '⊖',
          oopf: '𝕠',
          opar: '⦷',
          operp: '⦹',
          oplus: '⊕',
          or: '∨',
          orarr: '↻',
          ord: 'º',
          order: 'ℴ',
          orderof: 'ℴ',
          ordf: 'ª',
          ordm: 'º',
          origof: '⊶',
          oror: '⩖',
          orslope: '⩗',
          orv: '⩛',
          oscr: 'ℴ',
          oslas: 'ø',
          oslash: 'ø',
          osol: '⊘',
          otild: 'õ',
          otilde: 'õ',
          otimes: '⊗',
          otimesas: '⨶',
          oum: 'ö',
          ouml: 'ö',
          ovbar: '⌽',
          par: '¶',
          para: '¶',
          parallel: '∥',
          parsim: '⫳',
          parsl: '⫽',
          part: '∂',
          pcy: 'п',
          percnt: '%',
          period: '.',
          permil: '‰',
          perp: '⊥',
          pertenk: '‱',
          pfr: '𝔭',
          phi: 'φ',
          phiv: 'ϕ',
          phmmat: 'ℳ',
          phone: '☎',
          pi: 'π',
          pitchfork: '⋔',
          piv: 'ϖ',
          planck: 'ℏ',
          planckh: 'ℎ',
          plankv: 'ℏ',
          plus: '+',
          plusacir: '⨣',
          plusb: '⊞',
          pluscir: '⨢',
          plusdo: '∔',
          plusdu: '⨥',
          pluse: '⩲',
          plusm: '±',
          plusmn: '±',
          plussim: '⨦',
          plustwo: '⨧',
          pm: '±',
          pointint: '⨕',
          popf: '𝕡',
          poun: '£',
          pound: '£',
          pr: '≺',
          prE: '⪳',
          prap: '⪷',
          prcue: '≼',
          pre: '⪯',
          prec: '≺',
          precapprox: '⪷',
          preccurlyeq: '≼',
          preceq: '⪯',
          precnapprox: '⪹',
          precneqq: '⪵',
          precnsim: '⋨',
          precsim: '≾',
          prime: '′',
          primes: 'ℙ',
          prnE: '⪵',
          prnap: '⪹',
          prnsim: '⋨',
          prod: '∏',
          profalar: '⌮',
          profline: '⌒',
          profsurf: '⌓',
          prop: '∝',
          propto: '∝',
          prsim: '≾',
          prurel: '⊰',
          pscr: '𝓅',
          psi: 'ψ',
          puncsp: ' ',
          qfr: '𝔮',
          qint: '⨌',
          qopf: '𝕢',
          qprime: '⁗',
          qscr: '𝓆',
          quaternions: 'ℍ',
          quatint: '⨖',
          quest: '?',
          questeq: '≟',
          quo: '"',
          quot: '"',
          rAarr: '⇛',
          rArr: '⇒',
          rAtail: '⤜',
          rBarr: '⤏',
          rHar: '⥤',
          race: '∽̱',
          racute: 'ŕ',
          radic: '√',
          raemptyv: '⦳',
          rang: '⟩',
          rangd: '⦒',
          range: '⦥',
          rangle: '⟩',
          raqu: '»',
          raquo: '»',
          rarr: '→',
          rarrap: '⥵',
          rarrb: '⇥',
          rarrbfs: '⤠',
          rarrc: '⤳',
          rarrfs: '⤞',
          rarrhk: '↪',
          rarrlp: '↬',
          rarrpl: '⥅',
          rarrsim: '⥴',
          rarrtl: '↣',
          rarrw: '↝',
          ratail: '⤚',
          ratio: '∶',
          rationals: 'ℚ',
          rbarr: '⤍',
          rbbrk: '❳',
          rbrace: '}',
          rbrack: ']',
          rbrke: '⦌',
          rbrksld: '⦎',
          rbrkslu: '⦐',
          rcaron: 'ř',
          rcedil: 'ŗ',
          rceil: '⌉',
          rcub: '}',
          rcy: 'р',
          rdca: '⤷',
          rdldhar: '⥩',
          rdquo: '”',
          rdquor: '”',
          rdsh: '↳',
          real: 'ℜ',
          realine: 'ℛ',
          realpart: 'ℜ',
          reals: 'ℝ',
          rect: '▭',
          re: '®',
          reg: '®',
          rfisht: '⥽',
          rfloor: '⌋',
          rfr: '𝔯',
          rhard: '⇁',
          rharu: '⇀',
          rharul: '⥬',
          rho: 'ρ',
          rhov: 'ϱ',
          rightarrow: '→',
          rightarrowtail: '↣',
          rightharpoondown: '⇁',
          rightharpoonup: '⇀',
          rightleftarrows: '⇄',
          rightleftharpoons: '⇌',
          rightrightarrows: '⇉',
          rightsquigarrow: '↝',
          rightthreetimes: '⋌',
          ring: '˚',
          risingdotseq: '≓',
          rlarr: '⇄',
          rlhar: '⇌',
          rlm: '‏',
          rmoust: '⎱',
          rmoustache: '⎱',
          rnmid: '⫮',
          roang: '⟭',
          roarr: '⇾',
          robrk: '⟧',
          ropar: '⦆',
          ropf: '𝕣',
          roplus: '⨮',
          rotimes: '⨵',
          rpar: ')',
          rpargt: '⦔',
          rppolint: '⨒',
          rrarr: '⇉',
          rsaquo: '›',
          rscr: '𝓇',
          rsh: '↱',
          rsqb: ']',
          rsquo: '’',
          rsquor: '’',
          rthree: '⋌',
          rtimes: '⋊',
          rtri: '▹',
          rtrie: '⊵',
          rtrif: '▸',
          rtriltri: '⧎',
          ruluhar: '⥨',
          rx: '℞',
          sacute: 'ś',
          sbquo: '‚',
          sc: '≻',
          scE: '⪴',
          scap: '⪸',
          scaron: 'š',
          sccue: '≽',
          sce: '⪰',
          scedil: 'ş',
          scirc: 'ŝ',
          scnE: '⪶',
          scnap: '⪺',
          scnsim: '⋩',
          scpolint: '⨓',
          scsim: '≿',
          scy: 'с',
          sdot: '⋅',
          sdotb: '⊡',
          sdote: '⩦',
          seArr: '⇘',
          searhk: '⤥',
          searr: '↘',
          searrow: '↘',
          sec: '§',
          sect: '§',
          semi: ';',
          seswar: '⤩',
          setminus: '∖',
          setmn: '∖',
          sext: '✶',
          sfr: '𝔰',
          sfrown: '⌢',
          sharp: '♯',
          shchcy: 'щ',
          shcy: 'ш',
          shortmid: '∣',
          shortparallel: '∥',
          sh: '­',
          shy: '­',
          sigma: 'σ',
          sigmaf: 'ς',
          sigmav: 'ς',
          sim: '∼',
          simdot: '⩪',
          sime: '≃',
          simeq: '≃',
          simg: '⪞',
          simgE: '⪠',
          siml: '⪝',
          simlE: '⪟',
          simne: '≆',
          simplus: '⨤',
          simrarr: '⥲',
          slarr: '←',
          smallsetminus: '∖',
          smashp: '⨳',
          smeparsl: '⧤',
          smid: '∣',
          smile: '⌣',
          smt: '⪪',
          smte: '⪬',
          smtes: '⪬︀',
          softcy: 'ь',
          sol: '/',
          solb: '⧄',
          solbar: '⌿',
          sopf: '𝕤',
          spades: '♠',
          spadesuit: '♠',
          spar: '∥',
          sqcap: '⊓',
          sqcaps: '⊓︀',
          sqcup: '⊔',
          sqcups: '⊔︀',
          sqsub: '⊏',
          sqsube: '⊑',
          sqsubset: '⊏',
          sqsubseteq: '⊑',
          sqsup: '⊐',
          sqsupe: '⊒',
          sqsupset: '⊐',
          sqsupseteq: '⊒',
          squ: '□',
          square: '□',
          squarf: '▪',
          squf: '▪',
          srarr: '→',
          sscr: '𝓈',
          ssetmn: '∖',
          ssmile: '⌣',
          sstarf: '⋆',
          star: '☆',
          starf: '★',
          straightepsilon: 'ϵ',
          straightphi: 'ϕ',
          strns: '¯',
          sub: '⊂',
          subE: '⫅',
          subdot: '⪽',
          sube: '⊆',
          subedot: '⫃',
          submult: '⫁',
          subnE: '⫋',
          subne: '⊊',
          subplus: '⪿',
          subrarr: '⥹',
          subset: '⊂',
          subseteq: '⊆',
          subseteqq: '⫅',
          subsetneq: '⊊',
          subsetneqq: '⫋',
          subsim: '⫇',
          subsub: '⫕',
          subsup: '⫓',
          succ: '≻',
          succapprox: '⪸',
          succcurlyeq: '≽',
          succeq: '⪰',
          succnapprox: '⪺',
          succneqq: '⪶',
          succnsim: '⋩',
          succsim: '≿',
          sum: '∑',
          sung: '♪',
          sup: '⊃',
          sup1: '¹',
          sup2: '²',
          sup3: '³',
          supE: '⫆',
          supdot: '⪾',
          supdsub: '⫘',
          supe: '⊇',
          supedot: '⫄',
          suphsol: '⟉',
          suphsub: '⫗',
          suplarr: '⥻',
          supmult: '⫂',
          supnE: '⫌',
          supne: '⊋',
          supplus: '⫀',
          supset: '⊃',
          supseteq: '⊇',
          supseteqq: '⫆',
          supsetneq: '⊋',
          supsetneqq: '⫌',
          supsim: '⫈',
          supsub: '⫔',
          supsup: '⫖',
          swArr: '⇙',
          swarhk: '⤦',
          swarr: '↙',
          swarrow: '↙',
          swnwar: '⤪',
          szli: 'ß',
          szlig: 'ß',
          target: '⌖',
          tau: 'τ',
          tbrk: '⎴',
          tcaron: 'ť',
          tcedil: 'ţ',
          tcy: 'т',
          tdot: '⃛',
          telrec: '⌕',
          tfr: '𝔱',
          there4: '∴',
          therefore: '∴',
          theta: 'θ',
          thetasym: 'ϑ',
          thetav: 'ϑ',
          thickapprox: '≈',
          thicksim: '∼',
          thinsp: ' ',
          thkap: '≈',
          thksim: '∼',
          thor: 'þ',
          thorn: 'þ',
          tilde: '˜',
          time: '×',
          times: '×',
          timesb: '⊠',
          timesbar: '⨱',
          timesd: '⨰',
          tint: '∭',
          toea: '⤨',
          top: '⊤',
          topbot: '⌶',
          topcir: '⫱',
          topf: '𝕥',
          topfork: '⫚',
          tosa: '⤩',
          tprime: '‴',
          trade: '™',
          triangle: '▵',
          triangledown: '▿',
          triangleleft: '◃',
          trianglelefteq: '⊴',
          triangleq: '≜',
          triangleright: '▹',
          trianglerighteq: '⊵',
          tridot: '◬',
          trie: '≜',
          triminus: '⨺',
          triplus: '⨹',
          trisb: '⧍',
          tritime: '⨻',
          trpezium: '⏢',
          tscr: '𝓉',
          tscy: 'ц',
          tshcy: 'ћ',
          tstrok: 'ŧ',
          twixt: '≬',
          twoheadleftarrow: '↞',
          twoheadrightarrow: '↠',
          uArr: '⇑',
          uHar: '⥣',
          uacut: 'ú',
          uacute: 'ú',
          uarr: '↑',
          ubrcy: 'ў',
          ubreve: 'ŭ',
          ucir: 'û',
          ucirc: 'û',
          ucy: 'у',
          udarr: '⇅',
          udblac: 'ű',
          udhar: '⥮',
          ufisht: '⥾',
          ufr: '𝔲',
          ugrav: 'ù',
          ugrave: 'ù',
          uharl: '↿',
          uharr: '↾',
          uhblk: '▀',
          ulcorn: '⌜',
          ulcorner: '⌜',
          ulcrop: '⌏',
          ultri: '◸',
          umacr: 'ū',
          um: '¨',
          uml: '¨',
          uogon: 'ų',
          uopf: '𝕦',
          uparrow: '↑',
          updownarrow: '↕',
          upharpoonleft: '↿',
          upharpoonright: '↾',
          uplus: '⊎',
          upsi: 'υ',
          upsih: 'ϒ',
          upsilon: 'υ',
          upuparrows: '⇈',
          urcorn: '⌝',
          urcorner: '⌝',
          urcrop: '⌎',
          uring: 'ů',
          urtri: '◹',
          uscr: '𝓊',
          utdot: '⋰',
          utilde: 'ũ',
          utri: '▵',
          utrif: '▴',
          uuarr: '⇈',
          uum: 'ü',
          uuml: 'ü',
          uwangle: '⦧',
          vArr: '⇕',
          vBar: '⫨',
          vBarv: '⫩',
          vDash: '⊨',
          vangrt: '⦜',
          varepsilon: 'ϵ',
          varkappa: 'ϰ',
          varnothing: '∅',
          varphi: 'ϕ',
          varpi: 'ϖ',
          varpropto: '∝',
          varr: '↕',
          varrho: 'ϱ',
          varsigma: 'ς',
          varsubsetneq: '⊊︀',
          varsubsetneqq: '⫋︀',
          varsupsetneq: '⊋︀',
          varsupsetneqq: '⫌︀',
          vartheta: 'ϑ',
          vartriangleleft: '⊲',
          vartriangleright: '⊳',
          vcy: 'в',
          vdash: '⊢',
          vee: '∨',
          veebar: '⊻',
          veeeq: '≚',
          vellip: '⋮',
          verbar: '|',
          vert: '|',
          vfr: '𝔳',
          vltri: '⊲',
          vnsub: '⊂⃒',
          vnsup: '⊃⃒',
          vopf: '𝕧',
          vprop: '∝',
          vrtri: '⊳',
          vscr: '𝓋',
          vsubnE: '⫋︀',
          vsubne: '⊊︀',
          vsupnE: '⫌︀',
          vsupne: '⊋︀',
          vzigzag: '⦚',
          wcirc: 'ŵ',
          wedbar: '⩟',
          wedge: '∧',
          wedgeq: '≙',
          weierp: '℘',
          wfr: '𝔴',
          wopf: '𝕨',
          wp: '℘',
          wr: '≀',
          wreath: '≀',
          wscr: '𝓌',
          xcap: '⋂',
          xcirc: '◯',
          xcup: '⋃',
          xdtri: '▽',
          xfr: '𝔵',
          xhArr: '⟺',
          xharr: '⟷',
          xi: 'ξ',
          xlArr: '⟸',
          xlarr: '⟵',
          xmap: '⟼',
          xnis: '⋻',
          xodot: '⨀',
          xopf: '𝕩',
          xoplus: '⨁',
          xotime: '⨂',
          xrArr: '⟹',
          xrarr: '⟶',
          xscr: '𝓍',
          xsqcup: '⨆',
          xuplus: '⨄',
          xutri: '△',
          xvee: '⋁',
          xwedge: '⋀',
          yacut: 'ý',
          yacute: 'ý',
          yacy: 'я',
          ycirc: 'ŷ',
          ycy: 'ы',
          ye: '¥',
          yen: '¥',
          yfr: '𝔶',
          yicy: 'ї',
          yopf: '𝕪',
          yscr: '𝓎',
          yucy: 'ю',
          yum: 'ÿ',
          yuml: 'ÿ',
          zacute: 'ź',
          zcaron: 'ž',
          zcy: 'з',
          zdot: 'ż',
          zeetrf: 'ℨ',
          zeta: 'ζ',
          zfr: '𝔷',
          zhcy: 'ж',
          zigrarr: '⇝',
          zopf: '𝕫',
          zscr: '𝓏',
          zwj: '‍',
          zwnj: '‌',
        };

        /***/
      },
      /* 247 */
      /***/ function(module, exports) {
        module.exports = {
          AElig: 'Æ',
          AMP: '&',
          Aacute: 'Á',
          Acirc: 'Â',
          Agrave: 'À',
          Aring: 'Å',
          Atilde: 'Ã',
          Auml: 'Ä',
          COPY: '©',
          Ccedil: 'Ç',
          ETH: 'Ð',
          Eacute: 'É',
          Ecirc: 'Ê',
          Egrave: 'È',
          Euml: 'Ë',
          GT: '>',
          Iacute: 'Í',
          Icirc: 'Î',
          Igrave: 'Ì',
          Iuml: 'Ï',
          LT: '<',
          Ntilde: 'Ñ',
          Oacute: 'Ó',
          Ocirc: 'Ô',
          Ograve: 'Ò',
          Oslash: 'Ø',
          Otilde: 'Õ',
          Ouml: 'Ö',
          QUOT: '"',
          REG: '®',
          THORN: 'Þ',
          Uacute: 'Ú',
          Ucirc: 'Û',
          Ugrave: 'Ù',
          Uuml: 'Ü',
          Yacute: 'Ý',
          aacute: 'á',
          acirc: 'â',
          acute: '´',
          aelig: 'æ',
          agrave: 'à',
          amp: '&',
          aring: 'å',
          atilde: 'ã',
          auml: 'ä',
          brvbar: '¦',
          ccedil: 'ç',
          cedil: '¸',
          cent: '¢',
          copy: '©',
          curren: '¤',
          deg: '°',
          divide: '÷',
          eacute: 'é',
          ecirc: 'ê',
          egrave: 'è',
          eth: 'ð',
          euml: 'ë',
          frac12: '½',
          frac14: '¼',
          frac34: '¾',
          gt: '>',
          iacute: 'í',
          icirc: 'î',
          iexcl: '¡',
          igrave: 'ì',
          iquest: '¿',
          iuml: 'ï',
          laquo: '«',
          lt: '<',
          macr: '¯',
          micro: 'µ',
          middot: '·',
          nbsp: ' ',
          not: '¬',
          ntilde: 'ñ',
          oacute: 'ó',
          ocirc: 'ô',
          ograve: 'ò',
          ordf: 'ª',
          ordm: 'º',
          oslash: 'ø',
          otilde: 'õ',
          ouml: 'ö',
          para: '¶',
          plusmn: '±',
          pound: '£',
          quot: '"',
          raquo: '»',
          reg: '®',
          sect: '§',
          shy: '­',
          sup1: '¹',
          sup2: '²',
          sup3: '³',
          szlig: 'ß',
          thorn: 'þ',
          times: '×',
          uacute: 'ú',
          ucirc: 'û',
          ugrave: 'ù',
          uml: '¨',
          uuml: 'ü',
          yacute: 'ý',
          yen: '¥',
          yuml: 'ÿ',
        };

        /***/
      },
      /* 248 */
      /***/ function(module, exports) {
        module.exports = {
          '0': '�',
          '128': '€',
          '130': '‚',
          '131': 'ƒ',
          '132': '„',
          '133': '…',
          '134': '†',
          '135': '‡',
          '136': 'ˆ',
          '137': '‰',
          '138': 'Š',
          '139': '‹',
          '140': 'Œ',
          '142': 'Ž',
          '145': '‘',
          '146': '’',
          '147': '“',
          '148': '”',
          '149': '•',
          '150': '–',
          '151': '—',
          '152': '˜',
          '153': '™',
          '154': 'š',
          '155': '›',
          '156': 'œ',
          '158': 'ž',
          '159': 'Ÿ',
        };

        /***/
      },
      /* 249 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = hexadecimal;

        /* Check if the given character code, or the character
 * code at the first character, is hexadecimal. */
        function hexadecimal(character) {
          var code =
            typeof character === 'string' ? character.charCodeAt(0) : character;

          return (
            (code >= 97 /* a */ && code <= 102) ||
            /* z */ (code >= 65 /* A */ && code <= 70) /* Z */ ||
            (code >= 48 /* A */ && code <= 57) /* Z */
          );
        }

        /***/
      },
      /* 250 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var alphabetical = __webpack_require__(90);
        var decimal = __webpack_require__(22);

        module.exports = alphanumerical;

        /* Check if the given character code, or the character
 * code at the first character, is alphanumerical. */
        function alphanumerical(character) {
          return alphabetical(character) || decimal(character);
        }

        /***/
      },
      /* 251 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = factory;

        var MERGEABLE_NODES = {
          text: mergeText,
          blockquote: mergeBlockquote,
        };

        /* Check whether a node is mergeable with adjacent nodes. */
        function mergeable(node) {
          var start;
          var end;

          if (node.type !== 'text' || !node.position) {
            return true;
          }

          start = node.position.start;
          end = node.position.end;

          /* Only merge nodes which occupy the same size as their
   * `value`. */
          return (
            start.line !== end.line ||
            end.column - start.column === node.value.length
          );
        }

        /* Merge two text nodes: `node` into `prev`. */
        function mergeText(prev, node) {
          prev.value += node.value;

          return prev;
        }

        /* Merge two blockquotes: `node` into `prev`, unless in
 * CommonMark mode. */
        function mergeBlockquote(prev, node) {
          if (this.options.commonmark) {
            return node;
          }

          prev.children = prev.children.concat(node.children);

          return prev;
        }

        /* Construct a tokenizer.  This creates both
 * `tokenizeInline` and `tokenizeBlock`. */
        function factory(type) {
          return tokenize;

          /* Tokenizer for a bound `type`. */
          function tokenize(value, location) {
            var self = this;
            var offset = self.offset;
            var tokens = [];
            var methods = self[type + 'Methods'];
            var tokenizers = self[type + 'Tokenizers'];
            var line = location.line;
            var column = location.column;
            var index;
            var length;
            var method;
            var name;
            var matched;
            var valueLength;

            /* Trim white space only lines. */
            if (!value) {
              return tokens;
            }

            /* Expose on `eat`. */
            eat.now = now;
            eat.file = self.file;

            /* Sync initial offset. */
            updatePosition('');

            /* Iterate over `value`, and iterate over all
     * tokenizers.  When one eats something, re-iterate
     * with the remaining value.  If no tokenizer eats,
     * something failed (should not happen) and an
     * exception is thrown. */
            while (value) {
              index = -1;
              length = methods.length;
              matched = false;

              while (++index < length) {
                name = methods[index];
                method = tokenizers[name];

                if (
                  method &&
                  /* istanbul ignore next */ (!method.onlyAtStart ||
                    self.atStart) &&
                  (!method.notInList || !self.inList) &&
                  (!method.notInBlock || !self.inBlock) &&
                  (!method.notInLink || !self.inLink)
                ) {
                  valueLength = value.length;

                  method.apply(self, [eat, value]);

                  matched = valueLength !== value.length;

                  if (matched) {
                    break;
                  }
                }
              }

              /* istanbul ignore if */
              if (!matched) {
                self.file.fail(new Error('Infinite loop'), eat.now());
              }
            }

            self.eof = now();

            return tokens;

            /* Update line, column, and offset based on
     * `value`. */
            function updatePosition(subvalue) {
              var lastIndex = -1;
              var index = subvalue.indexOf('\n');

              while (index !== -1) {
                line++;
                lastIndex = index;
                index = subvalue.indexOf('\n', index + 1);
              }

              if (lastIndex === -1) {
                column += subvalue.length;
              } else {
                column = subvalue.length - lastIndex;
              }

              if (line in offset) {
                if (lastIndex !== -1) {
                  column += offset[line];
                } else if (column <= offset[line]) {
                  column = offset[line] + 1;
                }
              }
            }

            /* Get offset.  Called before the first character is
     * eaten to retrieve the range's offsets. */
            function getOffset() {
              var indentation = [];
              var pos = line + 1;

              /* Done.  Called when the last character is
       * eaten to retrieve the range’s offsets. */
              return function() {
                var last = line + 1;

                while (pos < last) {
                  indentation.push((offset[pos] || 0) + 1);

                  pos++;
                }

                return indentation;
              };
            }

            /* Get the current position. */
            function now() {
              var pos = { line: line, column: column };

              pos.offset = self.toOffset(pos);

              return pos;
            }

            /* Store position information for a node. */
            function Position(start) {
              this.start = start;
              this.end = now();
            }

            /* Throw when a value is incorrectly eaten.
     * This shouldn’t happen but will throw on new,
     * incorrect rules. */
            function validateEat(subvalue) {
              /* istanbul ignore if */
              if (value.substring(0, subvalue.length) !== subvalue) {
                /* Capture stack-trace. */
                self.file.fail(
                  new Error(
                    'Incorrectly eaten value: please report this ' +
                      'warning on http://git.io/vg5Ft'
                  ),
                  now()
                );
              }
            }

            /* Mark position and patch `node.position`. */
            function position() {
              var before = now();

              return update;

              /* Add the position to a node. */
              function update(node, indent) {
                var prev = node.position;
                var start = prev ? prev.start : before;
                var combined = [];
                var n = prev && prev.end.line;
                var l = before.line;

                node.position = new Position(start);

                /* If there was already a `position`, this
         * node was merged.  Fixing `start` wasn’t
         * hard, but the indent is different.
         * Especially because some information, the
         * indent between `n` and `l` wasn’t
         * tracked.  Luckily, that space is
         * (should be?) empty, so we can safely
         * check for it now. */
                if (prev && indent && prev.indent) {
                  combined = prev.indent;

                  if (n < l) {
                    while (++n < l) {
                      combined.push((offset[n] || 0) + 1);
                    }

                    combined.push(before.column);
                  }

                  indent = combined.concat(indent);
                }

                node.position.indent = indent || [];

                return node;
              }
            }

            /* Add `node` to `parent`s children or to `tokens`.
     * Performs merges where possible. */
            function add(node, parent) {
              var children = parent ? parent.children : tokens;
              var prev = children[children.length - 1];

              if (
                prev &&
                node.type === prev.type &&
                node.type in MERGEABLE_NODES &&
                mergeable(prev) &&
                mergeable(node)
              ) {
                node = MERGEABLE_NODES[node.type].call(self, prev, node);
              }

              if (node !== prev) {
                children.push(node);
              }

              if (self.atStart && tokens.length !== 0) {
                self.exitStart();
              }

              return node;
            }

            /* Remove `subvalue` from `value`.
     * `subvalue` must be at the start of `value`. */
            function eat(subvalue) {
              var indent = getOffset();
              var pos = position();
              var current = now();

              validateEat(subvalue);

              apply.reset = reset;
              reset.test = test;
              apply.test = test;

              value = value.substring(subvalue.length);

              updatePosition(subvalue);

              indent = indent();

              return apply;

              /* Add the given arguments, add `position` to
       * the returned node, and return the node. */
              function apply(node, parent) {
                return pos(add(pos(node), parent), indent);
              }

              /* Functions just like apply, but resets the
       * content:  the line and column are reversed,
       * and the eaten value is re-added.
       * This is useful for nodes with a single
       * type of content, such as lists and tables.
       * See `apply` above for what parameters are
       * expected. */
              function reset() {
                var node = apply.apply(null, arguments);

                line = current.line;
                column = current.column;
                value = subvalue + value;

                return node;
              }

              /* Test the position, after eating, and reverse
       * to a not-eaten state. */
              function test() {
                var result = pos({});

                line = current.line;
                column = current.column;
                value = subvalue + value;

                return result.position;
              }
            }
          }
        }

        /***/
      },
      /* 252 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var xtend = __webpack_require__(6);
        var escapes = __webpack_require__(253);
        var defaults = __webpack_require__(91);

        module.exports = setOptions;

        function setOptions(options) {
          var self = this;
          var current = self.options;
          var key;
          var value;

          if (options == null) {
            options = {};
          } else if (typeof options === 'object') {
            options = xtend(options);
          } else {
            throw new Error(
              'Invalid value `' + options + '` ' + 'for setting `options`'
            );
          }

          for (key in defaults) {
            value = options[key];

            if (value == null) {
              value = current[key];
            }

            if (
              (key !== 'blocks' && typeof value !== 'boolean') ||
              (key === 'blocks' && typeof value !== 'object')
            ) {
              throw new Error(
                'Invalid value `' +
                  value +
                  '` for setting `options.' +
                  key +
                  '`'
              );
            }

            options[key] = value;
          }

          self.options = options;
          self.escape = escapes(options);

          return self;
        }

        /***/
      },
      /* 253 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = escapes;

        var defaults = [
          '\\',
          '`',
          '*',
          '{',
          '}',
          '[',
          ']',
          '(',
          ')',
          '#',
          '+',
          '-',
          '.',
          '!',
          '_',
          '>',
        ];

        var gfm = defaults.concat(['~', '|']);

        var commonmark = gfm.concat([
          '\n',
          '"',
          '$',
          '%',
          '&',
          "'",
          ',',
          '/',
          ':',
          ';',
          '<',
          '=',
          '?',
          '@',
          '^',
        ]);

        escapes.default = defaults;
        escapes.gfm = gfm;
        escapes.commonmark = commonmark;

        /* Get markdown escapes. */
        function escapes(options) {
          var settings = options || {};

          if (settings.commonmark) {
            return commonmark;
          }

          return settings.gfm ? gfm : defaults;
        }

        /***/
      },
      /* 254 */
      /***/ function(module, exports) {
        module.exports = [
          'address',
          'article',
          'aside',
          'base',
          'basefont',
          'blockquote',
          'body',
          'caption',
          'center',
          'col',
          'colgroup',
          'dd',
          'details',
          'dialog',
          'dir',
          'div',
          'dl',
          'dt',
          'fieldset',
          'figcaption',
          'figure',
          'footer',
          'form',
          'frame',
          'frameset',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'h6',
          'head',
          'header',
          'hgroup',
          'hr',
          'html',
          'iframe',
          'legend',
          'li',
          'link',
          'main',
          'menu',
          'menuitem',
          'meta',
          'nav',
          'noframes',
          'ol',
          'optgroup',
          'option',
          'p',
          'param',
          'pre',
          'section',
          'source',
          'title',
          'summary',
          'table',
          'tbody',
          'td',
          'tfoot',
          'th',
          'thead',
          'title',
          'tr',
          'track',
          'ul',
        ];

        /***/
      },
      /* 255 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var xtend = __webpack_require__(6);
        var removePosition = __webpack_require__(256);

        module.exports = parse;

        var C_NEWLINE = '\n';
        var EXPRESSION_LINE_BREAKS = /\r\n|\r/g;

        /* Parse the bound file. */
        function parse() {
          var self = this;
          var value = String(self.file);
          var start = { line: 1, column: 1, offset: 0 };
          var content = xtend(start);
          var node;

          /* Clean non-unix newlines: `\r\n` and `\r` are all
   * changed to `\n`.  This should not affect positional
   * information. */
          value = value.replace(EXPRESSION_LINE_BREAKS, C_NEWLINE);

          if (value.charCodeAt(0) === 0xfeff) {
            value = value.slice(1);

            content.column++;
            content.offset++;
          }

          node = {
            type: 'root',
            children: self.tokenizeBlock(value, content),
            position: {
              start: start,
              end: self.eof || xtend(start),
            },
          };

          if (!self.options.position) {
            removePosition(node, true);
          }

          return node;
        }

        /***/
      },
      /* 256 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var visit = __webpack_require__(23);

        module.exports = removePosition;

        /* Remove `position`s from `tree`. */
        function removePosition(node, force) {
          visit(node, force ? hard : soft);
          return node;
        }

        function hard(node) {
          delete node.position;
        }

        function soft(node) {
          node.position = undefined;
        }

        /***/
      },
      /* 257 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable max-params */

        /* Expose. */

        module.exports = is;

        /* Assert if `test` passes for `node`.
 * When a `parent` node is known the `index` of node */
        function is(test, node, index, parent, context) {
          var hasParent = parent !== null && parent !== undefined;
          var hasIndex = index !== null && index !== undefined;
          var check = convert(test);

          if (
            hasIndex &&
            (typeof index !== 'number' || index < 0 || index === Infinity)
          ) {
            throw new Error('Expected positive finite index or child node');
          }

          if (hasParent && (!is(null, parent) || !parent.children)) {
            throw new Error('Expected parent node');
          }

          if (!node || !node.type || typeof node.type !== 'string') {
            return false;
          }

          if (hasParent !== hasIndex) {
            throw new Error('Expected both parent and index');
          }

          return Boolean(check.call(context, node, index, parent));
        }

        function convert(test) {
          if (typeof test === 'string') {
            return typeFactory(test);
          }

          if (test === null || test === undefined) {
            return ok;
          }

          if (typeof test === 'object') {
            return ('length' in test ? anyFactory : matchesFactory)(test);
          }

          if (typeof test === 'function') {
            return test;
          }

          throw new Error('Expected function, string, or object as test');
        }

        function convertAll(tests) {
          var results = [];
          var length = tests.length;
          var index = -1;

          while (++index < length) {
            results[index] = convert(tests[index]);
          }

          return results;
        }

        /* Utility assert each property in `test` is represented
 * in `node`, and each values are strictly equal. */
        function matchesFactory(test) {
          return matches;

          function matches(node) {
            var key;

            for (key in test) {
              if (node[key] !== test[key]) {
                return false;
              }
            }

            return true;
          }
        }

        function anyFactory(tests) {
          var checks = convertAll(tests);
          var length = checks.length;

          return matches;

          function matches() {
            var index = -1;

            while (++index < length) {
              if (checks[index].apply(this, arguments)) {
                return true;
              }
            }

            return false;
          }
        }

        /* Utility to convert a string into a function which checks
 * a given node’s type for said string. */
        function typeFactory(test) {
          return type;

          function type(node) {
            return Boolean(node && node.type === test);
          }
        }

        /* Utility to return true. */
        function ok() {
          return true;
        }

        /***/
      },
      /* 258 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);

        module.exports = newline;

        /* Tokenise newline. */
        function newline(eat, value, silent) {
          var character = value.charAt(0);
          var length;
          var subvalue;
          var queue;
          var index;

          if (character !== '\n') {
            return;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          index = 1;
          length = value.length;
          subvalue = character;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (!whitespace(character)) {
              break;
            }

            queue += character;

            if (character === '\n') {
              subvalue += queue;
              queue = '';
            }

            index++;
          }

          eat(subvalue);
        }

        /***/
      },
      /* 259 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var repeat = __webpack_require__(40);
        var trim = __webpack_require__(41);

        module.exports = indentedCode;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';

        var CODE_INDENT_COUNT = 4;
        var CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);

        /* Tokenise indented code. */
        function indentedCode(eat, value, silent) {
          var index = -1;
          var length = value.length;
          var subvalue = '';
          var content = '';
          var subvalueQueue = '';
          var contentQueue = '';
          var character;
          var blankQueue;
          var indent;

          while (++index < length) {
            character = value.charAt(index);

            if (indent) {
              indent = false;

              subvalue += subvalueQueue;
              content += contentQueue;
              subvalueQueue = '';
              contentQueue = '';

              if (character === C_NEWLINE) {
                subvalueQueue = character;
                contentQueue = character;
              } else {
                subvalue += character;
                content += character;

                while (++index < length) {
                  character = value.charAt(index);

                  if (!character || character === C_NEWLINE) {
                    contentQueue = character;
                    subvalueQueue = character;
                    break;
                  }

                  subvalue += character;
                  content += character;
                }
              }
            } else if (
              character === C_SPACE &&
              value.charAt(index + 1) === character &&
              value.charAt(index + 2) === character &&
              value.charAt(index + 3) === character
            ) {
              subvalueQueue += CODE_INDENT;
              index += 3;
              indent = true;
            } else if (character === C_TAB) {
              subvalueQueue += character;
              indent = true;
            } else {
              blankQueue = '';

              while (character === C_TAB || character === C_SPACE) {
                blankQueue += character;
                character = value.charAt(++index);
              }

              if (character !== C_NEWLINE) {
                break;
              }

              subvalueQueue += blankQueue + character;
              contentQueue += character;
            }
          }

          if (content) {
            if (silent) {
              return true;
            }

            return eat(subvalue)({
              type: 'code',
              lang: null,
              value: trim(content),
            });
          }
        }

        /***/
      },
      /* 260 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(41);

        module.exports = fencedCode;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_TILDE = '~';
        var C_TICK = '`';

        var MIN_FENCE_COUNT = 3;
        var CODE_INDENT_COUNT = 4;

        function fencedCode(eat, value, silent) {
          var self = this;
          var settings = self.options;
          var length = value.length + 1;
          var index = 0;
          var subvalue = '';
          var fenceCount;
          var marker;
          var character;
          var flag;
          var queue;
          var content;
          var exdentedContent;
          var closing;
          var exdentedClosing;
          var indent;
          var now;

          if (!settings.gfm) {
            return;
          }

          /* Eat initial spacing. */
          while (index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              break;
            }

            subvalue += character;
            index++;
          }

          indent = index;

          /* Eat the fence. */
          character = value.charAt(index);

          if (character !== C_TILDE && character !== C_TICK) {
            return;
          }

          index++;
          marker = character;
          fenceCount = 1;
          subvalue += character;

          while (index < length) {
            character = value.charAt(index);

            if (character !== marker) {
              break;
            }

            subvalue += character;
            fenceCount++;
            index++;
          }

          if (fenceCount < MIN_FENCE_COUNT) {
            return;
          }

          /* Eat spacing before flag. */
          while (index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              break;
            }

            subvalue += character;
            index++;
          }

          /* Eat flag. */
          flag = '';
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (
              character === C_NEWLINE ||
              character === C_TILDE ||
              character === C_TICK
            ) {
              break;
            }

            if (character === C_SPACE || character === C_TAB) {
              queue += character;
            } else {
              flag += queue + character;
              queue = '';
            }

            index++;
          }

          character = value.charAt(index);

          if (character && character !== C_NEWLINE) {
            return;
          }

          if (silent) {
            return true;
          }

          now = eat.now();
          now.column += subvalue.length;
          now.offset += subvalue.length;

          subvalue += flag;
          flag = self.decode.raw(self.unescape(flag), now);

          if (queue) {
            subvalue += queue;
          }

          queue = '';
          closing = '';
          exdentedClosing = '';
          content = '';
          exdentedContent = '';

          /* Eat content. */
          while (index < length) {
            character = value.charAt(index);
            content += closing;
            exdentedContent += exdentedClosing;
            closing = '';
            exdentedClosing = '';

            if (character !== C_NEWLINE) {
              content += character;
              exdentedClosing += character;
              index++;
              continue;
            }

            /* Add the newline to `subvalue` if its the first
     * character.  Otherwise, add it to the `closing`
     * queue. */
            if (content) {
              closing += character;
              exdentedClosing += character;
            } else {
              subvalue += character;
            }

            queue = '';
            index++;

            while (index < length) {
              character = value.charAt(index);

              if (character !== C_SPACE) {
                break;
              }

              queue += character;
              index++;
            }

            closing += queue;
            exdentedClosing += queue.slice(indent);

            if (queue.length >= CODE_INDENT_COUNT) {
              continue;
            }

            queue = '';

            while (index < length) {
              character = value.charAt(index);

              if (character !== marker) {
                break;
              }

              queue += character;
              index++;
            }

            closing += queue;
            exdentedClosing += queue;

            if (queue.length < fenceCount) {
              continue;
            }

            queue = '';

            while (index < length) {
              character = value.charAt(index);

              if (character !== C_SPACE && character !== C_TAB) {
                break;
              }

              closing += character;
              exdentedClosing += character;
              index++;
            }

            if (!character || character === C_NEWLINE) {
              break;
            }
          }

          subvalue += content + closing;

          return eat(subvalue)({
            type: 'code',
            lang: flag || null,
            value: trim(exdentedContent),
          });
        }

        /***/
      },
      /* 261 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(15);
        var interrupt = __webpack_require__(42);

        module.exports = blockquote;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_GT = '>';

        /* Tokenise a blockquote. */
        function blockquote(eat, value, silent) {
          var self = this;
          var offsets = self.offset;
          var tokenizers = self.blockTokenizers;
          var interruptors = self.interruptBlockquote;
          var now = eat.now();
          var currentLine = now.line;
          var length = value.length;
          var values = [];
          var contents = [];
          var indents = [];
          var add;
          var index = 0;
          var character;
          var rest;
          var nextIndex;
          var content;
          var line;
          var startIndex;
          var prefixed;
          var exit;

          while (index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              break;
            }

            index++;
          }

          if (value.charAt(index) !== C_GT) {
            return;
          }

          if (silent) {
            return true;
          }

          index = 0;

          while (index < length) {
            nextIndex = value.indexOf(C_NEWLINE, index);
            startIndex = index;
            prefixed = false;

            if (nextIndex === -1) {
              nextIndex = length;
            }

            while (index < length) {
              character = value.charAt(index);

              if (character !== C_SPACE && character !== C_TAB) {
                break;
              }

              index++;
            }

            if (value.charAt(index) === C_GT) {
              index++;
              prefixed = true;

              if (value.charAt(index) === C_SPACE) {
                index++;
              }
            } else {
              index = startIndex;
            }

            content = value.slice(index, nextIndex);

            if (!prefixed && !trim(content)) {
              index = startIndex;
              break;
            }

            if (!prefixed) {
              rest = value.slice(index);

              /* Check if the following code contains a possible
       * block. */
              if (
                interrupt(interruptors, tokenizers, self, [eat, rest, true])
              ) {
                break;
              }
            }

            line =
              startIndex === index
                ? content
                : value.slice(startIndex, nextIndex);

            indents.push(index - startIndex);
            values.push(line);
            contents.push(content);

            index = nextIndex + 1;
          }

          index = -1;
          length = indents.length;
          add = eat(values.join(C_NEWLINE));

          while (++index < length) {
            offsets[currentLine] = (offsets[currentLine] || 0) + indents[index];
            currentLine++;
          }

          exit = self.enterBlock();
          contents = self.tokenizeBlock(contents.join(C_NEWLINE), now);
          exit();

          return add({
            type: 'blockquote',
            children: contents,
          });
        }

        /***/
      },
      /* 262 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = atxHeading;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_HASH = '#';

        var MAX_ATX_COUNT = 6;

        function atxHeading(eat, value, silent) {
          var self = this;
          var settings = self.options;
          var length = value.length + 1;
          var index = -1;
          var now = eat.now();
          var subvalue = '';
          var content = '';
          var character;
          var queue;
          var depth;

          /* Eat initial spacing. */
          while (++index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              index--;
              break;
            }

            subvalue += character;
          }

          /* Eat hashes. */
          depth = 0;

          while (++index <= length) {
            character = value.charAt(index);

            if (character !== C_HASH) {
              index--;
              break;
            }

            subvalue += character;
            depth++;
          }

          if (depth > MAX_ATX_COUNT) {
            return;
          }

          if (
            !depth ||
            (!settings.pedantic && value.charAt(index + 1) === C_HASH)
          ) {
            return;
          }

          length = value.length + 1;

          /* Eat intermediate white-space. */
          queue = '';

          while (++index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              index--;
              break;
            }

            queue += character;
          }

          /* Exit when not in pedantic mode without spacing. */
          if (
            !settings.pedantic &&
            queue.length === 0 &&
            character &&
            character !== C_NEWLINE
          ) {
            return;
          }

          if (silent) {
            return true;
          }

          /* Eat content. */
          subvalue += queue;
          queue = '';
          content = '';

          while (++index < length) {
            character = value.charAt(index);

            if (!character || character === C_NEWLINE) {
              break;
            }

            if (
              character !== C_SPACE &&
              character !== C_TAB &&
              character !== C_HASH
            ) {
              content += queue + character;
              queue = '';
              continue;
            }

            while (character === C_SPACE || character === C_TAB) {
              queue += character;
              character = value.charAt(++index);
            }

            while (character === C_HASH) {
              queue += character;
              character = value.charAt(++index);
            }

            while (character === C_SPACE || character === C_TAB) {
              queue += character;
              character = value.charAt(++index);
            }

            index--;
          }

          now.column += subvalue.length;
          now.offset += subvalue.length;
          subvalue += content + queue;

          return eat(subvalue)({
            type: 'heading',
            depth: depth,
            children: self.tokenizeInline(content, now),
          });
        }

        /***/
      },
      /* 263 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = thematicBreak;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_ASTERISK = '*';
        var C_UNDERSCORE = '_';
        var C_DASH = '-';

        var THEMATIC_BREAK_MARKER_COUNT = 3;

        function thematicBreak(eat, value, silent) {
          var index = -1;
          var length = value.length + 1;
          var subvalue = '';
          var character;
          var marker;
          var markerCount;
          var queue;

          while (++index < length) {
            character = value.charAt(index);

            if (character !== C_TAB && character !== C_SPACE) {
              break;
            }

            subvalue += character;
          }

          if (
            character !== C_ASTERISK &&
            character !== C_DASH &&
            character !== C_UNDERSCORE
          ) {
            return;
          }

          marker = character;
          subvalue += character;
          markerCount = 1;
          queue = '';

          while (++index < length) {
            character = value.charAt(index);

            if (character === marker) {
              markerCount++;
              subvalue += queue + marker;
              queue = '';
            } else if (character === C_SPACE) {
              queue += character;
            } else if (
              markerCount >= THEMATIC_BREAK_MARKER_COUNT &&
              (!character || character === C_NEWLINE)
            ) {
              subvalue += queue;

              if (silent) {
                return true;
              }

              return eat(subvalue)({ type: 'thematicBreak' });
            } else {
              return;
            }
          }
        }

        /***/
      },
      /* 264 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /* eslint-disable max-params */

        var trim = __webpack_require__(15);
        var repeat = __webpack_require__(40);
        var decimal = __webpack_require__(22);
        var getIndent = __webpack_require__(92);
        var removeIndent = __webpack_require__(265);
        var interrupt = __webpack_require__(42);

        module.exports = list;

        var C_ASTERISK = '*';
        var C_UNDERSCORE = '_';
        var C_PLUS = '+';
        var C_DASH = '-';
        var C_DOT = '.';
        var C_SPACE = ' ';
        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_PAREN_CLOSE = ')';
        var C_X_LOWER = 'x';

        var TAB_SIZE = 4;
        var EXPRESSION_LOOSE_LIST_ITEM = /\n\n(?!\s*$)/;
        var EXPRESSION_TASK_ITEM = /^\[([ \t]|x|X)][ \t]/;
        var EXPRESSION_BULLET = /^([ \t]*)([*+-]|\d+[.)])( {1,4}(?! )| |\t|$|(?=\n))([^\n]*)/;
        var EXPRESSION_PEDANTIC_BULLET = /^([ \t]*)([*+-]|\d+[.)])([ \t]+)/;
        var EXPRESSION_INITIAL_INDENT = /^( {1,4}|\t)?/gm;

        /* Map of characters which can be used to mark
 * list-items. */
        var LIST_UNORDERED_MARKERS = {};

        LIST_UNORDERED_MARKERS[C_ASTERISK] = true;
        LIST_UNORDERED_MARKERS[C_PLUS] = true;
        LIST_UNORDERED_MARKERS[C_DASH] = true;

        /* Map of characters which can be used to mark
 * list-items after a digit. */
        var LIST_ORDERED_MARKERS = {};

        LIST_ORDERED_MARKERS[C_DOT] = true;

        /* Map of characters which can be used to mark
 * list-items after a digit. */
        var LIST_ORDERED_COMMONMARK_MARKERS = {};

        LIST_ORDERED_COMMONMARK_MARKERS[C_DOT] = true;
        LIST_ORDERED_COMMONMARK_MARKERS[C_PAREN_CLOSE] = true;

        function list(eat, value, silent) {
          var self = this;
          var commonmark = self.options.commonmark;
          var pedantic = self.options.pedantic;
          var tokenizers = self.blockTokenizers;
          var interuptors = self.interruptList;
          var markers;
          var index = 0;
          var length = value.length;
          var start = null;
          var size = 0;
          var queue;
          var ordered;
          var character;
          var marker;
          var nextIndex;
          var startIndex;
          var prefixed;
          var currentMarker;
          var content;
          var line;
          var prevEmpty;
          var empty;
          var items;
          var allLines;
          var emptyLines;
          var item;
          var enterTop;
          var exitBlockquote;
          var isLoose;
          var node;
          var now;
          var end;
          var indented;

          while (index < length) {
            character = value.charAt(index);

            if (character === C_TAB) {
              size += TAB_SIZE - (size % TAB_SIZE);
            } else if (character === C_SPACE) {
              size++;
            } else {
              break;
            }

            index++;
          }

          if (size >= TAB_SIZE) {
            return;
          }

          character = value.charAt(index);

          markers = commonmark
            ? LIST_ORDERED_COMMONMARK_MARKERS
            : LIST_ORDERED_MARKERS;

          if (LIST_UNORDERED_MARKERS[character] === true) {
            marker = character;
            ordered = false;
          } else {
            ordered = true;
            queue = '';

            while (index < length) {
              character = value.charAt(index);

              if (!decimal(character)) {
                break;
              }

              queue += character;
              index++;
            }

            character = value.charAt(index);

            if (!queue || markers[character] !== true) {
              return;
            }

            start = parseInt(queue, 10);
            marker = character;
          }

          character = value.charAt(++index);

          if (character !== C_SPACE && character !== C_TAB) {
            return;
          }

          if (silent) {
            return true;
          }

          index = 0;
          items = [];
          allLines = [];
          emptyLines = [];

          while (index < length) {
            nextIndex = value.indexOf(C_NEWLINE, index);
            startIndex = index;
            prefixed = false;
            indented = false;

            if (nextIndex === -1) {
              nextIndex = length;
            }

            end = index + TAB_SIZE;
            size = 0;

            while (index < length) {
              character = value.charAt(index);

              if (character === C_TAB) {
                size += TAB_SIZE - (size % TAB_SIZE);
              } else if (character === C_SPACE) {
                size++;
              } else {
                break;
              }

              index++;
            }

            if (size >= TAB_SIZE) {
              indented = true;
            }

            if (item && size >= item.indent) {
              indented = true;
            }

            character = value.charAt(index);
            currentMarker = null;

            if (!indented) {
              if (LIST_UNORDERED_MARKERS[character] === true) {
                currentMarker = character;
                index++;
                size++;
              } else {
                queue = '';

                while (index < length) {
                  character = value.charAt(index);

                  if (!decimal(character)) {
                    break;
                  }

                  queue += character;
                  index++;
                }

                character = value.charAt(index);
                index++;

                if (queue && markers[character] === true) {
                  currentMarker = character;
                  size += queue.length + 1;
                }
              }

              if (currentMarker) {
                character = value.charAt(index);

                if (character === C_TAB) {
                  size += TAB_SIZE - (size % TAB_SIZE);
                  index++;
                } else if (character === C_SPACE) {
                  end = index + TAB_SIZE;

                  while (index < end) {
                    if (value.charAt(index) !== C_SPACE) {
                      break;
                    }

                    index++;
                    size++;
                  }

                  if (index === end && value.charAt(index) === C_SPACE) {
                    index -= TAB_SIZE - 1;
                    size -= TAB_SIZE - 1;
                  }
                } else if (character !== C_NEWLINE && character !== '') {
                  currentMarker = null;
                }
              }
            }

            if (currentMarker) {
              if (!pedantic && marker !== currentMarker) {
                break;
              }

              prefixed = true;
            } else {
              if (
                !commonmark &&
                !indented &&
                value.charAt(startIndex) === C_SPACE
              ) {
                indented = true;
              } else if (commonmark && item) {
                indented = size >= item.indent || size > TAB_SIZE;
              }

              prefixed = false;
              index = startIndex;
            }

            line = value.slice(startIndex, nextIndex);
            content =
              startIndex === index ? line : value.slice(index, nextIndex);

            if (
              currentMarker === C_ASTERISK ||
              currentMarker === C_UNDERSCORE ||
              currentMarker === C_DASH
            ) {
              if (tokenizers.thematicBreak.call(self, eat, line, true)) {
                break;
              }
            }

            prevEmpty = empty;
            empty = !trim(content).length;

            if (indented && item) {
              item.value = item.value.concat(emptyLines, line);
              allLines = allLines.concat(emptyLines, line);
              emptyLines = [];
            } else if (prefixed) {
              if (emptyLines.length !== 0) {
                item.value.push('');
                item.trail = emptyLines.concat();
              }

              item = {
                value: [line],
                indent: size,
                trail: [],
              };

              items.push(item);
              allLines = allLines.concat(emptyLines, line);
              emptyLines = [];
            } else if (empty) {
              if (prevEmpty) {
                break;
              }

              emptyLines.push(line);
            } else {
              if (prevEmpty) {
                break;
              }

              if (interrupt(interuptors, tokenizers, self, [eat, line, true])) {
                break;
              }

              item.value = item.value.concat(emptyLines, line);
              allLines = allLines.concat(emptyLines, line);
              emptyLines = [];
            }

            index = nextIndex + 1;
          }

          node = eat(allLines.join(C_NEWLINE)).reset({
            type: 'list',
            ordered: ordered,
            start: start,
            loose: null,
            children: [],
          });

          enterTop = self.enterList();
          exitBlockquote = self.enterBlock();
          isLoose = false;
          index = -1;
          length = items.length;

          while (++index < length) {
            item = items[index].value.join(C_NEWLINE);
            now = eat.now();

            item = eat(item)(listItem(self, item, now), node);

            if (item.loose) {
              isLoose = true;
            }

            item = items[index].trail.join(C_NEWLINE);

            if (index !== length - 1) {
              item += C_NEWLINE;
            }

            eat(item);
          }

          enterTop();
          exitBlockquote();

          node.loose = isLoose;

          return node;
        }

        function listItem(ctx, value, position) {
          var offsets = ctx.offset;
          var fn = ctx.options.pedantic ? pedanticListItem : normalListItem;
          var checked = null;
          var task;
          var indent;

          value = fn.apply(null, arguments);

          if (ctx.options.gfm) {
            task = value.match(EXPRESSION_TASK_ITEM);

            if (task) {
              indent = task[0].length;
              checked = task[1].toLowerCase() === C_X_LOWER;
              offsets[position.line] += indent;
              value = value.slice(indent);
            }
          }

          return {
            type: 'listItem',
            loose:
              EXPRESSION_LOOSE_LIST_ITEM.test(value) ||
              value.charAt(value.length - 1) === C_NEWLINE,
            checked: checked,
            children: ctx.tokenizeBlock(value, position),
          };
        }

        /* Create a list-item using overly simple mechanics. */
        function pedanticListItem(ctx, value, position) {
          var offsets = ctx.offset;
          var line = position.line;

          /* Remove the list-item’s bullet. */
          value = value.replace(EXPRESSION_PEDANTIC_BULLET, replacer);

          /* The initial line was also matched by the below, so
   * we reset the `line`. */
          line = position.line;

          return value.replace(EXPRESSION_INITIAL_INDENT, replacer);

          /* A simple replacer which removed all matches,
   * and adds their length to `offset`. */
          function replacer($0) {
            offsets[line] = (offsets[line] || 0) + $0.length;
            line++;

            return '';
          }
        }

        /* Create a list-item using sane mechanics. */
        function normalListItem(ctx, value, position) {
          var offsets = ctx.offset;
          var line = position.line;
          var max;
          var bullet;
          var rest;
          var lines;
          var trimmedLines;
          var index;
          var length;

          /* Remove the list-item’s bullet. */
          value = value.replace(EXPRESSION_BULLET, replacer);

          lines = value.split(C_NEWLINE);

          trimmedLines = removeIndent(value, getIndent(max).indent).split(
            C_NEWLINE
          );

          /* We replaced the initial bullet with something
   * else above, which was used to trick
   * `removeIndentation` into removing some more
   * characters when possible.  However, that could
   * result in the initial line to be stripped more
   * than it should be. */
          trimmedLines[0] = rest;

          offsets[line] = (offsets[line] || 0) + bullet.length;
          line++;

          index = 0;
          length = lines.length;

          while (++index < length) {
            offsets[line] =
              (offsets[line] || 0) +
              lines[index].length -
              trimmedLines[index].length;
            line++;
          }

          return trimmedLines.join(C_NEWLINE);

          function replacer($0, $1, $2, $3, $4) {
            bullet = $1 + $2 + $3;
            rest = $4;

            /* Make sure that the first nine numbered list items
     * can indent with an extra space.  That is, when
     * the bullet did not receive an extra final space. */
            if (Number($2) < 10 && bullet.length % 2 === 1) {
              $2 = C_SPACE + $2;
            }

            max = $1 + repeat(C_SPACE, $2.length) + $3;

            return max + rest;
          }
        }

        /***/
      },
      /* 265 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(15);
        var repeat = __webpack_require__(40);
        var getIndent = __webpack_require__(92);

        module.exports = indentation;

        var C_SPACE = ' ';
        var C_NEWLINE = '\n';
        var C_TAB = '\t';

        /* Remove the minimum indent from every line in `value`.
 * Supports both tab, spaced, and mixed indentation (as
 * well as possible). */
        function indentation(value, maximum) {
          var values = value.split(C_NEWLINE);
          var position = values.length + 1;
          var minIndent = Infinity;
          var matrix = [];
          var index;
          var indentation;
          var stops;
          var padding;

          values.unshift(repeat(C_SPACE, maximum) + '!');

          while (position--) {
            indentation = getIndent(values[position]);

            matrix[position] = indentation.stops;

            if (trim(values[position]).length === 0) {
              continue;
            }

            if (indentation.indent) {
              if (indentation.indent > 0 && indentation.indent < minIndent) {
                minIndent = indentation.indent;
              }
            } else {
              minIndent = Infinity;

              break;
            }
          }

          if (minIndent !== Infinity) {
            position = values.length;

            while (position--) {
              stops = matrix[position];
              index = minIndent;

              while (index && !(index in stops)) {
                index--;
              }

              if (
                trim(values[position]).length !== 0 &&
                minIndent &&
                index !== minIndent
              ) {
                padding = C_TAB;
              } else {
                padding = '';
              }

              values[position] =
                padding +
                values[position].slice(index in stops ? stops[index] + 1 : 0);
            }
          }

          values.shift();

          return values.join(C_NEWLINE);
        }

        /***/
      },
      /* 266 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = setextHeading;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_EQUALS = '=';
        var C_DASH = '-';

        var MAX_HEADING_INDENT = 3;

        /* Map of characters which can be used to mark setext
 * headers, mapping to their corresponding depth. */
        var SETEXT_MARKERS = {};

        SETEXT_MARKERS[C_EQUALS] = 1;
        SETEXT_MARKERS[C_DASH] = 2;

        function setextHeading(eat, value, silent) {
          var self = this;
          var now = eat.now();
          var length = value.length;
          var index = -1;
          var subvalue = '';
          var content;
          var queue;
          var character;
          var marker;
          var depth;

          /* Eat initial indentation. */
          while (++index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {
              index--;
              break;
            }

            subvalue += character;
          }

          /* Eat content. */
          content = '';
          queue = '';

          while (++index < length) {
            character = value.charAt(index);

            if (character === C_NEWLINE) {
              index--;
              break;
            }

            if (character === C_SPACE || character === C_TAB) {
              queue += character;
            } else {
              content += queue + character;
              queue = '';
            }
          }

          now.column += subvalue.length;
          now.offset += subvalue.length;
          subvalue += content + queue;

          /* Ensure the content is followed by a newline and a
   * valid marker. */
          character = value.charAt(++index);
          marker = value.charAt(++index);

          if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {
            return;
          }

          subvalue += character;

          /* Eat Setext-line. */
          queue = marker;
          depth = SETEXT_MARKERS[marker];

          while (++index < length) {
            character = value.charAt(index);

            if (character !== marker) {
              if (character !== C_NEWLINE) {
                return;
              }

              index--;
              break;
            }

            queue += character;
          }

          if (silent) {
            return true;
          }

          return eat(subvalue + queue)({
            type: 'heading',
            depth: depth,
            children: self.tokenizeInline(content, now),
          });
        }

        /***/
      },
      /* 267 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var openCloseTag = __webpack_require__(93).openCloseTag;

        module.exports = blockHTML;

        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_NEWLINE = '\n';
        var C_LT = '<';

        function blockHTML(eat, value, silent) {
          var self = this;
          var blocks = self.options.blocks;
          var length = value.length;
          var index = 0;
          var next;
          var line;
          var offset;
          var character;
          var count;
          var sequence;
          var subvalue;

          var sequences = [
            [
              /^<(script|pre|style)(?=(\s|>|$))/i,
              /<\/(script|pre|style)>/i,
              true,
            ],
            [/^<!--/, /-->/, true],
            [/^<\?/, /\?>/, true],
            [/^<![A-Za-z]/, />/, true],
            [/^<!\[CDATA\[/, /\]\]>/, true],
            [
              new RegExp('^</?(' + blocks.join('|') + ')(?=(\\s|/?>|$))', 'i'),
              /^$/,
              true,
            ],
            [new RegExp(openCloseTag.source + '\\s*$'), /^$/, false],
          ];

          /* Eat initial spacing. */
          while (index < length) {
            character = value.charAt(index);

            if (character !== C_TAB && character !== C_SPACE) {
              break;
            }

            index++;
          }

          if (value.charAt(index) !== C_LT) {
            return;
          }

          next = value.indexOf(C_NEWLINE, index + 1);
          next = next === -1 ? length : next;
          line = value.slice(index, next);
          offset = -1;
          count = sequences.length;

          while (++offset < count) {
            if (sequences[offset][0].test(line)) {
              sequence = sequences[offset];
              break;
            }
          }

          if (!sequence) {
            return;
          }

          if (silent) {
            return sequence[2];
          }

          index = next;

          if (!sequence[1].test(line)) {
            while (index < length) {
              next = value.indexOf(C_NEWLINE, index + 1);
              next = next === -1 ? length : next;
              line = value.slice(index + 1, next);

              if (sequence[1].test(line)) {
                if (line) {
                  index = next;
                }

                break;
              }

              index = next;
            }
          }

          subvalue = value.slice(0, index);

          return eat(subvalue)({ type: 'html', value: subvalue });
        }

        /***/
      },
      /* 268 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var normalize = __webpack_require__(43);

        module.exports = footnoteDefinition;
        footnoteDefinition.notInList = true;
        footnoteDefinition.notInBlock = true;

        var C_BACKSLASH = '\\';
        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_BRACKET_OPEN = '[';
        var C_BRACKET_CLOSE = ']';
        var C_CARET = '^';
        var C_COLON = ':';

        var EXPRESSION_INITIAL_TAB = /^( {4}|\t)?/gm;

        function footnoteDefinition(eat, value, silent) {
          var self = this;
          var offsets = self.offset;
          var index;
          var length;
          var subvalue;
          var now;
          var currentLine;
          var content;
          var queue;
          var subqueue;
          var character;
          var identifier;
          var add;
          var exit;

          if (!self.options.footnotes) {
            return;
          }

          index = 0;
          length = value.length;
          subvalue = '';
          now = eat.now();
          currentLine = now.line;

          while (index < length) {
            character = value.charAt(index);

            if (!whitespace(character)) {
              break;
            }

            subvalue += character;
            index++;
          }

          if (
            value.charAt(index) !== C_BRACKET_OPEN ||
            value.charAt(index + 1) !== C_CARET
          ) {
            return;
          }

          subvalue += C_BRACKET_OPEN + C_CARET;
          index = subvalue.length;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (character === C_BRACKET_CLOSE) {
              break;
            } else if (character === C_BACKSLASH) {
              queue += character;
              index++;
              character = value.charAt(index);
            }

            queue += character;
            index++;
          }

          if (
            !queue ||
            value.charAt(index) !== C_BRACKET_CLOSE ||
            value.charAt(index + 1) !== C_COLON
          ) {
            return;
          }

          if (silent) {
            return true;
          }

          identifier = normalize(queue);
          subvalue += queue + C_BRACKET_CLOSE + C_COLON;
          index = subvalue.length;

          while (index < length) {
            character = value.charAt(index);

            if (character !== C_TAB && character !== C_SPACE) {
              break;
            }

            subvalue += character;
            index++;
          }

          now.column += subvalue.length;
          now.offset += subvalue.length;
          queue = '';
          content = '';
          subqueue = '';

          while (index < length) {
            character = value.charAt(index);

            if (character === C_NEWLINE) {
              subqueue = character;
              index++;

              while (index < length) {
                character = value.charAt(index);

                if (character !== C_NEWLINE) {
                  break;
                }

                subqueue += character;
                index++;
              }

              queue += subqueue;
              subqueue = '';

              while (index < length) {
                character = value.charAt(index);

                if (character !== C_SPACE) {
                  break;
                }

                subqueue += character;
                index++;
              }

              if (subqueue.length === 0) {
                break;
              }

              queue += subqueue;
            }

            if (queue) {
              content += queue;
              queue = '';
            }

            content += character;
            index++;
          }

          subvalue += content;

          content = content.replace(EXPRESSION_INITIAL_TAB, function(line) {
            offsets[currentLine] = (offsets[currentLine] || 0) + line.length;
            currentLine++;

            return '';
          });

          add = eat(subvalue);

          exit = self.enterBlock();
          content = self.tokenizeBlock(content, now);
          exit();

          return add({
            type: 'footnoteDefinition',
            identifier: identifier,
            children: content,
          });
        }

        /***/
      },
      /* 269 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = collapse;

        /* collapse(' \t\nbar \nbaz\t'); // ' bar baz ' */
        function collapse(value) {
          return String(value).replace(/\s+/g, ' ');
        }

        /***/
      },
      /* 270 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var normalize = __webpack_require__(43);

        module.exports = definition;
        definition.notInList = true;
        definition.notInBlock = true;

        var C_DOUBLE_QUOTE = '"';
        var C_SINGLE_QUOTE = "'";
        var C_BACKSLASH = '\\';
        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';
        var C_BRACKET_OPEN = '[';
        var C_BRACKET_CLOSE = ']';
        var C_PAREN_OPEN = '(';
        var C_PAREN_CLOSE = ')';
        var C_COLON = ':';
        var C_LT = '<';
        var C_GT = '>';

        function definition(eat, value, silent) {
          var self = this;
          var commonmark = self.options.commonmark;
          var index = 0;
          var length = value.length;
          var subvalue = '';
          var beforeURL;
          var beforeTitle;
          var queue;
          var character;
          var test;
          var identifier;
          var url;
          var title;

          while (index < length) {
            character = value.charAt(index);

            if (character !== C_SPACE && character !== C_TAB) {
              break;
            }

            subvalue += character;
            index++;
          }

          character = value.charAt(index);

          if (character !== C_BRACKET_OPEN) {
            return;
          }

          index++;
          subvalue += character;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (character === C_BRACKET_CLOSE) {
              break;
            } else if (character === C_BACKSLASH) {
              queue += character;
              index++;
              character = value.charAt(index);
            }

            queue += character;
            index++;
          }

          if (
            !queue ||
            value.charAt(index) !== C_BRACKET_CLOSE ||
            value.charAt(index + 1) !== C_COLON
          ) {
            return;
          }

          identifier = queue;
          subvalue += queue + C_BRACKET_CLOSE + C_COLON;
          index = subvalue.length;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (
              character !== C_TAB &&
              character !== C_SPACE &&
              character !== C_NEWLINE
            ) {
              break;
            }

            subvalue += character;
            index++;
          }

          character = value.charAt(index);
          queue = '';
          beforeURL = subvalue;

          if (character === C_LT) {
            index++;

            while (index < length) {
              character = value.charAt(index);

              if (!isEnclosedURLCharacter(character)) {
                break;
              }

              queue += character;
              index++;
            }

            character = value.charAt(index);

            if (character === isEnclosedURLCharacter.delimiter) {
              subvalue += C_LT + queue + character;
              index++;
            } else {
              if (commonmark) {
                return;
              }

              index -= queue.length + 1;
              queue = '';
            }
          }

          if (!queue) {
            while (index < length) {
              character = value.charAt(index);

              if (!isUnclosedURLCharacter(character)) {
                break;
              }

              queue += character;
              index++;
            }

            subvalue += queue;
          }

          if (!queue) {
            return;
          }

          url = queue;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (
              character !== C_TAB &&
              character !== C_SPACE &&
              character !== C_NEWLINE
            ) {
              break;
            }

            queue += character;
            index++;
          }

          character = value.charAt(index);
          test = null;

          if (character === C_DOUBLE_QUOTE) {
            test = C_DOUBLE_QUOTE;
          } else if (character === C_SINGLE_QUOTE) {
            test = C_SINGLE_QUOTE;
          } else if (character === C_PAREN_OPEN) {
            test = C_PAREN_CLOSE;
          }

          if (!test) {
            queue = '';
            index = subvalue.length;
          } else if (queue) {
            subvalue += queue + character;
            index = subvalue.length;
            queue = '';

            while (index < length) {
              character = value.charAt(index);

              if (character === test) {
                break;
              }

              if (character === C_NEWLINE) {
                index++;
                character = value.charAt(index);

                if (character === C_NEWLINE || character === test) {
                  return;
                }

                queue += C_NEWLINE;
              }

              queue += character;
              index++;
            }

            character = value.charAt(index);

            if (character !== test) {
              return;
            }

            beforeTitle = subvalue;
            subvalue += queue + character;
            index++;
            title = queue;
            queue = '';
          } else {
            return;
          }

          while (index < length) {
            character = value.charAt(index);

            if (character !== C_TAB && character !== C_SPACE) {
              break;
            }

            subvalue += character;
            index++;
          }

          character = value.charAt(index);

          if (!character || character === C_NEWLINE) {
            if (silent) {
              return true;
            }

            beforeURL = eat(beforeURL).test().end;
            url = self.decode.raw(self.unescape(url), beforeURL, {
              nonTerminated: false,
            });

            if (title) {
              beforeTitle = eat(beforeTitle).test().end;
              title = self.decode.raw(self.unescape(title), beforeTitle);
            }

            return eat(subvalue)({
              type: 'definition',
              identifier: normalize(identifier),
              title: title || null,
              url: url,
            });
          }
        }

        /* Check if `character` can be inside an enclosed URI. */
        function isEnclosedURLCharacter(character) {
          return (
            character !== C_GT &&
            character !== C_BRACKET_OPEN &&
            character !== C_BRACKET_CLOSE
          );
        }

        isEnclosedURLCharacter.delimiter = C_GT;

        /* Check if `character` can be inside an unclosed URI. */
        function isUnclosedURLCharacter(character) {
          return (
            character !== C_BRACKET_OPEN &&
            character !== C_BRACKET_CLOSE &&
            !whitespace(character)
          );
        }

        /***/
      },
      /* 271 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);

        module.exports = table;

        var C_BACKSLASH = '\\';
        var C_TICK = '`';
        var C_DASH = '-';
        var C_PIPE = '|';
        var C_COLON = ':';
        var C_SPACE = ' ';
        var C_NEWLINE = '\n';
        var C_TAB = '\t';

        var MIN_TABLE_COLUMNS = 1;
        var MIN_TABLE_ROWS = 2;

        var TABLE_ALIGN_LEFT = 'left';
        var TABLE_ALIGN_CENTER = 'center';
        var TABLE_ALIGN_RIGHT = 'right';
        var TABLE_ALIGN_NONE = null;

        function table(eat, value, silent) {
          var self = this;
          var index;
          var alignments;
          var alignment;
          var subvalue;
          var row;
          var length;
          var lines;
          var queue;
          var character;
          var hasDash;
          var align;
          var cell;
          var preamble;
          var count;
          var opening;
          var now;
          var position;
          var lineCount;
          var line;
          var rows;
          var table;
          var lineIndex;
          var pipeIndex;
          var first;

          /* Exit when not in gfm-mode. */
          if (!self.options.gfm) {
            return;
          }

          /* Get the rows.
   * Detecting tables soon is hard, so there are some
   * checks for performance here, such as the minimum
   * number of rows, and allowed characters in the
   * alignment row. */
          index = 0;
          lineCount = 0;
          length = value.length + 1;
          lines = [];

          while (index < length) {
            lineIndex = value.indexOf(C_NEWLINE, index);
            pipeIndex = value.indexOf(C_PIPE, index + 1);

            if (lineIndex === -1) {
              lineIndex = value.length;
            }

            if (pipeIndex === -1 || pipeIndex > lineIndex) {
              if (lineCount < MIN_TABLE_ROWS) {
                return;
              }

              break;
            }

            lines.push(value.slice(index, lineIndex));
            lineCount++;
            index = lineIndex + 1;
          }

          /* Parse the alignment row. */
          subvalue = lines.join(C_NEWLINE);
          alignments = lines.splice(1, 1)[0] || [];
          index = 0;
          length = alignments.length;
          lineCount--;
          alignment = false;
          align = [];

          while (index < length) {
            character = alignments.charAt(index);

            if (character === C_PIPE) {
              hasDash = null;

              if (alignment === false) {
                if (first === false) {
                  return;
                }
              } else {
                align.push(alignment);
                alignment = false;
              }

              first = false;
            } else if (character === C_DASH) {
              hasDash = true;
              alignment = alignment || TABLE_ALIGN_NONE;
            } else if (character === C_COLON) {
              if (alignment === TABLE_ALIGN_LEFT) {
                alignment = TABLE_ALIGN_CENTER;
              } else if (hasDash && alignment === TABLE_ALIGN_NONE) {
                alignment = TABLE_ALIGN_RIGHT;
              } else {
                alignment = TABLE_ALIGN_LEFT;
              }
            } else if (!whitespace(character)) {
              return;
            }

            index++;
          }

          if (alignment !== false) {
            align.push(alignment);
          }

          /* Exit when without enough columns. */
          if (align.length < MIN_TABLE_COLUMNS) {
            return;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          /* Parse the rows. */
          position = -1;
          rows = [];

          table = eat(subvalue).reset({
            type: 'table',
            align: align,
            children: rows,
          });

          while (++position < lineCount) {
            line = lines[position];
            row = { type: 'tableRow', children: [] };

            /* Eat a newline character when this is not the
     * first row. */
            if (position) {
              eat(C_NEWLINE);
            }

            /* Eat the row. */
            eat(line).reset(row, table);

            length = line.length + 1;
            index = 0;
            queue = '';
            cell = '';
            preamble = true;
            count = null;
            opening = null;

            while (index < length) {
              character = line.charAt(index);

              if (character === C_TAB || character === C_SPACE) {
                if (cell) {
                  queue += character;
                } else {
                  eat(character);
                }

                index++;
                continue;
              }

              if (character === '' || character === C_PIPE) {
                if (preamble) {
                  eat(character);
                } else {
                  if (character && opening) {
                    queue += character;
                    index++;
                    continue;
                  }

                  if ((cell || character) && !preamble) {
                    subvalue = cell;

                    if (queue.length > 1) {
                      if (character) {
                        subvalue += queue.slice(0, queue.length - 1);
                        queue = queue.charAt(queue.length - 1);
                      } else {
                        subvalue += queue;
                        queue = '';
                      }
                    }

                    now = eat.now();

                    eat(subvalue)(
                      {
                        type: 'tableCell',
                        children: self.tokenizeInline(cell, now),
                      },
                      row
                    );
                  }

                  eat(queue + character);

                  queue = '';
                  cell = '';
                }
              } else {
                if (queue) {
                  cell += queue;
                  queue = '';
                }

                cell += character;

                if (character === C_BACKSLASH && index !== length - 2) {
                  cell += line.charAt(index + 1);
                  index++;
                }

                if (character === C_TICK) {
                  count = 1;

                  while (line.charAt(index + 1) === character) {
                    cell += character;
                    index++;
                    count++;
                  }

                  if (!opening) {
                    opening = count;
                  } else if (count >= opening) {
                    opening = 0;
                  }
                }
              }

              preamble = false;
              index++;
            }

            /* Eat the alignment row. */
            if (!position) {
              eat(C_NEWLINE + alignments);
            }
          }

          return table;
        }

        /***/
      },
      /* 272 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(15);
        var decimal = __webpack_require__(22);
        var trimTrailingLines = __webpack_require__(41);
        var interrupt = __webpack_require__(42);

        module.exports = paragraph;

        var C_NEWLINE = '\n';
        var C_TAB = '\t';
        var C_SPACE = ' ';

        var TAB_SIZE = 4;

        /* Tokenise paragraph. */
        function paragraph(eat, value, silent) {
          var self = this;
          var settings = self.options;
          var commonmark = settings.commonmark;
          var gfm = settings.gfm;
          var tokenizers = self.blockTokenizers;
          var interruptors = self.interruptParagraph;
          var index = value.indexOf(C_NEWLINE);
          var length = value.length;
          var position;
          var subvalue;
          var character;
          var size;
          var now;

          while (index < length) {
            /* Eat everything if there’s no following newline. */
            if (index === -1) {
              index = length;
              break;
            }

            /* Stop if the next character is NEWLINE. */
            if (value.charAt(index + 1) === C_NEWLINE) {
              break;
            }

            /* In commonmark-mode, following indented lines
     * are part of the paragraph. */
            if (commonmark) {
              size = 0;
              position = index + 1;

              while (position < length) {
                character = value.charAt(position);

                if (character === C_TAB) {
                  size = TAB_SIZE;
                  break;
                } else if (character === C_SPACE) {
                  size++;
                } else {
                  break;
                }

                position++;
              }

              if (size >= TAB_SIZE) {
                index = value.indexOf(C_NEWLINE, index + 1);
                continue;
              }
            }

            subvalue = value.slice(index + 1);

            /* Check if the following code contains a possible
     * block. */
            if (
              interrupt(interruptors, tokenizers, self, [eat, subvalue, true])
            ) {
              break;
            }

            /* Break if the following line starts a list, when
     * already in a list, or when in commonmark, or when
     * in gfm mode and the bullet is *not* numeric. */
            if (
              tokenizers.list.call(self, eat, subvalue, true) &&
              (self.inList ||
                commonmark ||
                (gfm && !decimal(trim.left(subvalue).charAt(0))))
            ) {
              break;
            }

            position = index;
            index = value.indexOf(C_NEWLINE, index + 1);

            if (index !== -1 && trim(value.slice(position, index)) === '') {
              index = position;
              break;
            }
          }

          subvalue = value.slice(0, index);

          if (trim(subvalue) === '') {
            eat(subvalue);

            return null;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          now = eat.now();
          subvalue = trimTrailingLines(subvalue);

          return eat(subvalue)({
            type: 'paragraph',
            children: self.tokenizeInline(subvalue, now),
          });
        }

        /***/
      },
      /* 273 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var locate = __webpack_require__(274);

        module.exports = escape;
        escape.locator = locate;

        function escape(eat, value, silent) {
          var self = this;
          var character;
          var node;

          if (value.charAt(0) === '\\') {
            character = value.charAt(1);

            if (self.escape.indexOf(character) !== -1) {
              /* istanbul ignore if - never used (yet) */
              if (silent) {
                return true;
              }

              if (character === '\n') {
                node = { type: 'break' };
              } else {
                node = {
                  type: 'text',
                  value: character,
                };
              }

              return eat('\\' + character)(node);
            }
          }
        }

        /***/
      },
      /* 274 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          return value.indexOf('\\', fromIndex);
        }

        /***/
      },
      /* 275 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var decode = __webpack_require__(39);
        var locate = __webpack_require__(94);

        module.exports = autoLink;
        autoLink.locator = locate;
        autoLink.notInLink = true;

        var C_LT = '<';
        var C_GT = '>';
        var C_AT_SIGN = '@';
        var C_SLASH = '/';
        var MAILTO = 'mailto:';
        var MAILTO_LENGTH = MAILTO.length;

        /* Tokenise a link. */
        function autoLink(eat, value, silent) {
          var self;
          var subvalue;
          var length;
          var index;
          var queue;
          var character;
          var hasAtCharacter;
          var link;
          var now;
          var content;
          var tokenizers;
          var exit;

          if (value.charAt(0) !== C_LT) {
            return;
          }

          self = this;
          subvalue = '';
          length = value.length;
          index = 0;
          queue = '';
          hasAtCharacter = false;
          link = '';

          index++;
          subvalue = C_LT;

          while (index < length) {
            character = value.charAt(index);

            if (
              whitespace(character) ||
              character === C_GT ||
              character === C_AT_SIGN ||
              (character === ':' && value.charAt(index + 1) === C_SLASH)
            ) {
              break;
            }

            queue += character;
            index++;
          }

          if (!queue) {
            return;
          }

          link += queue;
          queue = '';

          character = value.charAt(index);
          link += character;
          index++;

          if (character === C_AT_SIGN) {
            hasAtCharacter = true;
          } else {
            if (character !== ':' || value.charAt(index + 1) !== C_SLASH) {
              return;
            }

            link += C_SLASH;
            index++;
          }

          while (index < length) {
            character = value.charAt(index);

            if (whitespace(character) || character === C_GT) {
              break;
            }

            queue += character;
            index++;
          }

          character = value.charAt(index);

          if (!queue || character !== C_GT) {
            return;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          link += queue;
          content = link;
          subvalue += link + character;
          now = eat.now();
          now.column++;
          now.offset++;

          if (hasAtCharacter) {
            if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {
              content = content.substr(MAILTO_LENGTH);
              now.column += MAILTO_LENGTH;
              now.offset += MAILTO_LENGTH;
            } else {
              link = MAILTO + link;
            }
          }

          /* Temporarily remove all tokenizers except text in autolinks. */
          tokenizers = self.inlineTokenizers;
          self.inlineTokenizers = { text: tokenizers.text };

          exit = self.enterLink();

          content = self.tokenizeInline(content, now);

          self.inlineTokenizers = tokenizers;
          exit();

          return eat(subvalue)({
            type: 'link',
            title: null,
            url: decode(link, { nonTerminated: false }),
            children: content,
          });
        }

        /***/
      },
      /* 276 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var decode = __webpack_require__(39);
        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(277);

        module.exports = url;
        url.locator = locate;
        url.notInLink = true;

        var C_BRACKET_OPEN = '[';
        var C_BRACKET_CLOSE = ']';
        var C_PAREN_OPEN = '(';
        var C_PAREN_CLOSE = ')';
        var C_LT = '<';
        var C_AT_SIGN = '@';

        var HTTP_PROTOCOL = 'http://';
        var HTTPS_PROTOCOL = 'https://';
        var MAILTO_PROTOCOL = 'mailto:';

        var PROTOCOLS = [HTTP_PROTOCOL, HTTPS_PROTOCOL, MAILTO_PROTOCOL];

        var PROTOCOLS_LENGTH = PROTOCOLS.length;

        function url(eat, value, silent) {
          var self = this;
          var subvalue;
          var content;
          var character;
          var index;
          var position;
          var protocol;
          var match;
          var length;
          var queue;
          var parenCount;
          var nextCharacter;
          var exit;

          if (!self.options.gfm) {
            return;
          }

          subvalue = '';
          index = -1;
          length = PROTOCOLS_LENGTH;

          while (++index < length) {
            protocol = PROTOCOLS[index];
            match = value.slice(0, protocol.length);

            if (match.toLowerCase() === protocol) {
              subvalue = match;
              break;
            }
          }

          if (!subvalue) {
            return;
          }

          index = subvalue.length;
          length = value.length;
          queue = '';
          parenCount = 0;

          while (index < length) {
            character = value.charAt(index);

            if (whitespace(character) || character === C_LT) {
              break;
            }

            if (
              character === '.' ||
              character === ',' ||
              character === ':' ||
              character === ';' ||
              character === '"' ||
              character === "'" ||
              character === ')' ||
              character === ']'
            ) {
              nextCharacter = value.charAt(index + 1);

              if (!nextCharacter || whitespace(nextCharacter)) {
                break;
              }
            }

            if (character === C_PAREN_OPEN || character === C_BRACKET_OPEN) {
              parenCount++;
            }

            if (character === C_PAREN_CLOSE || character === C_BRACKET_CLOSE) {
              parenCount--;

              if (parenCount < 0) {
                break;
              }
            }

            queue += character;
            index++;
          }

          if (!queue) {
            return;
          }

          subvalue += queue;
          content = subvalue;

          if (protocol === MAILTO_PROTOCOL) {
            position = queue.indexOf(C_AT_SIGN);

            if (position === -1 || position === length - 1) {
              return;
            }

            content = content.substr(MAILTO_PROTOCOL.length);
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          exit = self.enterLink();
          content = self.tokenizeInline(content, eat.now());
          exit();

          return eat(subvalue)({
            type: 'link',
            title: null,
            url: decode(subvalue, { nonTerminated: false }),
            children: content,
          });
        }

        /***/
      },
      /* 277 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        var PROTOCOLS = ['https://', 'http://', 'mailto:'];

        function locate(value, fromIndex) {
          var length = PROTOCOLS.length;
          var index = -1;
          var min = -1;
          var position;

          if (!this.options.gfm) {
            return -1;
          }

          while (++index < length) {
            position = value.indexOf(PROTOCOLS[index], fromIndex);

            if (position !== -1 && (position < min || min === -1)) {
              min = position;
            }
          }

          return min;
        }

        /***/
      },
      /* 278 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var alphabetical = __webpack_require__(90);
        var locate = __webpack_require__(94);
        var tag = __webpack_require__(93).tag;

        module.exports = inlineHTML;
        inlineHTML.locator = locate;

        var EXPRESSION_HTML_LINK_OPEN = /^<a /i;
        var EXPRESSION_HTML_LINK_CLOSE = /^<\/a>/i;

        function inlineHTML(eat, value, silent) {
          var self = this;
          var length = value.length;
          var character;
          var subvalue;

          if (value.charAt(0) !== '<' || length < 3) {
            return;
          }

          character = value.charAt(1);

          if (
            !alphabetical(character) &&
            character !== '?' &&
            character !== '!' &&
            character !== '/'
          ) {
            return;
          }

          subvalue = value.match(tag);

          if (!subvalue) {
            return;
          }

          /* istanbul ignore if - not used yet. */
          if (silent) {
            return true;
          }

          subvalue = subvalue[0];

          if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {
            self.inLink = true;
          } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {
            self.inLink = false;
          }

          return eat(subvalue)({ type: 'html', value: subvalue });
        }

        /***/
      },
      /* 279 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(95);

        module.exports = link;
        link.locator = locate;

        var own = {}.hasOwnProperty;

        var C_BACKSLASH = '\\';
        var C_BRACKET_OPEN = '[';
        var C_BRACKET_CLOSE = ']';
        var C_PAREN_OPEN = '(';
        var C_PAREN_CLOSE = ')';
        var C_LT = '<';
        var C_GT = '>';
        var C_TICK = '`';
        var C_DOUBLE_QUOTE = '"';
        var C_SINGLE_QUOTE = "'";

        /* Map of characters, which can be used to mark link
 * and image titles. */
        var LINK_MARKERS = {};

        LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;
        LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;

        /* Map of characters, which can be used to mark link
 * and image titles in commonmark-mode. */
        var COMMONMARK_LINK_MARKERS = {};

        COMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;
        COMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;
        COMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;

        function link(eat, value, silent) {
          var self = this;
          var subvalue = '';
          var index = 0;
          var character = value.charAt(0);
          var pedantic = self.options.pedantic;
          var commonmark = self.options.commonmark;
          var gfm = self.options.gfm;
          var closed;
          var count;
          var opening;
          var beforeURL;
          var beforeTitle;
          var subqueue;
          var hasMarker;
          var markers;
          var isImage;
          var content;
          var marker;
          var length;
          var title;
          var depth;
          var queue;
          var url;
          var now;
          var exit;
          var node;

          /* Detect whether this is an image. */
          if (character === '!') {
            isImage = true;
            subvalue = character;
            character = value.charAt(++index);
          }

          /* Eat the opening. */
          if (character !== C_BRACKET_OPEN) {
            return;
          }

          /* Exit when this is a link and we’re already inside
   * a link. */
          if (!isImage && self.inLink) {
            return;
          }

          subvalue += character;
          queue = '';
          index++;

          /* Eat the content. */
          length = value.length;
          now = eat.now();
          depth = 0;

          now.column += index;
          now.offset += index;

          while (index < length) {
            character = value.charAt(index);
            subqueue = character;

            if (character === C_TICK) {
              /* Inline-code in link content. */
              count = 1;

              while (value.charAt(index + 1) === C_TICK) {
                subqueue += character;
                index++;
                count++;
              }

              if (!opening) {
                opening = count;
              } else if (count >= opening) {
                opening = 0;
              }
            } else if (character === C_BACKSLASH) {
              /* Allow brackets to be escaped. */
              index++;
              subqueue += value.charAt(index);
              /* In GFM mode, brackets in code still count.
       * In all other modes, they don’t.  This empty
       * block prevents the next statements are
       * entered. */
            } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {
              depth++;
            } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {
              if (depth) {
                depth--;
              } else {
                /* Allow white-space between content and
         * url in GFM mode. */
                if (!pedantic) {
                  while (index < length) {
                    character = value.charAt(index + 1);

                    if (!whitespace(character)) {
                      break;
                    }

                    subqueue += character;
                    index++;
                  }
                }

                if (value.charAt(index + 1) !== C_PAREN_OPEN) {
                  return;
                }

                subqueue += C_PAREN_OPEN;
                closed = true;
                index++;

                break;
              }
            }

            queue += subqueue;
            subqueue = '';
            index++;
          }

          /* Eat the content closing. */
          if (!closed) {
            return;
          }

          content = queue;
          subvalue += queue + subqueue;
          index++;

          /* Eat white-space. */
          while (index < length) {
            character = value.charAt(index);

            if (!whitespace(character)) {
              break;
            }

            subvalue += character;
            index++;
          }

          /* Eat the URL. */
          character = value.charAt(index);
          markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;
          queue = '';
          beforeURL = subvalue;

          if (character === C_LT) {
            index++;
            beforeURL += C_LT;

            while (index < length) {
              character = value.charAt(index);

              if (character === C_GT) {
                break;
              }

              if (commonmark && character === '\n') {
                return;
              }

              queue += character;
              index++;
            }

            if (value.charAt(index) !== C_GT) {
              return;
            }

            subvalue += C_LT + queue + C_GT;
            url = queue;
            index++;
          } else {
            character = null;
            subqueue = '';

            while (index < length) {
              character = value.charAt(index);

              if (subqueue && own.call(markers, character)) {
                break;
              }

              if (whitespace(character)) {
                if (!pedantic) {
                  break;
                }

                subqueue += character;
              } else {
                if (character === C_PAREN_OPEN) {
                  depth++;
                } else if (character === C_PAREN_CLOSE) {
                  if (depth === 0) {
                    break;
                  }

                  depth--;
                }

                queue += subqueue;
                subqueue = '';

                if (character === C_BACKSLASH) {
                  queue += C_BACKSLASH;
                  character = value.charAt(++index);
                }

                queue += character;
              }

              index++;
            }

            subvalue += queue;
            url = queue;
            index = subvalue.length;
          }

          /* Eat white-space. */
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (!whitespace(character)) {
              break;
            }

            queue += character;
            index++;
          }

          character = value.charAt(index);
          subvalue += queue;

          /* Eat the title. */
          if (queue && own.call(markers, character)) {
            index++;
            subvalue += character;
            queue = '';
            marker = markers[character];
            beforeTitle = subvalue;

            /* In commonmark-mode, things are pretty easy: the
     * marker cannot occur inside the title.
     *
     * Non-commonmark does, however, support nested
     * delimiters. */
            if (commonmark) {
              while (index < length) {
                character = value.charAt(index);

                if (character === marker) {
                  break;
                }

                if (character === C_BACKSLASH) {
                  queue += C_BACKSLASH;
                  character = value.charAt(++index);
                }

                index++;
                queue += character;
              }

              character = value.charAt(index);

              if (character !== marker) {
                return;
              }

              title = queue;
              subvalue += queue + character;
              index++;

              while (index < length) {
                character = value.charAt(index);

                if (!whitespace(character)) {
                  break;
                }

                subvalue += character;
                index++;
              }
            } else {
              subqueue = '';

              while (index < length) {
                character = value.charAt(index);

                if (character === marker) {
                  if (hasMarker) {
                    queue += marker + subqueue;
                    subqueue = '';
                  }

                  hasMarker = true;
                } else if (!hasMarker) {
                  queue += character;
                } else if (character === C_PAREN_CLOSE) {
                  subvalue += queue + marker + subqueue;
                  title = queue;
                  break;
                } else if (whitespace(character)) {
                  subqueue += character;
                } else {
                  queue += marker + subqueue + character;
                  subqueue = '';
                  hasMarker = false;
                }

                index++;
              }
            }
          }

          if (value.charAt(index) !== C_PAREN_CLOSE) {
            return;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          subvalue += C_PAREN_CLOSE;

          url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {
            nonTerminated: false,
          });

          if (title) {
            beforeTitle = eat(beforeTitle).test().end;
            title = self.decode.raw(self.unescape(title), beforeTitle);
          }

          node = {
            type: isImage ? 'image' : 'link',
            title: title || null,
            url: url,
          };

          if (isImage) {
            node.alt = self.decode.raw(self.unescape(content), now) || null;
          } else {
            exit = self.enterLink();
            node.children = self.tokenizeInline(content, now);
            exit();
          }

          return eat(subvalue)(node);
        }

        /***/
      },
      /* 280 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(95);
        var normalize = __webpack_require__(43);

        module.exports = reference;
        reference.locator = locate;

        var T_LINK = 'link';
        var T_IMAGE = 'image';
        var T_FOOTNOTE = 'footnote';
        var REFERENCE_TYPE_SHORTCUT = 'shortcut';
        var REFERENCE_TYPE_COLLAPSED = 'collapsed';
        var REFERENCE_TYPE_FULL = 'full';
        var C_CARET = '^';
        var C_BACKSLASH = '\\';
        var C_BRACKET_OPEN = '[';
        var C_BRACKET_CLOSE = ']';

        function reference(eat, value, silent) {
          var self = this;
          var character = value.charAt(0);
          var index = 0;
          var length = value.length;
          var subvalue = '';
          var intro = '';
          var type = T_LINK;
          var referenceType = REFERENCE_TYPE_SHORTCUT;
          var content;
          var identifier;
          var now;
          var node;
          var exit;
          var queue;
          var bracketed;
          var depth;

          /* Check whether we’re eating an image. */
          if (character === '!') {
            type = T_IMAGE;
            intro = character;
            character = value.charAt(++index);
          }

          if (character !== C_BRACKET_OPEN) {
            return;
          }

          index++;
          intro += character;
          queue = '';

          /* Check whether we’re eating a footnote. */
          if (self.options.footnotes && value.charAt(index) === C_CARET) {
            /* Exit if `![^` is found, so the `!` will be seen as text after this,
     * and we’ll enter this function again when `[^` is found. */
            if (type === T_IMAGE) {
              return;
            }

            intro += C_CARET;
            index++;
            type = T_FOOTNOTE;
          }

          /* Eat the text. */
          depth = 0;

          while (index < length) {
            character = value.charAt(index);

            if (character === C_BRACKET_OPEN) {
              bracketed = true;
              depth++;
            } else if (character === C_BRACKET_CLOSE) {
              if (!depth) {
                break;
              }

              depth--;
            }

            if (character === C_BACKSLASH) {
              queue += C_BACKSLASH;
              character = value.charAt(++index);
            }

            queue += character;
            index++;
          }

          subvalue = queue;
          content = queue;
          character = value.charAt(index);

          if (character !== C_BRACKET_CLOSE) {
            return;
          }

          index++;
          subvalue += character;
          queue = '';

          while (index < length) {
            character = value.charAt(index);

            if (!whitespace(character)) {
              break;
            }

            queue += character;
            index++;
          }

          character = value.charAt(index);

          /* Inline footnotes cannot have an identifier. */
          if (type !== T_FOOTNOTE && character === C_BRACKET_OPEN) {
            identifier = '';
            queue += character;
            index++;

            while (index < length) {
              character = value.charAt(index);

              if (
                character === C_BRACKET_OPEN ||
                character === C_BRACKET_CLOSE
              ) {
                break;
              }

              if (character === C_BACKSLASH) {
                identifier += C_BACKSLASH;
                character = value.charAt(++index);
              }

              identifier += character;
              index++;
            }

            character = value.charAt(index);

            if (character === C_BRACKET_CLOSE) {
              referenceType = identifier
                ? REFERENCE_TYPE_FULL
                : REFERENCE_TYPE_COLLAPSED;
              queue += identifier + character;
              index++;
            } else {
              identifier = '';
            }

            subvalue += queue;
            queue = '';
          } else {
            if (!content) {
              return;
            }

            identifier = content;
          }

          /* Brackets cannot be inside the identifier. */
          if (referenceType !== REFERENCE_TYPE_FULL && bracketed) {
            return;
          }

          subvalue = intro + subvalue;

          if (type === T_LINK && self.inLink) {
            return null;
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          if (type === T_FOOTNOTE && content.indexOf(' ') !== -1) {
            return eat(subvalue)({
              type: 'footnote',
              children: this.tokenizeInline(content, eat.now()),
            });
          }

          now = eat.now();
          now.column += intro.length;
          now.offset += intro.length;
          identifier =
            referenceType === REFERENCE_TYPE_FULL ? identifier : content;

          node = {
            type: type + 'Reference',
            identifier: normalize(identifier),
          };

          if (type === T_LINK || type === T_IMAGE) {
            node.referenceType = referenceType;
          }

          if (type === T_LINK) {
            exit = self.enterLink();
            node.children = self.tokenizeInline(content, now);
            exit();
          } else if (type === T_IMAGE) {
            node.alt = self.decode.raw(self.unescape(content), now) || null;
          }

          return eat(subvalue)(node);
        }

        /***/
      },
      /* 281 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(15);
        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(282);

        module.exports = strong;
        strong.locator = locate;

        var C_ASTERISK = '*';
        var C_UNDERSCORE = '_';

        function strong(eat, value, silent) {
          var self = this;
          var index = 0;
          var character = value.charAt(index);
          var now;
          var pedantic;
          var marker;
          var queue;
          var subvalue;
          var length;
          var prev;

          if (
            (character !== C_ASTERISK && character !== C_UNDERSCORE) ||
            value.charAt(++index) !== character
          ) {
            return;
          }

          pedantic = self.options.pedantic;
          marker = character;
          subvalue = marker + marker;
          length = value.length;
          index++;
          queue = '';
          character = '';

          if (pedantic && whitespace(value.charAt(index))) {
            return;
          }

          while (index < length) {
            prev = character;
            character = value.charAt(index);

            if (
              character === marker &&
              value.charAt(index + 1) === marker &&
              (!pedantic || !whitespace(prev))
            ) {
              character = value.charAt(index + 2);

              if (character !== marker) {
                if (!trim(queue)) {
                  return;
                }

                /* istanbul ignore if - never used (yet) */
                if (silent) {
                  return true;
                }

                now = eat.now();
                now.column += 2;
                now.offset += 2;

                return eat(subvalue + queue + subvalue)({
                  type: 'strong',
                  children: self.tokenizeInline(queue, now),
                });
              }
            }

            if (!pedantic && character === '\\') {
              queue += character;
              character = value.charAt(++index);
            }

            queue += character;
            index++;
          }
        }

        /***/
      },
      /* 282 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          var asterisk = value.indexOf('**', fromIndex);
          var underscore = value.indexOf('__', fromIndex);

          if (underscore === -1) {
            return asterisk;
          }

          if (asterisk === -1) {
            return underscore;
          }

          return underscore < asterisk ? underscore : asterisk;
        }

        /***/
      },
      /* 283 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var trim = __webpack_require__(15);
        var word = __webpack_require__(284);
        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(285);

        module.exports = emphasis;
        emphasis.locator = locate;

        var C_ASTERISK = '*';
        var C_UNDERSCORE = '_';

        function emphasis(eat, value, silent) {
          var self = this;
          var index = 0;
          var character = value.charAt(index);
          var now;
          var pedantic;
          var marker;
          var queue;
          var subvalue;
          var length;
          var prev;

          if (character !== C_ASTERISK && character !== C_UNDERSCORE) {
            return;
          }

          pedantic = self.options.pedantic;
          subvalue = character;
          marker = character;
          length = value.length;
          index++;
          queue = '';
          character = '';

          if (pedantic && whitespace(value.charAt(index))) {
            return;
          }

          while (index < length) {
            prev = character;
            character = value.charAt(index);

            if (character === marker && (!pedantic || !whitespace(prev))) {
              character = value.charAt(++index);

              if (character !== marker) {
                if (!trim(queue) || prev === marker) {
                  return;
                }

                if (!pedantic && marker === C_UNDERSCORE && word(character)) {
                  queue += marker;
                  continue;
                }

                /* istanbul ignore if - never used (yet) */
                if (silent) {
                  return true;
                }

                now = eat.now();
                now.column++;
                now.offset++;

                return eat(subvalue + queue + marker)({
                  type: 'emphasis',
                  children: self.tokenizeInline(queue, now),
                });
              }

              queue += marker;
            }

            if (!pedantic && character === '\\') {
              queue += character;
              character = value.charAt(++index);
            }

            queue += character;
            index++;
          }
        }

        /***/
      },
      /* 284 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = wordCharacter;

        var fromCode = String.fromCharCode;
        var re = /\w/;

        /* Check if the given character code, or the character
 * code at the first character, is a word character. */
        function wordCharacter(character) {
          return re.test(
            typeof character === 'number'
              ? fromCode(character)
              : character.charAt(0)
          );
        }

        /***/
      },
      /* 285 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          var asterisk = value.indexOf('*', fromIndex);
          var underscore = value.indexOf('_', fromIndex);

          if (underscore === -1) {
            return asterisk;
          }

          if (asterisk === -1) {
            return underscore;
          }

          return underscore < asterisk ? underscore : asterisk;
        }

        /***/
      },
      /* 286 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(287);

        module.exports = strikethrough;
        strikethrough.locator = locate;

        var C_TILDE = '~';
        var DOUBLE = '~~';

        function strikethrough(eat, value, silent) {
          var self = this;
          var character = '';
          var previous = '';
          var preceding = '';
          var subvalue = '';
          var index;
          var length;
          var now;

          if (
            !self.options.gfm ||
            value.charAt(0) !== C_TILDE ||
            value.charAt(1) !== C_TILDE ||
            whitespace(value.charAt(2))
          ) {
            return;
          }

          index = 1;
          length = value.length;
          now = eat.now();
          now.column += 2;
          now.offset += 2;

          while (++index < length) {
            character = value.charAt(index);

            if (
              character === C_TILDE &&
              previous === C_TILDE &&
              (!preceding || !whitespace(preceding))
            ) {
              /* istanbul ignore if - never used (yet) */
              if (silent) {
                return true;
              }

              return eat(DOUBLE + subvalue + DOUBLE)({
                type: 'delete',
                children: self.tokenizeInline(subvalue, now),
              });
            }

            subvalue += previous;
            preceding = previous;
            previous = character;
          }
        }

        /***/
      },
      /* 287 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          return value.indexOf('~~', fromIndex);
        }

        /***/
      },
      /* 288 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var whitespace = __webpack_require__(4);
        var locate = __webpack_require__(289);

        module.exports = inlineCode;
        inlineCode.locator = locate;

        var C_TICK = '`';

        /* Tokenise inline code. */
        function inlineCode(eat, value, silent) {
          var length = value.length;
          var index = 0;
          var queue = '';
          var tickQueue = '';
          var contentQueue;
          var subqueue;
          var count;
          var openingCount;
          var subvalue;
          var character;
          var found;
          var next;

          while (index < length) {
            if (value.charAt(index) !== C_TICK) {
              break;
            }

            queue += C_TICK;
            index++;
          }

          if (!queue) {
            return;
          }

          subvalue = queue;
          openingCount = index;
          queue = '';
          next = value.charAt(index);
          count = 0;

          while (index < length) {
            character = next;
            next = value.charAt(index + 1);

            if (character === C_TICK) {
              count++;
              tickQueue += character;
            } else {
              count = 0;
              queue += character;
            }

            if (count && next !== C_TICK) {
              if (count === openingCount) {
                subvalue += queue + tickQueue;
                found = true;
                break;
              }

              queue += tickQueue;
              tickQueue = '';
            }

            index++;
          }

          if (!found) {
            if (openingCount % 2 !== 0) {
              return;
            }

            queue = '';
          }

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          contentQueue = '';
          subqueue = '';
          length = queue.length;
          index = -1;

          while (++index < length) {
            character = queue.charAt(index);

            if (whitespace(character)) {
              subqueue += character;
              continue;
            }

            if (subqueue) {
              if (contentQueue) {
                contentQueue += subqueue;
              }

              subqueue = '';
            }

            contentQueue += character;
          }

          return eat(subvalue)({
            type: 'inlineCode',
            value: contentQueue,
          });
        }

        /***/
      },
      /* 289 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          return value.indexOf('`', fromIndex);
        }

        /***/
      },
      /* 290 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var locate = __webpack_require__(291);

        module.exports = hardBreak;
        hardBreak.locator = locate;

        var MIN_BREAK_LENGTH = 2;

        function hardBreak(eat, value, silent) {
          var length = value.length;
          var index = -1;
          var queue = '';
          var character;

          while (++index < length) {
            character = value.charAt(index);

            if (character === '\n') {
              if (index < MIN_BREAK_LENGTH) {
                return;
              }

              /* istanbul ignore if - never used (yet) */
              if (silent) {
                return true;
              }

              queue += character;

              return eat(queue)({ type: 'break' });
            }

            if (character !== ' ') {
              return;
            }

            queue += character;
          }
        }

        /***/
      },
      /* 291 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = locate;

        function locate(value, fromIndex) {
          var index = value.indexOf('\n', fromIndex);

          while (index > fromIndex) {
            if (value.charAt(index - 1) !== ' ') {
              break;
            }

            index--;
          }

          return index;
        }

        /***/
      },
      /* 292 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = text;

        function text(eat, value, silent) {
          var self = this;
          var methods;
          var tokenizers;
          var index;
          var length;
          var subvalue;
          var position;
          var tokenizer;
          var name;
          var min;
          var now;

          /* istanbul ignore if - never used (yet) */
          if (silent) {
            return true;
          }

          methods = self.inlineMethods;
          length = methods.length;
          tokenizers = self.inlineTokenizers;
          index = -1;
          min = value.length;

          while (++index < length) {
            name = methods[index];

            if (name === 'text' || !tokenizers[name]) {
              continue;
            }

            tokenizer = tokenizers[name].locator;

            if (!tokenizer) {
              eat.file.fail('Missing locator: `' + name + '`');
            }

            position = tokenizer.call(self, value, 1);

            if (position !== -1 && position < min) {
              min = position;
            }
          }

          subvalue = value.slice(0, min);
          now = eat.now();

          self.decode(subvalue, now, function(content, position, source) {
            eat(source || content)({
              type: 'text',
              value: content,
            });
          });
        }

        /***/
      },
      /* 293 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        /**
         * Naive, simple plugin to match inline nodes without attributes
         * This allows say <strong>foo</strong>, but not <strong class="very">foo</strong>
         * For proper HTML support, you'll want a different plugin
         **/

        var visit = __webpack_require__(23);

        var type = 'virtualHtml';
        var selfClosingRe = /^<(area|base|br|col|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)\s*\/?>$/i;
        var simpleTagRe = /^<(\/?)([a-z]+)\s*>$/;

        module.exports = function(tree) {
          var open = void 0;
          var currentParent = void 0;
          visit(
            tree,
            'html',
            function(node, index, parent) {
              if (currentParent !== parent) {
                open = [];
                currentParent = parent;
              }

              var selfClosing = getSelfClosing(node);
              if (selfClosing) {
                parent.children.splice(index, 1, {
                  type: type,
                  tag: selfClosing,
                  position: node.position,
                });
                return true;
              }

              var current = getSimpleTag(node, parent);
              if (!current) {
                return true;
              }

              var matching = findAndPull(open, current.tag);

              if (matching) {
                parent.children.splice(
                  index,
                  0,
                  virtual(current, matching, parent)
                );
              } else if (!current.opening) {
                open.push(current);
              }

              return true;
            },
            true // Iterate in reverse
          );

          return tree;
        };

        function findAndPull(open, matchingTag) {
          var i = open.length;
          while (i--) {
            if (open[i].tag === matchingTag) {
              return open.splice(i, 1)[0];
            }
          }

          return false;
        }

        function getSimpleTag(node, parent) {
          var match = node.value.match(simpleTagRe);
          return match
            ? { tag: match[2], opening: !match[1], node: node }
            : false;
        }

        function getSelfClosing(node) {
          var match = node.value.match(selfClosingRe);
          return match ? match[1] : false;
        }

        function virtual(fromNode, toNode, parent) {
          var fromIndex = parent.children.indexOf(fromNode.node);
          var toIndex = parent.children.indexOf(toNode.node);

          var extracted = parent.children.splice(
            fromIndex,
            toIndex - fromIndex + 1
          );
          var children = extracted.slice(1, -1);
          return {
            type: type,
            children: children,
            tag: fromNode.tag,
            position: {
              start: fromNode.node.position.start,
              end: toNode.node.position.end,
              indent: [],
            },
          };
        }

        /***/
      },
      /* 294 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var visit = __webpack_require__(23);

        exports.ofType = function(types, mode) {
          return function(node) {
            types.forEach(function(type) {
              return visit(node, type, disallow, true);
            });
            return node;
          };

          function disallow(node, index, parent) {
            if (parent) {
              untangle(node, index, parent, mode);
            }
          }
        };

        exports.ifNotMatch = function(allowNode, mode) {
          return function(node) {
            visit(node, disallow, true);
            return node;
          };

          function disallow(node, index, parent) {
            if (parent && !allowNode(node, index, parent)) {
              untangle(node, index, parent, mode);
            }
          }
        };

        function untangle(node, index, parent, mode) {
          if (mode === 'remove') {
            parent.children.splice(index, 1);
          } else if (mode === 'unwrap') {
            var args = [index, 1];

            if (node.children) {
              args = args.concat(node.children);
            }

            Array.prototype.splice.apply(parent.children, args);
          }
        }

        /***/
      },
      /* 295 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var React = __webpack_require__(0);
        var xtend = __webpack_require__(6);

        function astToReact(node, options) {
          var parent =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          var index =
            arguments.length > 3 && arguments[3] !== undefined
              ? arguments[3]
              : 0;

          var renderer = options.renderers[node.type];

          var pos = node.position.start;
          var key = [node.type, pos.line, pos.column].join('-');

          if (node.type === 'text') {
            return renderer ? renderer(node.value, key) : node.value;
          }

          if (
            typeof renderer !== 'function' &&
            typeof renderer !== 'string' &&
            !isReactFragment(renderer)
          ) {
            throw new Error(
              'Renderer for type `' +
                node.type +
                '` not defined or is not renderable'
            );
          }

          var nodeProps = getNodeProps(
            node,
            key,
            options,
            renderer,
            parent,
            index
          );

          return React.createElement(
            renderer,
            nodeProps,
            nodeProps.children || resolveChildren() || undefined
          );

          function resolveChildren() {
            return (
              node.children &&
              node.children.map(function(childNode, i) {
                return astToReact(
                  childNode,
                  options,
                  { node: node, props: nodeProps },
                  i
                );
              })
            );
          }
        }

        function isReactFragment(renderer) {
          return React.Fragment && React.Fragment === renderer;
        }

        // eslint-disable-next-line max-params, complexity
        function getNodeProps(node, key, opts, renderer, parent, index) {
          var props = { key: key };

          var isTagRenderer = typeof renderer === 'string';

          // `sourcePos` is true if the user wants source information (line/column info from markdown source)
          if (opts.sourcePos && node.position) {
            props['data-sourcepos'] = flattenPosition(node.position);
          }

          if (opts.rawSourcePos && !isTagRenderer) {
            props.sourcePosition = node.position;
          }

          var ref =
            node.identifier !== null && node.identifier !== undefined
              ? opts.definitions[node.identifier] || {}
              : null;

          switch (node.type) {
            case 'root':
              assignDefined(props, { className: opts.className });
              break;
            case 'heading':
              props.level = node.depth;
              break;
            case 'list':
              props.start = node.start;
              props.ordered = node.ordered;
              props.tight = !node.loose;
              break;
            case 'listItem':
              props.checked = node.checked;
              props.tight = !node.loose;
              props.children = (props.tight
                ? unwrapParagraphs(node)
                : node.children
              ).map(function(childNode, i) {
                return astToReact(
                  childNode,
                  opts,
                  { node: node, props: props },
                  i
                );
              });
              break;
            case 'definition':
              assignDefined(props, {
                identifier: node.identifier,
                title: node.title,
                url: node.url,
              });
              break;
            case 'code':
              assignDefined(props, {
                language: node.lang && node.lang.split(/\s/, 1)[0],
              });
              break;
            case 'inlineCode':
              props.children = node.value;
              props.inline = true;
              break;
            case 'link':
              assignDefined(props, {
                title: node.title || undefined,
                href: opts.transformLinkUri
                  ? opts.transformLinkUri(node.url, node.children, node.title)
                  : node.url,
              });
              break;
            case 'image':
              assignDefined(props, {
                alt: node.alt || undefined,
                title: node.title || undefined,
                src: opts.transformImageUri
                  ? opts.transformImageUri(
                      node.url,
                      node.children,
                      node.title,
                      node.alt
                    )
                  : node.url,
              });
              break;
            case 'linkReference':
              assignDefined(
                props,
                xtend(ref, {
                  href: opts.transformLinkUri
                    ? opts.transformLinkUri(ref.href)
                    : ref.href,
                })
              );
              break;
            case 'imageReference':
              assignDefined(props, {
                src:
                  opts.transformImageUri && ref.href
                    ? opts.transformImageUri(
                        ref.href,
                        node.children,
                        ref.title,
                        node.alt
                      )
                    : ref.href,
                title: ref.title || undefined,
                alt: node.alt || undefined,
              });
              break;
            case 'table':
            case 'tableHead':
            case 'tableBody':
              props.columnAlignment = node.align;
              break;
            case 'tableRow':
              props.isHeader = parent.node.type === 'tableHead';
              props.columnAlignment = parent.props.columnAlignment;
              break;
            case 'tableCell':
              assignDefined(props, {
                isHeader: parent.props.isHeader,
                align: parent.props.columnAlignment[index],
              });
              break;
            case 'virtualHtml':
              props.tag = node.tag;
              break;
            case 'html':
              // @todo find a better way than this
              props.isBlock =
                node.position.start.line !== node.position.end.line;
              props.escapeHtml = opts.escapeHtml;
              props.skipHtml = opts.skipHtml;
              break;
            default:
              assignDefined(
                props,
                xtend(node, {
                  type: undefined,
                  position: undefined,
                  children: undefined,
                })
              );
          }

          if (!isTagRenderer && node.value) {
            props.value = node.value;
          }

          return props;
        }

        function assignDefined(target, attrs) {
          for (var key in attrs) {
            if (typeof attrs[key] !== 'undefined') {
              target[key] = attrs[key];
            }
          }
        }

        function flattenPosition(pos) {
          return [
            pos.start.line,
            ':',
            pos.start.column,
            '-',
            pos.end.line,
            ':',
            pos.end.column,
          ]
            .map(String)
            .join('');
        }

        function unwrapParagraphs(node) {
          return node.children.reduce(function(array, child) {
            return array.concat(
              child.type === 'paragraph' ? child.children || [] : [child]
            );
          }, []);
        }

        module.exports = astToReact;

        /***/
      },
      /* 296 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var visit = __webpack_require__(23);

        module.exports = function(node) {
          visit(node, 'table', wrap);
          return node;
        };

        function wrap(table) {
          var children = table.children;
          table.children = [
            {
              type: 'tableHead',
              align: table.align,
              children: [children[0]],
              position: children[0].position,
            },
          ];
          if (children.length > 1) {
            table.children.push({
              type: 'tableBody',
              align: table.align,
              children: children.slice(1),
              position: {
                start: children[1].position.start,
                end: children[children.length - 1].position.end,
              },
            });
          }
        }

        /***/
      },
      /* 297 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = function getDefinitions(node) {
          var defs =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};

          return (node.children || []).reduce(function(definitions, child) {
            if (child.type === 'definition') {
              definitions[child.identifier] = {
                href: child.url,
                title: child.title,
              };
            }

            return getDefinitions(child, definitions);
          }, defs);
        };

        /***/
      },
      /* 298 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var protocols = ['http', 'https', 'mailto', 'tel'];

        module.exports = function uriTransformer(uri) {
          var url = (uri || '').trim();
          var first = url.charAt(0);

          if (first === '#' || first === '/') {
            return url;
          }

          var colon = url.indexOf(':');
          if (colon === -1) {
            return url;
          }

          var length = protocols.length;
          var index = -1;

          while (++index < length) {
            var protocol = protocols[index];

            if (
              colon === protocol.length &&
              url.slice(0, protocol.length) === protocol
            ) {
              return url;
            }
          }

          index = url.indexOf('?');
          if (index !== -1 && colon > index) {
            return url;
          }

          index = url.indexOf('#');
          if (index !== -1 && colon > index) {
            return url;
          }

          // eslint-disable-next-line no-script-url
          return 'javascript:void(0)';
        };

        /***/
      },
      /* 299 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';
        /* eslint-disable react/prop-types, react/no-multi-comp */

        var xtend = __webpack_require__(6);
        var React = __webpack_require__(0);
        var createElement = React.createElement;

        module.exports = {
          root: 'div',
          break: 'br',
          paragraph: 'p',
          emphasis: 'em',
          strong: 'strong',
          thematicBreak: 'hr',
          blockquote: 'blockquote',
          delete: 'del',
          link: 'a',
          image: 'img',
          linkReference: 'a',
          imageReference: 'img',
          table: SimpleRenderer.bind(null, 'table'),
          tableHead: SimpleRenderer.bind(null, 'thead'),
          tableBody: SimpleRenderer.bind(null, 'tbody'),
          tableRow: SimpleRenderer.bind(null, 'tr'),
          tableCell: TableCell,

          list: List,
          listItem: ListItem,
          definition: NullRenderer,
          heading: Heading,
          inlineCode: InlineCode,
          code: CodeBlock,
          html: Html,
          virtualHtml: VirtualHtml,
        };

        function SimpleRenderer(tag, props) {
          return createElement(tag, getCoreProps(props), props.children);
        }

        function TableCell(props) {
          var style = props.align ? { textAlign: props.align } : undefined;
          var coreProps = getCoreProps(props);
          return createElement(
            props.isHeader ? 'th' : 'td',
            style ? xtend({ style: style }, coreProps) : coreProps,
            props.children
          );
        }

        function Heading(props) {
          return createElement(
            'h' + props.level,
            getCoreProps(props),
            props.children
          );
        }

        function List(props) {
          var attrs = getCoreProps(props);
          if (props.start !== null && props.start !== 1) {
            attrs.start = props.start.toString();
          }

          return createElement(
            props.ordered ? 'ol' : 'ul',
            attrs,
            props.children
          );
        }

        function ListItem(props) {
          var checkbox = null;
          if (props.checked !== null) {
            var checked = props.checked;
            checkbox = createElement('input', {
              type: 'checkbox',
              checked: checked,
              readOnly: true,
            });
          }

          return createElement(
            'li',
            getCoreProps(props),
            checkbox,
            props.children
          );
        }

        function CodeBlock(props) {
          var className = props.language && 'language-' + props.language;
          var code = createElement(
            'code',
            className ? { className: className } : null,
            props.value
          );
          return createElement('pre', getCoreProps(props), code);
        }

        function InlineCode(props) {
          return createElement('code', getCoreProps(props), props.children);
        }

        function Html(props) {
          if (props.skipHtml) {
            return null;
          }

          var tag = props.isBlock ? 'div' : 'span';
          if (props.escapeHtml) {
            // @todo when fiber lands, we can simply render props.value
            return createElement(tag, null, props.value);
          }

          var nodeProps = { dangerouslySetInnerHTML: { __html: props.value } };
          return createElement(tag, nodeProps);
        }

        function VirtualHtml(props) {
          return createElement(props.tag, getCoreProps(props), props.children);
        }

        function NullRenderer() {
          return null;
        }

        function getCoreProps(props) {
          return props['data-sourcepos']
            ? { 'data-sourcepos': props['data-sourcepos'] }
            : {};
        }

        /***/
      },
      /* 300 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _SlideSwitch = __webpack_require__(301);

        var _SlideSwitch2 = _interopRequireDefault(_SlideSwitch);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _SlideSwitch2.default;

        /***/
      },
      /* 301 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactMarkdown = __webpack_require__(89);

        var _reactMarkdown2 = _interopRequireDefault(_reactMarkdown);

        var _YouTube = __webpack_require__(302);

        var _YouTube2 = _interopRequireDefault(_YouTube);

        var _SelfHostedVideo = __webpack_require__(306);

        var _SelfHostedVideo2 = _interopRequireDefault(_SelfHostedVideo);

        var _Gallery = __webpack_require__(307);

        var _Gallery2 = _interopRequireDefault(_Gallery);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var SlideSwitch = function SlideSwitch() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            slide = _ref.slide;

          var type = slide['acf_fc_layout'];
          switch (type) {
            case 'image':
              return _react2.default.createElement('img', {
                className: 'slide__image',
                src: slide.images.url,
                alt: slide.images.name,
              });
            case 'text':
              return _react2.default.createElement(_reactMarkdown2.default, {
                className: 'slide__text',
                source: slide.text,
              });
            case 'heading':
              return _react2.default.createElement(
                'h2',
                { className: 'slide__h2' },
                slide.heading
              );
            case 'youtube':
              return _react2.default.createElement(_YouTube2.default, {
                slide: slide,
              });
            case 'video':
              return _react2.default.createElement(_SelfHostedVideo2.default, {
                slide: slide,
              });
            case 'gallery':
              return _react2.default.createElement(_Gallery2.default, {
                slide: slide,
              });
            default:
              return null;
          }
        };

        exports.default = SlideSwitch;

        /***/
      },
      /* 302 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _queryString = __webpack_require__(303);

        var _queryString2 = _interopRequireDefault(_queryString);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var YouTube = function YouTube() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            slide = _ref.slide;

          var stub = 'https://www.youtube.com/embed';
          var options = {
            rel: 0,
            modestbranding: 1,
          };

          var query = _queryString2.default.stringify(options);

          var source = stub + '/' + slide.video_id + '?' + query;

          return _react2.default.createElement(
            'article',
            { className: 'youtube__container' },
            _react2.default.createElement('iframe', {
              title: 'youtube-embed-' + slide.video_id,
              className: 'youtube__iframe',
              type: 'text/html',
              width: '100%',
              height: '100%',
              src: source,
              frameBorder: '0',
            })
          );
        };

        exports.default = YouTube;

        /***/
      },
      /* 303 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var strictUriEncode = __webpack_require__(304);
        var objectAssign = __webpack_require__(17);
        var decodeComponent = __webpack_require__(305);

        function encoderForArrayFormat(opts) {
          switch (opts.arrayFormat) {
            case 'index':
              return function(key, value, index) {
                return value === null
                  ? [encode(key, opts), '[', index, ']'].join('')
                  : [
                      encode(key, opts),
                      '[',
                      encode(index, opts),
                      ']=',
                      encode(value, opts),
                    ].join('');
              };

            case 'bracket':
              return function(key, value) {
                return value === null
                  ? encode(key, opts)
                  : [encode(key, opts), '[]=', encode(value, opts)].join('');
              };

            default:
              return function(key, value) {
                return value === null
                  ? encode(key, opts)
                  : [encode(key, opts), '=', encode(value, opts)].join('');
              };
          }
        }

        function parserForArrayFormat(opts) {
          var result;

          switch (opts.arrayFormat) {
            case 'index':
              return function(key, value, accumulator) {
                result = /\[(\d*)\]$/.exec(key);

                key = key.replace(/\[\d*\]$/, '');

                if (!result) {
                  accumulator[key] = value;
                  return;
                }

                if (accumulator[key] === undefined) {
                  accumulator[key] = {};
                }

                accumulator[key][result[1]] = value;
              };

            case 'bracket':
              return function(key, value, accumulator) {
                result = /(\[\])$/.exec(key);
                key = key.replace(/\[\]$/, '');

                if (!result) {
                  accumulator[key] = value;
                  return;
                } else if (accumulator[key] === undefined) {
                  accumulator[key] = [value];
                  return;
                }

                accumulator[key] = [].concat(accumulator[key], value);
              };

            default:
              return function(key, value, accumulator) {
                if (accumulator[key] === undefined) {
                  accumulator[key] = value;
                  return;
                }

                accumulator[key] = [].concat(accumulator[key], value);
              };
          }
        }

        function encode(value, opts) {
          if (opts.encode) {
            return opts.strict
              ? strictUriEncode(value)
              : encodeURIComponent(value);
          }

          return value;
        }

        function keysSorter(input) {
          if (Array.isArray(input)) {
            return input.sort();
          } else if (typeof input === 'object') {
            return keysSorter(Object.keys(input))
              .sort(function(a, b) {
                return Number(a) - Number(b);
              })
              .map(function(key) {
                return input[key];
              });
          }

          return input;
        }

        function extract(str) {
          var queryStart = str.indexOf('?');
          if (queryStart === -1) {
            return '';
          }
          return str.slice(queryStart + 1);
        }

        function parse(str, opts) {
          opts = objectAssign({ arrayFormat: 'none' }, opts);

          var formatter = parserForArrayFormat(opts);

          // Create an object with no prototype
          // https://github.com/sindresorhus/query-string/issues/47
          var ret = Object.create(null);

          if (typeof str !== 'string') {
            return ret;
          }

          str = str.trim().replace(/^[?#&]/, '');

          if (!str) {
            return ret;
          }

          str.split('&').forEach(function(param) {
            var parts = param.replace(/\+/g, ' ').split('=');
            // Firefox (pre 40) decodes `%3D` to `=`
            // https://github.com/sindresorhus/query-string/pull/37
            var key = parts.shift();
            var val = parts.length > 0 ? parts.join('=') : undefined;

            // missing `=` should be `null`:
            // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
            val = val === undefined ? null : decodeComponent(val);

            formatter(decodeComponent(key), val, ret);
          });

          return Object.keys(ret)
            .sort()
            .reduce(function(result, key) {
              var val = ret[key];
              if (
                Boolean(val) &&
                typeof val === 'object' &&
                !Array.isArray(val)
              ) {
                // Sort object keys, not values
                result[key] = keysSorter(val);
              } else {
                result[key] = val;
              }

              return result;
            }, Object.create(null));
        }

        exports.extract = extract;
        exports.parse = parse;

        exports.stringify = function(obj, opts) {
          var defaults = {
            encode: true,
            strict: true,
            arrayFormat: 'none',
          };

          opts = objectAssign(defaults, opts);

          if (opts.sort === false) {
            opts.sort = function() {};
          }

          var formatter = encoderForArrayFormat(opts);

          return obj
            ? Object.keys(obj)
                .sort(opts.sort)
                .map(function(key) {
                  var val = obj[key];

                  if (val === undefined) {
                    return '';
                  }

                  if (val === null) {
                    return encode(key, opts);
                  }

                  if (Array.isArray(val)) {
                    var result = [];

                    val.slice().forEach(function(val2) {
                      if (val2 === undefined) {
                        return;
                      }

                      result.push(formatter(key, val2, result.length));
                    });

                    return result.join('&');
                  }

                  return encode(key, opts) + '=' + encode(val, opts);
                })
                .filter(function(x) {
                  return x.length > 0;
                })
                .join('&')
            : '';
        };

        exports.parseUrl = function(str, opts) {
          return {
            url: str.split('?')[0] || '',
            query: parse(extract(str), opts),
          };
        };

        /***/
      },
      /* 304 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        module.exports = function(str) {
          return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {
            return (
              '%' +
              c
                .charCodeAt(0)
                .toString(16)
                .toUpperCase()
            );
          });
        };

        /***/
      },
      /* 305 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var token = '%[a-f0-9]{2}';
        var singleMatcher = new RegExp(token, 'gi');
        var multiMatcher = new RegExp('(' + token + ')+', 'gi');

        function decodeComponents(components, split) {
          try {
            // Try to decode the entire string first
            return decodeURIComponent(components.join(''));
          } catch (err) {
            // Do nothing
          }

          if (components.length === 1) {
            return components;
          }

          split = split || 1;

          // Split the array in 2 parts
          var left = components.slice(0, split);
          var right = components.slice(split);

          return Array.prototype.concat.call(
            [],
            decodeComponents(left),
            decodeComponents(right)
          );
        }

        function decode(input) {
          try {
            return decodeURIComponent(input);
          } catch (err) {
            var tokens = input.match(singleMatcher);

            for (var i = 1; i < tokens.length; i++) {
              input = decodeComponents(tokens, i).join('');

              tokens = input.match(singleMatcher);
            }

            return input;
          }
        }

        function customDecodeURIComponent(input) {
          // Keep track of all the replacements and prefill the map with the `BOM`
          var replaceMap = {
            '%FE%FF': '\uFFFD\uFFFD',
            '%FF%FE': '\uFFFD\uFFFD',
          };

          var match = multiMatcher.exec(input);
          while (match) {
            try {
              // Decode as big chunks as possible
              replaceMap[match[0]] = decodeURIComponent(match[0]);
            } catch (err) {
              var result = decode(match[0]);

              if (result !== match[0]) {
                replaceMap[match[0]] = result;
              }
            }

            match = multiMatcher.exec(input);
          }

          // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
          replaceMap['%C2'] = '\uFFFD';

          var entries = Object.keys(replaceMap);

          for (var i = 0; i < entries.length; i++) {
            // Replace all decoded components
            var key = entries[i];
            input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
          }

          return input;
        }

        module.exports = function(encodedURI) {
          if (typeof encodedURI !== 'string') {
            throw new TypeError(
              'Expected `encodedURI` to be of type `string`, got `' +
                typeof encodedURI +
                '`'
            );
          }

          try {
            encodedURI = encodedURI.replace(/\+/g, ' ');

            // Try the built in decoder first
            return decodeURIComponent(encodedURI);
          } catch (err) {
            // Fallback to a more advanced decoder
            return customDecodeURIComponent(encodedURI);
          }
        };

        /***/
      },
      /* 306 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var SelfHostedVideo = function SelfHostedVideo() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            slide = _ref.slide;

          var files = slide.sources.map(function(type) {
            var file = slide[type];
            return _react2.default.createElement('source', {
              key: file.id,
              src: file.url,
              type: file.mime_type,
            });
          });

          return _react2.default.createElement(
            'article',
            { className: 'video__container' },
            _react2.default.createElement(
              'video',
              {
                className: 'video',
                controls: true,
                preload: 'auto',
                width: '100%',
              },
              files
            )
          );
        };

        exports.default = SelfHostedVideo;

        /***/
      },
      /* 307 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var Gallery = function Gallery() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            slide = _ref.slide;

          var classes = 'slide__gallery slide__gallery-' + slide.display;

          var images = slide.images.map(function(image) {
            return _react2.default.createElement('img', {
              className: 'slide__galleryimage',
              key: image.id,
              src: image.url,
              alt: image.name,
            });
          });

          return _react2.default.createElement(
            'article',
            { className: classes },
            images
          );
        };

        exports.default = Gallery;

        /***/
      },
      /* 308 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var stringify = __webpack_require__(309);
        var parse = __webpack_require__(310);
        var formats = __webpack_require__(97);

        module.exports = {
          formats: formats,
          parse: parse,
          stringify: stringify,
        };

        /***/
      },
      /* 309 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(96);
        var formats = __webpack_require__(97);

        var arrayPrefixGenerators = {
          brackets: function brackets(prefix) {
            // eslint-disable-line func-name-matching
            return prefix + '[]';
          },
          indices: function indices(prefix, key) {
            // eslint-disable-line func-name-matching
            return prefix + '[' + key + ']';
          },
          repeat: function repeat(prefix) {
            // eslint-disable-line func-name-matching
            return prefix;
          },
        };

        var toISO = Date.prototype.toISOString;

        var defaults = {
          delimiter: '&',
          encode: true,
          encoder: utils.encode,
          encodeValuesOnly: false,
          serializeDate: function serializeDate(date) {
            // eslint-disable-line func-name-matching
            return toISO.call(date);
          },
          skipNulls: false,
          strictNullHandling: false,
        };

        var stringify = function stringify( // eslint-disable-line func-name-matching
          object,
          prefix,
          generateArrayPrefix,
          strictNullHandling,
          skipNulls,
          encoder,
          filter,
          sort,
          allowDots,
          serializeDate,
          formatter,
          encodeValuesOnly
        ) {
          var obj = object;
          if (typeof filter === 'function') {
            obj = filter(prefix, obj);
          } else if (obj instanceof Date) {
            obj = serializeDate(obj);
          } else if (obj === null) {
            if (strictNullHandling) {
              return encoder && !encodeValuesOnly
                ? encoder(prefix, defaults.encoder)
                : prefix;
            }

            obj = '';
          }

          if (
            typeof obj === 'string' ||
            typeof obj === 'number' ||
            typeof obj === 'boolean' ||
            utils.isBuffer(obj)
          ) {
            if (encoder) {
              var keyValue = encodeValuesOnly
                ? prefix
                : encoder(prefix, defaults.encoder);
              return [
                formatter(keyValue) +
                  '=' +
                  formatter(encoder(obj, defaults.encoder)),
              ];
            }
            return [formatter(prefix) + '=' + formatter(String(obj))];
          }

          var values = [];

          if (typeof obj === 'undefined') {
            return values;
          }

          var objKeys;
          if (Array.isArray(filter)) {
            objKeys = filter;
          } else {
            var keys = Object.keys(obj);
            objKeys = sort ? keys.sort(sort) : keys;
          }

          for (var i = 0; i < objKeys.length; ++i) {
            var key = objKeys[i];

            if (skipNulls && obj[key] === null) {
              continue;
            }

            if (Array.isArray(obj)) {
              values = values.concat(
                stringify(
                  obj[key],
                  generateArrayPrefix(prefix, key),
                  generateArrayPrefix,
                  strictNullHandling,
                  skipNulls,
                  encoder,
                  filter,
                  sort,
                  allowDots,
                  serializeDate,
                  formatter,
                  encodeValuesOnly
                )
              );
            } else {
              values = values.concat(
                stringify(
                  obj[key],
                  prefix + (allowDots ? '.' + key : '[' + key + ']'),
                  generateArrayPrefix,
                  strictNullHandling,
                  skipNulls,
                  encoder,
                  filter,
                  sort,
                  allowDots,
                  serializeDate,
                  formatter,
                  encodeValuesOnly
                )
              );
            }
          }

          return values;
        };

        module.exports = function(object, opts) {
          var obj = object;
          var options = opts ? utils.assign({}, opts) : {};

          if (
            options.encoder !== null &&
            options.encoder !== undefined &&
            typeof options.encoder !== 'function'
          ) {
            throw new TypeError('Encoder has to be a function.');
          }

          var delimiter =
            typeof options.delimiter === 'undefined'
              ? defaults.delimiter
              : options.delimiter;
          var strictNullHandling =
            typeof options.strictNullHandling === 'boolean'
              ? options.strictNullHandling
              : defaults.strictNullHandling;
          var skipNulls =
            typeof options.skipNulls === 'boolean'
              ? options.skipNulls
              : defaults.skipNulls;
          var encode =
            typeof options.encode === 'boolean'
              ? options.encode
              : defaults.encode;
          var encoder =
            typeof options.encoder === 'function'
              ? options.encoder
              : defaults.encoder;
          var sort = typeof options.sort === 'function' ? options.sort : null;
          var allowDots =
            typeof options.allowDots === 'undefined'
              ? false
              : options.allowDots;
          var serializeDate =
            typeof options.serializeDate === 'function'
              ? options.serializeDate
              : defaults.serializeDate;
          var encodeValuesOnly =
            typeof options.encodeValuesOnly === 'boolean'
              ? options.encodeValuesOnly
              : defaults.encodeValuesOnly;
          if (typeof options.format === 'undefined') {
            options.format = formats['default'];
          } else if (
            !Object.prototype.hasOwnProperty.call(
              formats.formatters,
              options.format
            )
          ) {
            throw new TypeError('Unknown format option provided.');
          }
          var formatter = formats.formatters[options.format];
          var objKeys;
          var filter;

          if (typeof options.filter === 'function') {
            filter = options.filter;
            obj = filter('', obj);
          } else if (Array.isArray(options.filter)) {
            filter = options.filter;
            objKeys = filter;
          }

          var keys = [];

          if (typeof obj !== 'object' || obj === null) {
            return '';
          }

          var arrayFormat;
          if (options.arrayFormat in arrayPrefixGenerators) {
            arrayFormat = options.arrayFormat;
          } else if ('indices' in options) {
            arrayFormat = options.indices ? 'indices' : 'repeat';
          } else {
            arrayFormat = 'indices';
          }

          var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

          if (!objKeys) {
            objKeys = Object.keys(obj);
          }

          if (sort) {
            objKeys.sort(sort);
          }

          for (var i = 0; i < objKeys.length; ++i) {
            var key = objKeys[i];

            if (skipNulls && obj[key] === null) {
              continue;
            }

            keys = keys.concat(
              stringify(
                obj[key],
                key,
                generateArrayPrefix,
                strictNullHandling,
                skipNulls,
                encode ? encoder : null,
                filter,
                sort,
                allowDots,
                serializeDate,
                formatter,
                encodeValuesOnly
              )
            );
          }

          var joined = keys.join(delimiter);
          var prefix = options.addQueryPrefix === true ? '?' : '';

          return joined.length > 0 ? prefix + joined : '';
        };

        /***/
      },
      /* 310 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        var utils = __webpack_require__(96);

        var has = Object.prototype.hasOwnProperty;

        var defaults = {
          allowDots: false,
          allowPrototypes: false,
          arrayLimit: 20,
          decoder: utils.decode,
          delimiter: '&',
          depth: 5,
          parameterLimit: 1000,
          plainObjects: false,
          strictNullHandling: false,
        };

        var parseValues = function parseQueryStringValues(str, options) {
          var obj = {};
          var cleanStr = options.ignoreQueryPrefix
            ? str.replace(/^\?/, '')
            : str;
          var limit =
            options.parameterLimit === Infinity
              ? undefined
              : options.parameterLimit;
          var parts = cleanStr.split(options.delimiter, limit);

          for (var i = 0; i < parts.length; ++i) {
            var part = parts[i];

            var bracketEqualsPos = part.indexOf(']=');
            var pos =
              bracketEqualsPos === -1
                ? part.indexOf('=')
                : bracketEqualsPos + 1;

            var key, val;
            if (pos === -1) {
              key = options.decoder(part, defaults.decoder);
              val = options.strictNullHandling ? null : '';
            } else {
              key = options.decoder(part.slice(0, pos), defaults.decoder);
              val = options.decoder(part.slice(pos + 1), defaults.decoder);
            }
            if (has.call(obj, key)) {
              obj[key] = [].concat(obj[key]).concat(val);
            } else {
              obj[key] = val;
            }
          }

          return obj;
        };

        var parseObject = function(chain, val, options) {
          var leaf = val;

          for (var i = chain.length - 1; i >= 0; --i) {
            var obj;
            var root = chain[i];

            if (root === '[]') {
              obj = [];
              obj = obj.concat(leaf);
            } else {
              obj = options.plainObjects ? Object.create(null) : {};
              var cleanRoot =
                root.charAt(0) === '[' && root.charAt(root.length - 1) === ']'
                  ? root.slice(1, -1)
                  : root;
              var index = parseInt(cleanRoot, 10);
              if (
                !isNaN(index) &&
                root !== cleanRoot &&
                String(index) === cleanRoot &&
                index >= 0 &&
                options.parseArrays &&
                index <= options.arrayLimit
              ) {
                obj = [];
                obj[index] = leaf;
              } else {
                obj[cleanRoot] = leaf;
              }
            }

            leaf = obj;
          }

          return leaf;
        };

        var parseKeys = function parseQueryStringKeys(givenKey, val, options) {
          if (!givenKey) {
            return;
          }

          // Transform dot notation to bracket notation
          var key = options.allowDots
            ? givenKey.replace(/\.([^.[]+)/g, '[$1]')
            : givenKey;

          // The regex chunks

          var brackets = /(\[[^[\]]*])/;
          var child = /(\[[^[\]]*])/g;

          // Get the parent

          var segment = brackets.exec(key);
          var parent = segment ? key.slice(0, segment.index) : key;

          // Stash the parent if it exists

          var keys = [];
          if (parent) {
            // If we aren't using plain objects, optionally prefix keys
            // that would overwrite object prototype properties
            if (!options.plainObjects && has.call(Object.prototype, parent)) {
              if (!options.allowPrototypes) {
                return;
              }
            }

            keys.push(parent);
          }

          // Loop through children appending to the array until we hit depth

          var i = 0;
          while ((segment = child.exec(key)) !== null && i < options.depth) {
            i += 1;
            if (
              !options.plainObjects &&
              has.call(Object.prototype, segment[1].slice(1, -1))
            ) {
              if (!options.allowPrototypes) {
                return;
              }
            }
            keys.push(segment[1]);
          }

          // If there's a remainder, just add whatever is left

          if (segment) {
            keys.push('[' + key.slice(segment.index) + ']');
          }

          return parseObject(keys, val, options);
        };

        module.exports = function(str, opts) {
          var options = opts ? utils.assign({}, opts) : {};

          if (
            options.decoder !== null &&
            options.decoder !== undefined &&
            typeof options.decoder !== 'function'
          ) {
            throw new TypeError('Decoder has to be a function.');
          }

          options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;
          options.delimiter =
            typeof options.delimiter === 'string' ||
            utils.isRegExp(options.delimiter)
              ? options.delimiter
              : defaults.delimiter;
          options.depth =
            typeof options.depth === 'number' ? options.depth : defaults.depth;
          options.arrayLimit =
            typeof options.arrayLimit === 'number'
              ? options.arrayLimit
              : defaults.arrayLimit;
          options.parseArrays = options.parseArrays !== false;
          options.decoder =
            typeof options.decoder === 'function'
              ? options.decoder
              : defaults.decoder;
          options.allowDots =
            typeof options.allowDots === 'boolean'
              ? options.allowDots
              : defaults.allowDots;
          options.plainObjects =
            typeof options.plainObjects === 'boolean'
              ? options.plainObjects
              : defaults.plainObjects;
          options.allowPrototypes =
            typeof options.allowPrototypes === 'boolean'
              ? options.allowPrototypes
              : defaults.allowPrototypes;
          options.parameterLimit =
            typeof options.parameterLimit === 'number'
              ? options.parameterLimit
              : defaults.parameterLimit;
          options.strictNullHandling =
            typeof options.strictNullHandling === 'boolean'
              ? options.strictNullHandling
              : defaults.strictNullHandling;

          if (str === '' || str === null || typeof str === 'undefined') {
            return options.plainObjects ? Object.create(null) : {};
          }

          var tempObj =
            typeof str === 'string' ? parseValues(str, options) : str;
          var obj = options.plainObjects ? Object.create(null) : {};

          // Iterate over the keys and setup the new object

          var keys = Object.keys(tempObj);
          for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var newObj = parseKeys(key, tempObj[key], options);
            obj = utils.merge(obj, newObj, options);
          }

          return utils.compact(obj);
        };

        /***/
      },
      /* 311 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.slide__h2, .project__h1 {\n  font-weight: 300;\n  font-family: "Alegreya Sans SC", sans-serif; }\n\n.slide__h2 {\n  font-size: 1.6rem; }\n\n.project__image {\n  width: 100%; }\n\n.project__h1 {\n  font-size: 2rem;\n  font-weight: 400;\n  color: black;\n  margin-bottom: 20px;\n  letter-spacing: 4px; }\n\n.slide {\n  margin: 0 0 30px 0;\n  width: 100%; }\n  .slide__h2 {\n    font-size: 1.3rem;\n    font-weight: 400; }\n  .slide__image {\n    width: 100%; }\n  .slide__gallery {\n    display: grid;\n    grid-gap: 1.5rem; }\n    .slide__gallery-two {\n      grid-template-columns: repeat(2, 1fr); }\n    .slide__gallery-three {\n      grid-template-columns: repeat(3, 1fr); }\n\n.youtube__container {\n  position: relative; }\n  .youtube__container:before {\n    display: block;\n    content: "";\n    width: 100%;\n    padding-top: 56.25%; }\n\n.youtube__iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0; }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 312 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _About = __webpack_require__(313);

        var _About2 = _interopRequireDefault(_About);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _About2.default;

        /***/
      },
      /* 313 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _data = __webpack_require__(314);

        __webpack_require__(320);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var About = function About(props) {
          return _react2.default.createElement(
            'section',
            { className: 'about__container' },
            _react2.default.createElement(
              'h1',
              { className: 'about__h1' },
              'About'
            ),
            _react2.default.createElement(
              'article',
              { className: 'about__content' },
              _react2.default.createElement(
                'p',
                { className: 'about__paragraph' },
                'I am very passionate about computational design. I spend most of my free time developing small projects to improve both my design and technical skills. I want to contribute to the emergent digital and fabrication culture in architecture. I find all the technologies that are available to push design forward truly fascinating.'
              ),
              _react2.default.createElement(
                'p',
                { className: 'about__paragraph' },
                'I have worked in a highly challenging and creative computational design environment, where I learned how to code and developed skills with robotic fabrication. My thesis project explored the design opportunities of an airborne tensile construction informed by a swarm of semi-autonomous drones. I built a very complex and exciting generative design program to demonstrate the design opportunities based on real material and fabrication constraints. The program was able to generate various design iterations based on different inputs.'
              ),
              _react2.default.createElement(
                'p',
                { className: 'about__paragraph' },
                'I possess great technical skills working with different softwares and switching between them to exploit their potential. There\u2019s no perfect program that does it all\u2026 at least not yet. The most important lesson I learned from coding is that although there\u2019s still much to learn, the key to success is problem solving.'
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Education'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _data.education.map(function(each, index) {
                  return _react2.default.createElement(
                    'li',
                    { key: 'education-' + index, className: 'about__li' },
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-grid' },
                      _react2.default.createElement(
                        'span',
                        null,
                        each.school,
                        ' - ',
                        each.city
                      ),
                      _react2.default.createElement(
                        'em',
                        { className: 'about__li-right' },
                        each.date
                      )
                    ),
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-p' },
                      each.degree
                    )
                  );
                })
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Work Experience'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _data.work.map(function(each) {
                  return _react2.default.createElement(
                    'li',
                    { className: 'about__li' },
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-grid' },
                      _react2.default.createElement(
                        'span',
                        null,
                        each.company,
                        ' - ',
                        each.city
                      ),
                      _react2.default.createElement(
                        'em',
                        { className: 'about__li-right' },
                        each.date
                      )
                    ),
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-p' },
                      each.position
                    )
                  );
                })
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Publications'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _data.publications.map(function(each) {
                  return _react2.default.createElement(
                    'li',
                    { className: 'about__li' },
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-grid' },
                      _react2.default.createElement('span', null, each.title),
                      _react2.default.createElement(
                        'em',
                        { className: 'about__li-right' },
                        each.date
                      )
                    )
                  );
                })
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Lectures'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _data.lectures.map(function(each) {
                  return _react2.default.createElement(
                    'li',
                    { className: 'about__li' },
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-grid' },
                      _react2.default.createElement(
                        'span',
                        null,
                        each.name,
                        ' - ',
                        each.city
                      ),
                      _react2.default.createElement(
                        'em',
                        { className: 'about__li-right' },
                        each.date
                      )
                    ),
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-p' },
                      each.company
                    )
                  );
                })
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Exhibitions'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _data.exhibitions.map(function(each) {
                  return _react2.default.createElement(
                    'li',
                    { className: 'about__li' },
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-grid' },
                      _react2.default.createElement('span', null, each.name),
                      _react2.default.createElement(
                        'em',
                        { className: 'about__li-right' },
                        each.city
                      )
                    ),
                    _react2.default.createElement(
                      'p',
                      { className: 'about__li-p' },
                      each.description
                    )
                  );
                })
              ),
              _react2.default.createElement(
                'h2',
                { className: 'about__h2' },
                'Skills'
              ),
              _react2.default.createElement(
                'ul',
                { className: 'about__ul' },
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Strong design skills and extensive artistic ability'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Fast learner and strong creative writing skills'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'International experience - UK, USA, Canada, Peru'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Excellent communication skills, bilingual in English and Spanish'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Graphics: Adobe Suite: [ Ae, Ai, Ps, Id, Pr ]'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Programming: Processing(Generative Design), Rhino + Python'
                ),
                _react2.default.createElement(
                  'li',
                  { className: 'about__li' },
                  'Modeling: Autodesk [Maya, 3DSMax, AutoCAD, Revit], Rhino + grasshopper, V-Ray'
                )
              )
            )
          );
        };

        exports.default = About;

        /***/
      },
      /* 314 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _education = __webpack_require__(315);

        Object.defineProperty(exports, 'education', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_education).default;
          },
        });

        var _publications = __webpack_require__(316);

        Object.defineProperty(exports, 'publications', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_publications).default;
          },
        });

        var _work = __webpack_require__(317);

        Object.defineProperty(exports, 'work', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_work).default;
          },
        });

        var _exhibitions = __webpack_require__(318);

        Object.defineProperty(exports, 'exhibitions', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_exhibitions).default;
          },
        });

        var _lectures = __webpack_require__(319);

        Object.defineProperty(exports, 'lectures', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_lectures).default;
          },
        });

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /***/
      },
      /* 315 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var education = [
          {
            school: 'AA School of Architecture',
            city: 'London, United Kingdom',
            date: 'Sep 2013 - Jan 2015',
            degree: 'Master of Architecture and Urbanism (AADRL)',
          },
          {
            school: 'University of Waterloo',
            city: 'Cambridge, Canada',
            date: 'Sep 2008 - Aug 2013',
            degree: 'Honours Bachelor of Architectural Studies, Co-op',
          },
          {
            school: 'Peruvian University of Applied Sciences UPC',
            city: 'Lima, Peru',
            date: 'Mar 2006 - Apr 2008',
            degree: 'Architectural Studies, Top 10%',
          },
        ];

        exports.default = education;

        /***/
      },
      /* 316 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var publications = [
          {
            title:
              'AD Magazine Parametricism 2.0: Rethinking Architecture’s Agenda for the 21st Century',
            date: 'Apr 2016',
          },
          {
            title: 'archDaily',
            date: 'Sep 2015',
          },
          {
            title: 'suckerPUNCH',
            date: 'Mar 2015',
          },
        ];

        exports.default = publications;

        /***/
      },
      /* 317 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var work = [
          {
            company: 'Design Republic',
            city: 'NYC, USA',
            date: 'Feb 2017 - Present',
            position: 'Project Architect',
          },
          {
            company: 'Design Morphine',
            city: 'NYC, USA',
            date: 'Jan 2017 - Present',
            position: 'Member',
          },
          {
            company: 'Fogarty Finger Architecture Interiors',
            city: 'NYC, USA',
            date: 'Apr 2015 - Feb 2017',
            position: 'Junior Architect',
          },
          {
            company: 'ecoLogicStudio',
            city: 'London, UK',
            date: 'Feb 2013 - Apr 2013',
            position: 'Architectural Intern',
          },
          {
            company: 'HLW International LPP',
            city: 'NYC, USA',
            date: 'Jan 2012 - Aug 2012',
            position: 'Architectural Intern',
          },
          {
            company: 'Kasian Architecture Interior Design & Planning',
            city: 'Toronto, Canada',
            date: 'May 2011 - Aug 2011',
            position: 'Designer Student',
          },
          {
            company: 'Diamond and Schmitt Architects',
            city: 'Toronto, Canada',
            date: 'Sep 2010 - Dec 2010',
            position: 'Architectural Student',
          },
          {
            company: 'Sturgess Architecture',
            city: 'Calgary, Canada',
            date: 'Jan 2010 - Apr 2010',
            position: 'Architectural Assistant',
          },
          {
            company: 'Dédalo Arts & Crafts Gallery, Indigo Art Gallery',
            city: 'Lima, Peru',
            date: 'Feb 2008 - Apr 2008',
            position: 'Independent Artist',
          },
        ];

        exports.default = work;

        /***/
      },
      /* 318 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var exhibitions = [
          {
            name: 'MetaFolly Pavillion',
            description: 'permanent collection for the Frac Center',
            city: 'New Orleans, France',
          },
          {
            name: 'Hortus-Paris',
            description: 'interactive-living installation for EDF Foundation',
            city: 'Paris, France',
          },
          {
            name: 'Thesis Project - Phase 1',
            description:
              'exhibited at the Front Gallery of the Architectural Association',
            city: 'London, UK',
          },
          {
            name: 'Final Design Project',
            description:
              'selected for annual exhibition at Cambridge Galleries',
            city: 'Cambridge, Canada',
          },
          {
            name: 'Art Project',
            description: 'Showcase at The Arts Project Gallery',
            city: 'London, Canada',
          },
          {
            name: 'Art Project',
            description: 'Showcase at the Joseph D. Carrier Art Gallery',
            city: 'Toronto, Canada',
          },
          {
            name: 'Final Design Project',
            description:
              'Selected for annual exhibition at Cambridge Galleries',
            city: 'Cambridge, Canada',
          },
          {
            name: 'Design Project',
            description: 'Selected for National Architectural Contest',
            city: 'Lima, Peru',
          },
        ];

        exports.default = exhibitions;

        /***/
      },
      /* 319 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var lectures = [
          {
            name: 'Emerging Design Methodologies',
            company: 'AIA Brooklyn Chapter',
            city: 'NYC, USA',
            date: 'Feb 20, 2018',
          },
          {
            name: 'Jump Into VR Fest',
            company: 'Jump Into the Light',
            city: 'NYC, USA',
            date: 'Sep 17, 2017',
          },
        ];

        exports.default = lectures;

        /***/
      },
      /* 320 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.about__h1, .about__h2 {\n  font-weight: 300;\n  font-family: "Alegreya Sans SC", sans-serif; }\n\n.about__h1 {\n  font-size: 1.9rem; }\n\n.about__h2 {\n  font-size: 1.6rem; }\n\n.about__h1 {\n  margin-top: 0; }\n\n.about__h2 {\n  margin-top: 2.5rem; }\n\n.about__content {\n  font-size: 1.25rem;\n  line-height: 1.5rem; }\n\n.about__paragraph {\n  font-size: 1rem; }\n\n.about__ul {\n  padding-left: 20px;\n  list-style-type: disc; }\n\n.about__li {\n  margin: 0 0 0.6rem 0; }\n  .about__li-grid {\n    margin: 0;\n    display: grid;\n    grid-template-columns: 1fr 180px;\n    font-size: 1.25rem; }\n  .about__li-right {\n    text-align: right; }\n  .about__li-p {\n    font-size: 1rem;\n    margin: 0.1rem 0 0 0; }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 321 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _NotFound = __webpack_require__(322);

        var _NotFound2 = _interopRequireDefault(_NotFound);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _NotFound2.default;

        /***/
      },
      /* 322 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function NotFound(props) {
          return _react2.default.createElement(
            'section',
            null,
            _react2.default.createElement(
              'p',
              null,
              'We are sorry but the page you are looking for does not exist'
            )
          );
        }

        exports.default = NotFound;

        /***/
      },
      /* 323 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Layout = __webpack_require__(324);

        Object.defineProperty(exports, 'default', {
          enumerable: true,
          get: function get() {
            return _interopRequireDefault(_Layout).default;
          },
        });

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /***/
      },
      /* 324 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ('value' in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(0);

        var React = _interopRequireWildcard(_react);

        var _reactHelmet = __webpack_require__(32);

        var _reactHelmet2 = _interopRequireDefault(_reactHelmet);

        var _Header = __webpack_require__(325);

        var _Header2 = _interopRequireDefault(_Header);

        var _Footer = __webpack_require__(338);

        var _Footer2 = _interopRequireDefault(_Footer);

        __webpack_require__(344);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key))
                  newObj[key] = obj[key];
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError('Cannot call a class as a function');
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === 'object' || typeof call === 'function')
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== 'function' && superClass !== null) {
            throw new TypeError(
              'Super expression must either be null or a function, not ' +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        // import 'normalize.css';

        var Layout = (function(_React$Component) {
          _inherits(Layout, _React$Component);

          function Layout() {
            _classCallCheck(this, Layout);

            return _possibleConstructorReturn(
              this,
              (Layout.__proto__ || Object.getPrototypeOf(Layout)).apply(
                this,
                arguments
              )
            );
          }

          _createClass(Layout, [
            {
              key: 'render',
              value: function render() {
                return React.createElement(
                  React.Fragment,
                  null,
                  React.createElement(_Header2.default, this.props),
                  React.createElement(
                    'main',
                    { className: 'main' },
                    React.createElement(
                      'section',
                      { className: 'main__content' },
                      this.props.children
                    )
                  ),
                  React.createElement(_Footer2.default, this.props)
                );
              },
            },
          ]);

          return Layout;
        })(React.Component);

        exports.default = Layout;

        /***/
      },
      /* 325 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Header = __webpack_require__(326);

        var _Header2 = _interopRequireDefault(_Header);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _Header2.default;

        /***/
      },
      /* 326 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactRedux = __webpack_require__(24);

        var _reactSizeComponents = __webpack_require__(100);

        var _reactSizeComponents2 = _interopRequireDefault(
          _reactSizeComponents
        );

        var _Nav = __webpack_require__(328);

        var _Nav2 = _interopRequireDefault(_Nav);

        var _Title = __webpack_require__(331);

        var _Title2 = _interopRequireDefault(_Title);

        var _MobileNav = __webpack_require__(334);

        var _MobileNav2 = _interopRequireDefault(_MobileNav);

        var _menuActions = __webpack_require__(101);

        __webpack_require__(337);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // const title = process.env.REACT_APP_SITE_TITLE;

        var MobileHeaderMarkup = function MobileHeaderMarkup() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            isMenuOn = _ref.isMenuOn,
            menuOff = _ref.menuOff,
            menuOn = _ref.menuOn,
            pages = _ref.pages,
            siteMetadata = _ref.siteMetadata;

          var icon = isMenuOn ? 'times' : 'bars';
          var iconClass = 'fa fa-' + icon + ' fa-lg mobile-header__hamburger';

          var style = {}; //isMenuOn ? { borderBottom: 'white 1px solid' } : null;
          return _react2.default.createElement(
            _react2.default.Fragment,
            null,
            _react2.default.createElement(
              'div',
              { className: 'mobile-header__container', style: style },
              _react2.default.createElement(
                'header',
                { className: 'mobile-header' },
                _react2.default.createElement('button', {
                  className: iconClass,
                  onClick: isMenuOn ? menuOff : menuOn,
                }),
                _react2.default.createElement(_Title2.default, {
                  text: siteMetadata.title,
                })
              )
            ),
            _react2.default.createElement(_MobileNav2.default, {
              pages: siteMetadata.navLayout.mainNav,
            })
          );
        };

        var HeaderMarkup = function HeaderMarkup(_ref2) {
          var isMobile = _ref2.isMobile,
            isMenuOn = _ref2.isMenuOn,
            menuOn = _ref2.menuOn,
            menuOff = _ref2.menuOff,
            siteMetadata = _ref2.siteMetadata;

          return _react2.default.createElement(
            'div',
            { className: 'header__container' },
            _react2.default.createElement(
              'header',
              { className: 'header' },
              _react2.default.createElement(_Title2.default, {
                text: siteMetadata.title,
              }),
              _react2.default.createElement(_Nav2.default, {
                pages: siteMetadata.navLayout.mainNav,
              })
            )
          );
        };

        var mapStateToProps = function mapStateToProps(state) {
          return {
            isMenuOn: state.menu.isMenuOn,
          };
        };

        var mapDispatchToProps = function mapDispatchToProps(dispatch) {
          return {
            menuOn: function menuOn() {
              return dispatch((0, _menuActions.menuOn)());
            },
            menuOff: function menuOff() {
              return dispatch((0, _menuActions.menuOff)());
            },
          };
        };

        var MobileHeader = (0, _reactRedux.connect)(
          mapStateToProps,
          mapDispatchToProps
        )(MobileHeaderMarkup);
        var Header = (0, _reactRedux.connect)(
          mapStateToProps,
          mapDispatchToProps
        )(HeaderMarkup);

        var HeaderContainer = function HeaderContainer(props) {
          return !props.sizes.mobile
            ? _react2.default.createElement(Header, props)
            : _react2.default.createElement(MobileHeader, props);
        };

        exports.default = (0, _reactRedux.connect)(mapStateToProps)(
          (0, _reactSizeComponents2.default)({ mobile: true })(HeaderContainer)
        );

        /***/
      },
      /* 327 */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        'use strict';
        /* unused harmony export fillFrom */
        /* unused harmony export fillWith */
        /* unused harmony export objectToArray */
        /* unused harmony export uniq */
        /* unused harmony export composeAsync */
        /* unused harmony export debounce */
        /* unused harmony export pipeAsync */
        /* unused harmony export throttle */
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'a',
          function() {
            return compose;
          }
        );
        /* unused harmony export createArrayMethodMutable */
        /* unused harmony export createArrayMethod */
        /* unused harmony export filterLeft */
        /* unused harmony export filterRight */
        /* unused harmony export filter */
        /* unused harmony export mapLeft */
        /* unused harmony export mapRight */
        /* unused harmony export map */
        /* unused harmony export pipe */
        /* unused harmony export sideEffects */
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          'b',
          function() {
            return equals;
          }
        );
        /* unused harmony export acceptStrings */
        /* unused harmony export camelToKebab */
        /* unused harmony export camelToPascal */
        /* unused harmony export camelToSentence */
        /* unused harmony export camelToSnake */
        /* unused harmony export camelToTitle */
        /* unused harmony export camelTo */
        /* unused harmony export capitalize */
        /* unused harmony export caseToCase */
        /* unused harmony export currencyString */
        /* unused harmony export dollarString */
        /* unused harmony export isLowerCase */
        /* unused harmony export isUpperCase */
        /* unused harmony export kebabToCamel */
        /* unused harmony export kebabToSentence */
        /* unused harmony export kebabToSnake */
        /* unused harmony export kebabToTitle */
        /* unused harmony export kebabTo */
        /* unused harmony export padDigits */
        /* unused harmony export padZero */
        /* unused harmony export percentString */
        /* unused harmony export percent */
        /* unused harmony export pixelString */
        /* unused harmony export sentenceToCamel */
        /* unused harmony export sentenceToKebab */
        /* unused harmony export sentenceToSnake */
        /* unused harmony export sentenceToTitle */
        /* unused harmony export sentenceTo */
        /* unused harmony export snakeToCamel */
        /* unused harmony export snakeToKebab */
        /* unused harmony export snakeToSentence */
        /* unused harmony export snakeTo */
        /* unused harmony export timeString */
        /* unused harmony export toCamel */
        /* unused harmony export toPascal */
        /* unused harmony export unitString */
        /* unused harmony export validateDecimal */
        /* unused harmony export validateHexadecimal */
        /* unused harmony export validateLetterString */
        /* unused harmony export validateNumber */
        var _typeof =
          typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol'
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === 'function' &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? 'symbol'
                  : typeof obj;
              };

        var asyncToGenerator = function(fn) {
          return function() {
            var gen = fn.apply(this, arguments);
            return new Promise(function(resolve, reject) {
              function step(key, arg) {
                try {
                  var info = gen[key](arg);
                  var value = info.value;
                } catch (error) {
                  reject(error);
                  return;
                }

                if (info.done) {
                  resolve(value);
                } else {
                  return Promise.resolve(value).then(
                    function(value) {
                      step('next', value);
                    },
                    function(err) {
                      step('throw', err);
                    }
                  );
                }
              }

              return step('next');
            });
          };
        };

        var toConsumableArray = function(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++)
              arr2[i] = arr[i];

            return arr2;
          } else {
            return Array.from(arr);
          }
        };

        var fillFrom = function fillFrom(increment) {
          return function() {
            var arr =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : [];
            return function() {
              var start =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : 0;
              var end = arguments[1];
              return start <= end
                ? fillFrom(increment)(
                    [].concat(toConsumableArray(arr), [start])
                  )(start + increment, end)
                : arr;
            };
          };
        };

        var fillFrom$1 = fillFrom(1)();

        var fillWith = function fillWith() {
          var arr =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : [];
          return function(num) {
            var val =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : 0;
            return !num
              ? arr
              : fillWith([].concat(toConsumableArray(arr), [val]))(
                  num - 1,
                  val
                );
          };
        };

        var fillWith$1 = fillWith();

        var objectToArray = function objectToArray(obj) {
          return Object.keys(obj).map(function(key) {
            return obj[key];
          });
        };

        /**
         * @param {array} arr input array containing the values you wish sort by uniqueness
         * @param {function} fn optional comparator function for traversing arrays of objects
         */
        var uniq = function uniq(arr) {
          var fn =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : function(obj) {
                  return obj;
                };

          var hash = {};

          return arr.filter(function(obj) {
            if (hash[fn(obj)]) return false;
            else {
              hash[fn(obj)] = true;
              return true;
            }
          });
        };

        /**
         * Make sure to use async as function and not arrow function to prevent babel/rollup issues
         * https://github.com/rollup/rollup/issues/1518
         */
        var pipeAsync = function pipeAsync(fn) {
          for (
            var _len = arguments.length,
              fns = Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            fns[_key - 1] = arguments[_key];
          }

          return asyncToGenerator(
            /*#__PURE__*/ regeneratorRuntime.mark(function _callee() {
              var _args = arguments;
              return regeneratorRuntime.wrap(
                function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        if (fns.length) {
                          _context.next = 6;
                          break;
                        }

                        _context.next = 3;
                        return fn.apply(undefined, _args);

                      case 3:
                        _context.t0 = _context.sent;
                        _context.next = 11;
                        break;

                      case 6:
                        _context.t1 = pipeAsync.apply(undefined, fns);
                        _context.next = 9;
                        return fn.apply(undefined, _args);

                      case 9:
                        _context.t2 = _context.sent;
                        _context.t0 = (0, _context.t1)(_context.t2);

                      case 11:
                        return _context.abrupt('return', _context.t0);

                      case 12:
                      case 'end':
                        return _context.stop();
                    }
                  }
                },
                _callee,
                this
              );
            })
          );
        };

        var composeAsync = function composeAsync() {
          for (
            var _len = arguments.length, fns = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            fns[_key] = arguments[_key];
          }

          return pipeAsync.apply(undefined, toConsumableArray(fns.reverse()));
        };

        /**
         * Debounce function to control the number of function calls
         * @param {function} fn the function to debounce
         * @param {number} wait number of milliseconds to wait
         * @param {boolean} leading whether to call the function on the leading edge
         */
        var debounce = function debounce(fn) {
          var wait =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 1000;
          var leading =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : false;

          var timeout = void 0;

          return function() {
            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            // establish context
            var context = this;
            // call
            var call = function call() {
              return fn.apply(context, args);
            };
            // call on leading edge
            if (leading && !timeout) call();
            // clear previous timeout
            clearTimeout(timeout);
            // set timeout for next call
            timeout = setTimeout(call, wait);
          };
        };

        var throttle = function throttle(fn, limit) {
          var lastCall = void 0;
          var timestamp = void 0;

          return function() {
            var _this = this;

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            var call = function call() {
              return fn.call.apply(fn, [_this].concat(args));
            };

            if (!timestamp) {
              call();
              timestamp = Date.now();
            } else {
              clearTimeout(lastCall);
              lastCall = setTimeout(function() {
                if (Date.now() - timestamp >= limit) {
                  call();
                  timestamp = Date.now();
                }
              }, limit - (Date.now() - timestamp));
            }
          };
        };

        /**
         * compose functions from left to right automatically currying arguments
         * @param {function} fn first function to pop off the stack and apply
         * @param {functions} fns remainder functions waiting to be applied
         * @param {arguments} args the arguments to curry to next function
         */
        var pipe = function pipe(fn) {
          for (
            var _len = arguments.length,
              fns = Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            fns[_key - 1] = arguments[_key];
          }

          return function() {
            return !fns.length
              ? fn.apply(undefined, arguments)
              : pipe.apply(undefined, fns)(fn.apply(undefined, arguments));
          };
        };

        /**
         * compose functions from right to left automatically currying arguments
         * @param {functions} fns functions (transformations) to perform
         */
        var compose = function compose() {
          for (
            var _len = arguments.length, fns = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            fns[_key] = arguments[_key];
          }

          return pipe.apply(undefined, toConsumableArray(fns.reverse()));
        };

        /**
         * Creates a functional recursive method to apply a series of transformations to an array using a mutable method
         * @param {string} method array method to create a functional composition method for
         * @param {function} fn the first function to pop off the stack
         * @param {functions} fns the remaining functions waiting to be applied via the array method
         * @param {array} arr the array to pass in to the manipulations
         */
        var createArrayMethodMutable = function createArrayMethodMutable(
          method
        ) {
          // this code is only run on building the methods and is internal type checking
          // does not execute when you are actually using the methods
          if (typeof Array.prototype[method] !== 'function')
            throw new Error('This method cannot be created');

          var manipulate = function manipulate(fn) {
            for (
              var _len = arguments.length,
                fns = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              fns[_key - 1] = arguments[_key];
            }

            return function(arr) {
              return !fns.length
                ? arr.slice()[method](fn)
                : manipulate.apply(undefined, fns)(arr.slice()[method](fn));
            };
          };

          return manipulate;
        };

        /**
         * Creates a functional recursive method to apply a series of transformations to an array
         * @param {string} method array method to create a functional composition method for
         * @param {function} fn the first function to pop off the stack
         * @param {functions} fns the remaining functions waiting to be applied via the array method
         * @param {array} arr the array to pass in to the manipulations
         */
        var createArrayMethod = function createArrayMethod(method) {
          // this code is only run on building the methods and is internal type checking
          // does not execute when you are actually using the methods
          if (typeof Array.prototype[method] !== 'function')
            throw new Error('This method cannot be created');

          var manipulate = function manipulate(fn) {
            for (
              var _len = arguments.length,
                fns = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              fns[_key - 1] = arguments[_key];
            }

            return function(arr) {
              return !fns.length
                ? arr[method](fn)
                : manipulate.apply(undefined, fns)(arr[method](fn));
            };
          };

          return manipulate;
        };

        var filterRight = createArrayMethod('filter');

        var filterLeft = function filterLeft() {
          for (
            var _len = arguments.length, fns = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            fns[_key] = arguments[_key];
          }

          return filterRight.apply(undefined, toConsumableArray(fns.reverse()));
        };

        var mapRight = createArrayMethod('map');

        var mapLeft = function mapLeft() {
          for (
            var _len = arguments.length, fns = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            fns[_key] = arguments[_key];
          }

          return mapRight.apply(undefined, toConsumableArray(fns.reverse()));
        };

        /**
         * This function performs sideEffects while returning the same value. Useful while composing so that your side effects are documented
         * @param {function} fn pass in a function to perform side effects while keeping the compositional flow of functional programming style
         * @param {args} arguments pass through argument
         */
        var sideEffects = function sideEffects(fn) {
          return function(args) {
            fn(args);
            return args;
          };
        };

        // import equals from 'deep-equal';
        // export default equals;

        var isObject = function isObject(val) {
          return (
            (typeof val === 'undefined' ? 'undefined' : _typeof(val)) ===
              'object' && val !== null
          );
        };

        var comparePrimitives = function comparePrimitives(value, compare) {
          if (Number.isNaN(value) && Number.isNaN(compare)) return true;
          else return value === compare;
        };

        var equals = function equals(actual, expected) {
          // Check if input is object or primitive
          if (isObject(actual)) {
            var keys = Object.keys(actual);
            // check if key lengths match (for speed)
            if (keys.length !== Object.keys(expected).length) return false;
            // compare key values
            return (
              keys
                // map to boolean values
                .map(function(key, i) {
                  // safely access object properties
                  if (expected[key] !== undefined) {
                    var value = actual[key];
                    var compare = expected[key];
                    if (isObject(value)) return equals(value, compare);
                    else return comparePrimitives(value, compare);
                  } else {
                    return Object.keys(expected).includes(key);
                  }
                })
                // reduce to single boolean
                .reduce(function(a, b) {
                  return a && b;
                }, true)
            );
          }
          // return primitive comparison
          return comparePrimitives(actual, expected);
        };

        /**
         * Throws an error if type other then string is used as argument
         * @param  {[type]} input [description]
         * @return {[type]}       [description]
         */
        var acceptStrings = function acceptStrings(input) {
          if (typeof input !== 'string')
            throw new Error(
              'The function only accepts input of type: string. You submitted input of type: ' +
                (typeof input === 'undefined' ? 'undefined' : _typeof(input))
            );

          return input;
        };

        /**
         * Ensures that the argument is a string of length one
         * @param  {string} string the string to test
         * @return {string}        the same string provided it meets the requirements
         */
        var validateLetterString = function validateLetterString(string) {
          if (string.length !== 1)
            throw new Error(
              'this function only accepts strings of length equal to 1'
            );

          return string;
        };

        /**
         * Tests whether a letter is uppercase or not
         * @param  {string}  letter the letter to test
         * @return {boolean}        boolean value of whether the letter is upper case
         */
        var _isUpperCase = function _isUpperCase(letter) {
          return letter !== letter.toLowerCase();
        };

        var isUpperCase = compose(
          _isUpperCase,
          validateLetterString
        );

        /**
         * Creates a camelCase converter function
         * @param  {string} separator the seperator to insert at a camelcase division
         * @param  {string} str       the string to convert
         * @return {function}         the converter function
         * @return {string}           the converted string
         */
        var camelTo = function camelTo(separator) {
          return function(str) {
            return str
              .split('')
              .map(function(letter) {
                return isUpperCase(letter)
                  ? separator + letter.toLowerCase()
                  : letter;
              })
              .join('');
          };
        };

        /**
         * Converts a camelCase string to kebab-case
         * @type {[type]}
         */
        var camelToKebab = compose(
          camelTo('-'),
          acceptStrings
        );

        var camelToPascal = function camelToPascal(str) {
          return str.slice(0, 1).toUpperCase() + str.slice(1);
        };

        var camelToPascal$1 = compose(
          camelToPascal,
          acceptStrings
        );

        var camelToSentence = compose(
          camelTo(' '),
          acceptStrings
        );

        var camelToSnake = compose(
          camelTo('_'),
          acceptStrings
        );

        /**
         * @param {string} str input string
         * @param {string} split split or character to split string at
         */
        var capitalize = function capitalize(str) {
          var split =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : ' ';
          return str
            .split(split)
            .map(function(word) {
              return word.slice(0, 1).toUpperCase() + word.slice(1);
            })
            .join(split);
        };

        var camelToTitle = compose(
          capitalize,
          camelTo(' '),
          acceptStrings
        );

        var caseToCase = function caseToCase(first) {
          return function(second) {
            return function(str) {
              return str.split(first).join(second);
            };
          };
        };

        var padDigits = function padDigits(pad) {
          return function(num) {
            return num < 10 ? '' + pad + num : num.toString();
          };
        };

        var padZero = padDigits(0);

        var currencyString = function currencyString(currencySymbol) {
          return function(number) {
            var base = Math.floor(number);
            var decimal = Math.round((number - base) * 100);
            return (
              '' + currencySymbol + base.toString() + '.' + padZero(decimal)
            );
          };
        };

        var dollarString = currencyString('$');

        /**
         * Tests whether a letter is lowercase or not
         * @param  {string}  letter the letter to test
         * @return {boolean}        boolean value of whether the letter is upper case
         */
        var _isLowerCase = function _isLowerCase(letter) {
          return letter !== letter.toUpperCase();
        };

        var isLowerCase = compose(
          _isLowerCase,
          validateLetterString
        );

        var toCamel = function toCamel(seperator) {
          return function(str) {
            return str
              .split(seperator)
              .map(function(word, i) {
                return i !== 0
                  ? word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase()
                  : word.toLowerCase();
              })
              .join('');
          };
        };

        /**
         * Converts kebab-case to camelCase
         * @type {[type]}
         */
        var kebabToCamel = compose(
          toCamel('-'),
          acceptStrings
        );

        var kebabTo = caseToCase('-');

        /**
         * Converts kebab-case to sentence case
         * @type {[type]}
         */
        var kebabToSentence = compose(
          kebabTo(' '),
          acceptStrings
        );

        /**
         * Converts kebab-case to snake_case
         * @type {[type]}
         */
        var kebabToSnake = compose(
          kebabTo('_'),
          acceptStrings
        );

        /**
         * Converts a kebab-case string to Title Case
         * @param {string}
         */
        var kebabToTitle = compose(
          capitalize,
          kebabTo(' '),
          acceptStrings
        );

        var unitString = function unitString(unit) {
          return function(val) {
            return '' + val + unit;
          };
        };

        var percentString = unitString('%');

        var percent = function percent(x, y) {
          return percentString(Math.round((x / y) * 100));
        };

        var pixelString = unitString('px');

        var sentenceToCamel = toCamel(' ');

        var sentenceTo = caseToCase(' ');

        var sentenceToKebab = sentenceTo('-');

        var sentenceToSnake = sentenceTo('_');

        /**
         * Converts sentence case to Title Case
         * @type {[type]}
         */
        var _sentenceToTitle = function _sentenceToTitle(string) {
          return string
            .split(' ')
            .map(function(word) {
              return word.slice(0, 1).toUpperCase() + word.slice(1);
            })
            .join(' ');
        };

        var sentenceToTitle = compose(
          _sentenceToTitle,
          acceptStrings
        );

        var snakeToCamel = toCamel('_');

        var snakeTo = caseToCase('_');

        var snakeToKebab = snakeTo('-');

        var snakeToSentence = snakeTo(' ');

        var validateNumber = function validateNumber(base) {
          return function(unknown) {
            var type =
              typeof unknown === 'undefined' ? 'undefined' : _typeof(unknown);
            return type === 'number'
              ? unknown
              : type === 'string'
                ? parseInt(unknown, base)
                : 0;
          };
        };

        var validateDecimal = validateNumber(10);

        var hours = function hours(time) {
          return Math.floor(time / 3600);
        };
        var minutes = function minutes(time) {
          return Math.floor(time / 60);
        };
        var seconds = function seconds(time) {
          return Math.floor(time % 60);
        };

        var timeString = function timeString(char) {
          return function(time) {
            var valid = validateDecimal(time);

            return !hours(time)
              ? '' + minutes(time) + char + padZero(seconds(time))
              : '' +
                  hours(time) +
                  char +
                  padZero(minutes(time)) +
                  char +
                  padZero(seconds(time));
          };
        };

        var timeString$1 = timeString(':');

        var toPascal = function toPascal(seperator) {
          return function(str) {
            return str
              .split(seperator)
              .map(function(word) {
                return (
                  word.slice(0, 1).toUpperCase() + word.slice(1).toLowerCase()
                );
              })
              .join('');
          };
        };

        var validateHexadecimal = validateNumber(16);

        //# sourceMappingURL=smalldash.esm.js.map

        /***/
      },
      /* 328 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Nav = __webpack_require__(329);

        var _Nav2 = _interopRequireDefault(_Nav);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _Nav2.default;

        /***/
      },
      /* 329 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactStatic = __webpack_require__(7);

        __webpack_require__(330);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var displaySlug = function displaySlug(slug) {
          var arr = slug.split('/');
          var word = arr[arr.length - 1];

          return word.slice(0, 1).toUpperCase() + word.slice(1);
        };

        function Nav(props) {
          var Links = props.pages.map(function(slug, index, arr) {
            var modifier = index === 0 ? 'menu__item-first' : 'menu__item-nth';

            return _react2.default.createElement(
              _react2.default.Fragment,
              { key: slug },
              _react2.default.createElement(
                _reactStatic.Link,
                { className: 'menu__item ' + modifier, to: slug },
                _react2.default.createElement('span', null, displaySlug(slug))
              ),
              index < arr.length - 1
                ? _react2.default.createElement('span', null, '|')
                : null
            );
          });

          return _react2.default.createElement(
            'nav',
            { className: 'menu' },
            Links
          );
        }

        exports.default = Nav;

        /***/
      },
      /* 330 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.menu {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  margin: 10px 0 0 0;\n  width: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  position: sticky;\n  top: 0; }\n  .menu__item {\n    font-family: "Alegreya Sans SC", sans-serif;\n    margin: 0 20px;\n    -webkit-transition: background 0.35s, color 0.35s;\n    -moz-transition: background 0.35s, color 0.35s;\n    -ms-transition: background 0.35s, color 0.35s;\n    transition: background 0.35s, color 0.35s;\n    box-sizing: border-box;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n    font-size: 1.5em; }\n    .menu__item-first {\n      margin: 0 20px 0 0; }\n    .menu__item:hover {\n      color: rgba(0, 0, 0, 0.6); }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 331 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _Title = __webpack_require__(332);

        var _Title2 = _interopRequireDefault(_Title);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _Title2.default;

        /***/
      },
      /* 332 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        __webpack_require__(333);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var Title = function Title() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            text = _ref.text;

          var spans = text.split('').map(function(letter, index) {
            return _react2.default.createElement(
              'span',
              { className: 'title__letter', key: 'letter-' + index },
              letter
            );
          });
          return _react2.default.createElement(
            'section',
            { className: 'title' },
            _react2.default.createElement(
              'h1',
              { className: 'title__text' },
              spans
            )
          );
        };

        exports.default = Title;

        /***/
      },
      /* 333 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.title__text {\n  font-weight: 300;\n  font-family: "Alegreya Sans SC", sans-serif; }\n\n.title {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column;\n  width: 100%; }\n  @media (min-width: 200px) and (max-width: 767px) {\n    .title {\n      padding-top: 0; } }\n  .title__text {\n    margin: 0;\n    box-sizing: border-box;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    justify-content: flex-start;\n    width: 100%;\n    font-size: 3.4em; }\n    @media (min-width: 200px) and (max-width: 767px) {\n      .title__text {\n        justify-content: space-between; } }\n    @media (min-width: 1240px) and (max-width: 1439px) {\n      .title__text {\n        font-size: 3.2em; } }\n    @media (min-width: 768px) and (max-width: 1239px) {\n      .title__text {\n        font-size: 3em; } }\n    @media (min-width: 600px) and (max-width: 767px) {\n      .title__text {\n        font-size: 2em; } }\n    @media (min-width: 200px) and (max-width: 599px) {\n      .title__text {\n        font-size: 1.5em; } }\n  .title__letter {\n    margin: 0 20px 0 0;\n    font-weight: 500; }\n    @media (min-width: 200px) and (max-width: 599px) {\n      .title__letter {\n        margin: 0; } }\n    @media (min-width: 600px) and (max-width: 767px) {\n      .title__letter {\n        margin: 0; } }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 334 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _MobileNav = __webpack_require__(335);

        var _MobileNav2 = _interopRequireDefault(_MobileNav);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _MobileNav2.default;

        /***/
      },
      /* 335 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactStatic = __webpack_require__(7);

        var _reactRedux = __webpack_require__(24);

        var _menuActions = __webpack_require__(101);

        __webpack_require__(336);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var displaySlug = function displaySlug(slug) {
          var arr = slug.split('/');
          var word = arr[arr.length - 1];

          return word.slice(0, 1).toUpperCase() + word.slice(1);
        };

        var MobileNav = function MobileNav() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            pages = _ref.pages,
            mobileMenuStyle = _ref.mobileMenuStyle,
            menuOff = _ref.menuOff;

          return _react2.default.createElement(
            'nav',
            { style: mobileMenuStyle, className: 'mobile-menu' },
            pages.map(function(slug, index) {
              return _react2.default.createElement(
                _reactStatic.Link,
                {
                  key: slug + '-mobile-nav-' + index,
                  className: 'mobile-menu__item',
                  to: slug,
                  onClick: menuOff,
                },
                _react2.default.createElement('span', null, displaySlug(slug))
              );
            })
          );
        };

        var mapStateToProps = function mapStateToProps(state) {
          return {
            mobileMenuStyle: state.menu.mobileMenuStyle,
          };
        };

        var mapDispatchToProps = function mapDispatchToProps(dispatch) {
          return {
            menuOff: function menuOff() {
              dispatch((0, _menuActions.menuOff)());
            },
          };
        };

        exports.default = (0, _reactRedux.connect)(
          mapStateToProps,
          mapDispatchToProps
        )(MobileNav);

        /***/
      },
      /* 336 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.mobile-menu {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.9);\n  z-index: 999;\n  -webkit-transition: 0.5s opacity;\n  -moz-transition: 0.5s opacity;\n  -ms-transition: 0.5s opacity;\n  transition: 0.5s opacity; }\n  .mobile-menu__item {\n    color: black;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 1% 0;\n    font-size: 1.8em;\n    width: 100%; }\n    @media (min-width: 200px) and (max-width: 1239px) {\n      .mobile-menu__item {\n        font-size: 1.8em; } }\n    @media (min-width: 200px) and (max-width: 767px) {\n      .mobile-menu__item {\n        font-size: 1.8em; } }\n    .mobile-menu__item:hover {\n      color: rgba(0, 0, 0, 0.5); }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 337 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          'html,\nbody {\n  margin: 0;\n  font-family: "Alegreya Sans", sans-serif;\n  box-sizing: border-box; }\n\np,\na,\nul,\nol,\nli {\n  font-family: "Alegreya Sans", sans-serif;\n  font-weight: 300; }\n\nul,\nol,\nli {\n  list-style-type: disc; }\n\na {\n  text-decoration: none;\n  color: black;\n  -webkit-transition: 0.25s color;\n  -moz-transition: 0.25s color;\n  -ms-transition: 0.25s color;\n  transition: 0.25s color; }\n\na:hover {\n  color: rgba(0, 0, 0, 0.8); }\n\nimg {\n  max-width: 100%;\n  backface-visibility: hidden; }\n\n.root {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column; }\n\n.main {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  z-index: 1;\n  justify-content: center; }\n  @media (min-width: 200px) and (max-width: 767px) {\n    .main {\n      background: white; } }\n  .main__content {\n    padding: 2rem 0;\n    box-sizing: border-box;\n    width: 55%; }\n    @media (min-width: 1240px) and (max-width: 1439px) {\n      .main__content {\n        width: 65%; } }\n    @media (min-width: 768px) and (max-width: 1239px) {\n      .main__content {\n        width: 75%; } }\n    @media (min-width: 200px) and (max-width: 767px) {\n      .main__content {\n        width: 90%;\n        padding: 20px 0; } }\n\n.header {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  font-family: "Alegreya Sans SC", sans-serif;\n  font-weight: 100;\n  color: black;\n  padding: 40px 22.5% 40px 22.5%; }\n  @media (min-width: 768px) and (max-width: 1239px) {\n    .header {\n      padding: 20px 12.5%; } }\n  @media (min-width: 1240px) and (max-width: 1439px) {\n    .header {\n      padding: 20px 17.5%; } }\n  .header__container {\n    box-sizing: border-box;\n    width: 100%; }\n\n.mobile-header {\n  box-sizing: border-box;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(255, 255, 255, 0.98);\n  padding: 15px 5%;\n  box-shadow: 0px 2px 15px 0px rgba(0, 0, 0, 0.31); }\n  .mobile-header__container {\n    box-sizing: border-box;\n    position: sticky;\n    top: 0;\n    z-index: 1001; }\n  .mobile-header__hamburger {\n    cursor: pointer;\n    margin: 0;\n    padding: 0;\n    box-shadow: none;\n    border: none;\n    background: none;\n    color: black;\n    margin-right: 20px; }\n    .mobile-header__hamburger:hover {\n      background: none;\n      color: black; }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 338 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _FooterComponent = __webpack_require__(339);

        var _FooterComponent2 = _interopRequireDefault(_FooterComponent);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _FooterComponent2.default;

        /***/
      },
      /* 339 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _SiteMap = __webpack_require__(340);

        var _SiteMap2 = _interopRequireDefault(_SiteMap);

        var _reactSizeComponents = __webpack_require__(100);

        var _reactSizeComponents2 = _interopRequireDefault(
          _reactSizeComponents
        );

        __webpack_require__(343);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var Footer = function Footer() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            siteMetadata = _ref.siteMetadata;

          var year = new Date().getFullYear();
          return _react2.default.createElement(
            'footer',
            { className: 'footer' },
            _react2.default.createElement(_SiteMap2.default, {
              pages: siteMetadata.navLayout.footerNav,
            }),
            _react2.default.createElement(
              'p',
              { className: 'footer__text' },
              _react2.default.createElement('i', {
                className: 'fa fa-code footer__icon',
              }),
              ' Web Design by',
              ' ',
              _react2.default.createElement(
                'a',
                {
                  className: 'footer__link',
                  href: 'https://www.linkedin.com/in/nickmyersnyc/',
                  rel: 'noopener noreferrer',
                },
                'Nick Myers'
              )
            ),
            _react2.default.createElement(
              'p',
              { className: 'footer__text' },
              _react2.default.createElement('i', {
                className: 'fa fa-copyright footer__icon',
              }),
              ' ',
              year,
              ' ',
              siteMetadata.title
            )
          );
        };

        exports.default = (0, _reactSizeComponents2.default)({ mobile: true })(
          Footer
        );

        /***/
      },
      /* 340 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _SiteMap = __webpack_require__(341);

        var _SiteMap2 = _interopRequireDefault(_SiteMap);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _SiteMap2.default;

        /***/
      },
      /* 341 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _react = __webpack_require__(0);

        var _react2 = _interopRequireDefault(_react);

        var _reactStatic = __webpack_require__(7);

        __webpack_require__(342);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var displaySlug = function displaySlug(slug) {
          var arr = slug.split('/');
          var word = arr[arr.length - 1];

          return word.slice(0, 1).toUpperCase() + word.slice(1);
        };

        function SiteMap(_ref) {
          var pages = _ref.pages;

          return _react2.default.createElement(
            'nav',
            { className: 'site-map' },
            pages.map(function(slug, index) {
              return _react2.default.createElement(
                _react2.default.Fragment,
                { key: slug + '-footer-' + index },
                _react2.default.createElement(
                  _reactStatic.Link,
                  { className: 'site-map__link', to: slug },
                  _react2.default.createElement(
                    'span',
                    { className: 'site-map__label' },
                    displaySlug(slug)
                  )
                ),
                index < pages.length - 1
                  ? _react2.default.createElement(
                      'span',
                      { className: 'site-map__divider' },
                      '|'
                    )
                  : null
              );
            })
          );
        }

        exports.default = SiteMap;

        /***/
      },
      /* 342 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.site-map {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  width: 95%;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 4px 0 8px 0; }\n  .site-map__divider {\n    margin: 0 10px; }\n    @media (min-width: 200px) and (max-width: 767px) {\n      .site-map__divider {\n        margin: 0 6px; } }\n  .site-map__link {\n    font-family: "Alegreya Sans SC", sans-serif;\n    text-decoration: none;\n    color: black;\n    cursor: pointer;\n    -webkit-transition: 0.25s color ease;\n    -moz-transition: 0.25s color ease;\n    -ms-transition: 0.25s color ease;\n    transition: 0.25s color ease; }\n    .site-map__link:hover {\n      color: rgba(0, 0, 0, 0.7); }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 343 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          '.footer {\n  padding: 20px 0 20px 0;\n  color: black;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column; }\n  .footer__text {\n    font-size: 0.9em;\n    font-style: italic;\n    margin: 8px 0 0 0; }\n  .footer__link {\n    color: black;\n    -webkit-transition: 0.25s color ease;\n    -moz-transition: 0.25s color ease;\n    -ms-transition: 0.25s color ease;\n    transition: 0.25s color ease; }\n    .footer__link:hover {\n      color: rgba(0, 0, 0, 0.7); }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 344 */
      /***/ function(module, exports, __webpack_require__) {
        exports = module.exports = __webpack_require__(5)(false);
        // imports

        // module
        exports.push([
          module.i,
          'html,\nbody {\n  margin: 0;\n  font-family: "Alegreya Sans", sans-serif;\n  box-sizing: border-box; }\n\np,\na,\nul,\nol,\nli {\n  font-family: "Alegreya Sans", sans-serif;\n  font-weight: 300; }\n\nul,\nol,\nli {\n  list-style-type: disc; }\n\na {\n  text-decoration: none;\n  color: black;\n  -webkit-transition: 0.25s color;\n  -moz-transition: 0.25s color;\n  -ms-transition: 0.25s color;\n  transition: 0.25s color; }\n\na:hover {\n  color: rgba(0, 0, 0, 0.8); }\n\nimg {\n  max-width: 100%;\n  backface-visibility: hidden; }\n\n.root {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  flex-direction: column; }\n\n.main {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n  z-index: 1;\n  justify-content: center; }\n  @media (min-width: 200px) and (max-width: 767px) {\n    .main {\n      background: white; } }\n  .main__content {\n    padding: 2rem 0;\n    box-sizing: border-box;\n    width: 55%; }\n    @media (min-width: 1240px) and (max-width: 1439px) {\n      .main__content {\n        width: 65%; } }\n    @media (min-width: 768px) and (max-width: 1239px) {\n      .main__content {\n        width: 75%; } }\n    @media (min-width: 200px) and (max-width: 767px) {\n      .main__content {\n        width: 90%;\n        padding: 20px 0; } }\n',
          '',
        ]);

        // exports

        /***/
      },
      /* 345 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _store = __webpack_require__(346);

        var _store2 = _interopRequireDefault(_store);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = _store2.default;

        /***/
      },
      /* 346 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _redux = __webpack_require__(19);

        var _middleware = __webpack_require__(347);

        var _middleware2 = _interopRequireDefault(_middleware);

        var _throttle = __webpack_require__(348);

        var _throttle2 = _interopRequireDefault(_throttle);

        var _rootReducer = __webpack_require__(358);

        var _rootReducer2 = _interopRequireDefault(_rootReducer);

        var _localStorage = __webpack_require__(360);

        var _useStorage = __webpack_require__(361);

        var _useStorage2 = _interopRequireDefault(_useStorage);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var REFRESH = 24 * 60 * 60; // daily
        var INVALIDATE = 1522539462849; // Date.now()

        var application = (0, _localStorage.loadLocalApplication)();
        var persistedState = application ? application.state : undefined;

        // no date means 0 will automatically invalidate
        var stateDate = application ? application.date : 0;

        var store =
          'production' !== 'development' &&
          (0, _useStorage2.default)(REFRESH, INVALIDATE)(stateDate)
            ? (0, _middleware2.default)(_redux.createStore)(
                _rootReducer2.default,
                persistedState
              )
            : (0, _middleware2.default)(_redux.createStore)(
                _rootReducer2.default
              );

        if (true) {
          store.subscribe(
            (0, _throttle2.default)(function() {
              var application = {
                state: store.getState(),
                date: Date.now(),
              };

              (0, _localStorage.saveLocalApplication)(application);
            }),
            1000
          );
        }

        exports.default = store;

        /***/
      },
      /* 347 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _redux = __webpack_require__(19);

        var middlewares = [];

        if (false) {
          var _require = require('redux-logger'),
            logger = _require.logger;

          middlewares.push(logger);
        }

        exports.default = (0, _redux.compose)(
          _redux.applyMiddleware.apply(undefined, middlewares)
        );

        /***/
      },
      /* 348 */
      /***/ function(module, exports, __webpack_require__) {
        var debounce = __webpack_require__(349),
          isObject = __webpack_require__(44);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /**
         * Creates a throttled function that only invokes `func` at most once per
         * every `wait` milliseconds. The throttled function comes with a `cancel`
         * method to cancel delayed `func` invocations and a `flush` method to
         * immediately invoke them. Provide `options` to indicate whether `func`
         * should be invoked on the leading and/or trailing edge of the `wait`
         * timeout. The `func` is invoked with the last arguments provided to the
         * throttled function. Subsequent calls to the throttled function return the
         * result of the last `func` invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the throttled function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.throttle` and `_.debounce`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to throttle.
         * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=true]
         *  Specify invoking on the leading edge of the timeout.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new throttled function.
         * @example
         *
         * // Avoid excessively updating the position while scrolling.
         * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
         *
         * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
         * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
         * jQuery(element).on('click', throttled);
         *
         * // Cancel the trailing throttled invocation.
         * jQuery(window).on('popstate', throttled.cancel);
         */
        function throttle(func, wait, options) {
          var leading = true,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (isObject(options)) {
            leading = 'leading' in options ? !!options.leading : leading;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }
          return debounce(func, wait, {
            leading: leading,
            maxWait: wait,
            trailing: trailing,
          });
        }

        module.exports = throttle;

        /***/
      },
      /* 349 */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(44),
          now = __webpack_require__(350),
          toNumber = __webpack_require__(352);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = 'Expected a function';

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
          nativeMin = Math.min;

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
          var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = 'maxWait' in options;
            maxWait = maxing
              ? nativeMax(toNumber(options.maxWait) || 0, wait)
              : maxWait;
            trailing = 'trailing' in options ? !!options.trailing : trailing;
          }

          function invokeFunc(time) {
            var args = lastArgs,
              thisArg = lastThis;

            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }

          function leadingEdge(time) {
            // Reset any `maxWait` timer.
            lastInvokeTime = time;
            // Start the timer for the trailing edge.
            timerId = setTimeout(timerExpired, wait);
            // Invoke the leading edge.
            return leading ? invokeFunc(time) : result;
          }

          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;

            return maxing
              ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
              : timeWaiting;
          }

          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;

            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (
              lastCallTime === undefined ||
              timeSinceLastCall >= wait ||
              timeSinceLastCall < 0 ||
              (maxing && timeSinceLastInvoke >= maxWait)
            );
          }

          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            // Restart the timer.
            timerId = setTimeout(timerExpired, remainingWait(time));
          }

          function trailingEdge(time) {
            timerId = undefined;

            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }

          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }

          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }

          function debounced() {
            var time = now(),
              isInvoking = shouldInvoke(time);

            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;

            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }

        module.exports = debounce;

        /***/
      },
      /* 350 */
      /***/ function(module, exports, __webpack_require__) {
        var root = __webpack_require__(102);

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function() {
          return root.Date.now();
        };

        module.exports = now;

        /***/
      },
      /* 351 */
      /***/ function(module, exports) {
        /** Detect free variable `global` from Node.js. */
        var freeGlobal =
          typeof global == 'object' &&
          global &&
          global.Object === Object &&
          global;

        module.exports = freeGlobal;

        /***/
      },
      /* 352 */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(44),
          isSymbol = __webpack_require__(353);

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
          if (typeof value == 'number') {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other =
              typeof value.valueOf == 'function' ? value.valueOf() : value;
            value = isObject(other) ? other + '' : other;
          }
          if (typeof value != 'string') {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, '');
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value)
            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
            : reIsBadHex.test(value)
              ? NAN
              : +value;
        }

        module.exports = toNumber;

        /***/
      },
      /* 353 */
      /***/ function(module, exports, __webpack_require__) {
        var baseGetTag = __webpack_require__(354),
          isObjectLike = __webpack_require__(357);

        /** `Object#toString` result references. */
        var symbolTag = '[object Symbol]';

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            typeof value == 'symbol' ||
            (isObjectLike(value) && baseGetTag(value) == symbolTag)
          );
        }

        module.exports = isSymbol;

        /***/
      },
      /* 354 */
      /***/ function(module, exports, __webpack_require__) {
        var Symbol = __webpack_require__(103),
          getRawTag = __webpack_require__(355),
          objectToString = __webpack_require__(356);

        /** `Object#toString` result references. */
        var nullTag = '[object Null]',
          undefinedTag = '[object Undefined]';

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * The base implementation of `getTag` without fallbacks for buggy environments.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object(value)
            ? getRawTag(value)
            : objectToString(value);
        }

        module.exports = baseGetTag;

        /***/
      },
      /* 355 */
      /***/ function(module, exports, __webpack_require__) {
        var Symbol = __webpack_require__(103);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the raw `toStringTag`.
         */
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

          try {
            value[symToStringTag] = undefined;
            var unmasked = true;
          } catch (e) {}

          var result = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result;
        }

        module.exports = getRawTag;

        /***/
      },
      /* 356 */
      /***/ function(module, exports) {
        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /**
         * Converts `value` to a string using `Object.prototype.toString`.
         *
         * @private
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         */
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }

        module.exports = objectToString;

        /***/
      },
      /* 357 */
      /***/ function(module, exports) {
        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return value != null && typeof value == 'object';
        }

        module.exports = isObjectLike;

        /***/
      },
      /* 358 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _redux = __webpack_require__(19);

        var _menuReducer = __webpack_require__(359);

        var _menuReducer2 = _interopRequireDefault(_menuReducer);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var rootReducer = (0, _redux.combineReducers)({
          menu: _menuReducer2.default,
        });

        exports.default = rootReducer;

        /***/
      },
      /* 359 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        var initialMobileMenu = {
          position: 'absolute',
          left: '-9999px',
          opacity: 0,
        };

        var initialMenu = {
          styles: '',
          mobileMenuStyle: initialMobileMenu,
          desktopMenuStyle: initialMobileMenu,
          isMenuOn: false,
          isMobile: true,
        };

        var menuReducer = function menuReducer() {
          var state =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : initialMenu;
          var action = arguments[1];

          switch (action.type) {
            case 'DEVICE':
            case 'ORIENTATION':
            case 'MENU_STATE':
              return _extends(
                {},
                state,
                _defineProperty({}, action.key, action.payload)
              );
            case 'ANIMATE_MENU':
              return _extends({}, state, {
                mobileMenuStyle: _extends(
                  {},
                  state.mobileMenuStyle,
                  action.payload
                ),
              });
            default:
              return state;
          }
        };

        exports.default = menuReducer;

        /***/
      },
      /* 360 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        var loadLocalApplication = function loadLocalApplication() {
          try {
            var serializedState = localStorage.getItem('application');
            if (serializedState === null) {
              return undefined;
            }
            return JSON.parse(serializedState);
          } catch (err) {
            return undefined;
          }
        };

        var saveLocalApplication = function saveLocalApplication(application) {
          try {
            var serializedState = JSON.stringify(application);
            localStorage.setItem('application', serializedState);
          } catch (err) {}
        };

        exports.loadLocalApplication = loadLocalApplication;
        exports.saveLocalApplication = saveLocalApplication;

        /***/
      },
      /* 361 */
      /***/ function(module, exports, __webpack_require__) {
        'use strict';

        Object.defineProperty(exports, '__esModule', {
          value: true,
        });
        /**
         * Function for logic of when to use persisted state
         * @param {number} refresh amount of milliseconds since last visit to allow caches
         * @param {number} invalidate date in future upon which to stop invalidating all caches
         * @param {number} stateDate datestamp from persisted state cache
         */
        var useStorageStub = (exports.useStorageStub = function useStorageStub(
          refresh
        ) {
          return function(invalidate) {
            return function(stateDate) {
              return Date.now() - stateDate < refresh && invalidate < stateDate;
            };
          };
        });

        /**
         * Function to automatically link invalidation to refresh rate
         * @param {number} refresh amount of milliseconds since last visit to allow caches
         * @param {number} invalidate date.now() literal point in time to invalidate all caches for returning visitors
         */
        var useStorage = function useStorage(refresh, invalidate) {
          return useStorageStub(refresh)(invalidate + refresh);
        };

        exports.default = useStorage;

        /***/
      },
      /******/
    ]
  );
});
//# sourceMappingURL=static.57fdf73e.js.map
